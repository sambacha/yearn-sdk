{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_controller",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wantEarned",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lifetimeEarned",
          "type": "uint256"
        }
      ],
      "name": "Harvested",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "balanceOfPool",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "balanceOfWant",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "controller",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "crv",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "curve",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "dai",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "earned",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "gauge",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "governance",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "harvest",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "keepCRV",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "keepCRVMax",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "performanceFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "performanceMax",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "proxy",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_controller",
          "type": "address"
        }
      ],
      "name": "setController",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_governance",
          "type": "address"
        }
      ],
      "name": "setGovernance",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_keepCRV",
          "type": "uint256"
        }
      ],
      "name": "setKeepCRV",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_performanceFee",
          "type": "uint256"
        }
      ],
      "name": "setPerformanceFee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_proxy",
          "type": "address"
        }
      ],
      "name": "setProxy",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_strategist",
          "type": "address"
        }
      ],
      "name": "setStrategist",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_withdrawalFee",
          "type": "uint256"
        }
      ],
      "name": "setWithdrawalFee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "strategist",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "uni",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "voter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "want",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "weth",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawAll",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "withdrawalFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "withdrawalMax",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ydai",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/math/SafeMath.sol",
    "22": "contracts/strategies/StrategyCurveYVoterProxy.sol",
    "5": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/token/ERC20/IERC20.sol",
    "51": "interfaces/curve/Curve.sol",
    "6": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/token/ERC20/SafeERC20.sol",
    "60": "interfaces/uniswap/Uni.sol",
    "62": "interfaces/yearn/IController.sol",
    "69": "interfaces/yearn/IToken.sol",
    "7": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/utils/Address.sol",
    "71": "interfaces/yearn/IVoterProxy.sol"
  },
  "ast": {
    "absolutePath": "contracts/strategies/StrategyCurveYVoterProxy.sol",
    "exportedSymbols": {
      "StrategyCurveYVoterProxy": [
        10515
      ]
    },
    "id": 10516,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9663,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:22"
      },
      {
        "absolutePath": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelinV2/contracts/token/ERC20/IERC20.sol",
        "id": 9664,
        "nodeType": "ImportDirective",
        "scope": 10516,
        "sourceUnit": 30956,
        "src": "59:58:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/math/SafeMath.sol",
        "file": "@openzeppelinV2/contracts/math/SafeMath.sol",
        "id": 9665,
        "nodeType": "ImportDirective",
        "scope": 10516,
        "sourceUnit": 30887,
        "src": "118:53:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/utils/Address.sol",
        "file": "@openzeppelinV2/contracts/utils/Address.sol",
        "id": 9666,
        "nodeType": "ImportDirective",
        "scope": 10516,
        "sourceUnit": 31251,
        "src": "172:53:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/token/ERC20/SafeERC20.sol",
        "file": "@openzeppelinV2/contracts/token/ERC20/SafeERC20.sol",
        "id": 9667,
        "nodeType": "ImportDirective",
        "scope": 10516,
        "sourceUnit": 31176,
        "src": "226:61:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/yearn/IController.sol",
        "file": "../../interfaces/yearn/IController.sol",
        "id": 9668,
        "nodeType": "ImportDirective",
        "scope": 10516,
        "sourceUnit": 31645,
        "src": "289:48:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/curve/Gauge.sol",
        "file": "../../interfaces/curve/Gauge.sol",
        "id": 9669,
        "nodeType": "ImportDirective",
        "scope": 10516,
        "sourceUnit": 31891,
        "src": "338:42:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/curve/Mintr.sol",
        "file": "../../interfaces/curve/Mintr.sol",
        "id": 9670,
        "nodeType": "ImportDirective",
        "scope": 10516,
        "sourceUnit": 31899,
        "src": "381:42:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/uniswap/Uni.sol",
        "file": "../../interfaces/uniswap/Uni.sol",
        "id": 9671,
        "nodeType": "ImportDirective",
        "scope": 10516,
        "sourceUnit": 31934,
        "src": "424:42:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/curve/Curve.sol",
        "file": "../../interfaces/curve/Curve.sol",
        "id": 9672,
        "nodeType": "ImportDirective",
        "scope": 10516,
        "sourceUnit": 31854,
        "src": "467:42:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/yearn/IToken.sol",
        "file": "../../interfaces/yearn/IToken.sol",
        "id": 9673,
        "nodeType": "ImportDirective",
        "scope": 10516,
        "sourceUnit": 31952,
        "src": "510:43:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/yearn/IVoterProxy.sol",
        "file": "../../interfaces/yearn/IVoterProxy.sol",
        "id": 9674,
        "nodeType": "ImportDirective",
        "scope": 10516,
        "sourceUnit": 32060,
        "src": "554:48:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 10515,
        "linearizedBaseContracts": [
          10515
        ],
        "name": "StrategyCurveYVoterProxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 9677,
            "libraryName": {
              "contractScope": null,
              "id": 9675,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 31175,
              "src": "650:9:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$31175",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "644:27:22",
            "typeName": {
              "contractScope": null,
              "id": 9676,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 30955,
              "src": "664:6:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$30955",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 9680,
            "libraryName": {
              "contractScope": null,
              "id": 9678,
              "name": "Address",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 31250,
              "src": "682:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Address_$31250",
                "typeString": "library Address"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "676:26:22",
            "typeName": {
              "id": 9679,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "694:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 9683,
            "libraryName": {
              "contractScope": null,
              "id": 9681,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 30886,
              "src": "713:8:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$30886",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "707:27:22",
            "typeName": {
              "id": 9682,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "726:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": true,
            "id": 9688,
            "name": "want",
            "nodeType": "VariableDeclaration",
            "scope": 10515,
            "src": "740:82:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9684,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "740:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307864463565306538314466663646414633413765353242413639373832306335653332443830364138",
                  "id": 9686,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "779:42:22",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0xdF5e0e81Dff6FAF3A7e52BA697820c5e32D806A8"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 9685,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "771:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 9687,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "771:51:22",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 9693,
            "name": "crv",
            "nodeType": "VariableDeclaration",
            "scope": 10515,
            "src": "828:81:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9689,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "828:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307844353333613934393734306262333330366431313943433737376661393030624130333463643532",
                  "id": 9691,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "866:42:22",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0xD533a949740bb3306d119CC777fa900bA034cd52"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 9690,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "858:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 9692,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "858:51:22",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 9698,
            "name": "uni",
            "nodeType": "VariableDeclaration",
            "scope": 10515,
            "src": "915:81:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9694,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "915:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307837613235306435363330423463463533393733396446324335644163623463363539463234383844",
                  "id": 9696,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "953:42:22",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 9695,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "945:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 9697,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "945:51:22",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 9703,
            "name": "weth",
            "nodeType": "VariableDeclaration",
            "scope": 10515,
            "src": "1002:82:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9699,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1002:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307843303261614133396232323346453844304130653543344632376541443930383343373536436332",
                  "id": 9701,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1041:42:22",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 9700,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1033:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 9702,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1033:51:22",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 9708,
            "name": "dai",
            "nodeType": "VariableDeclaration",
            "scope": 10515,
            "src": "1128:81:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9704,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1128:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307836423137353437344538393039344334344461393862393534456564654143343935323731643046",
                  "id": 9706,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1166:42:22",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0x6B175474E89094C44Da98b954EedeAC495271d0F"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 9705,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1158:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 9707,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1158:51:22",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 9713,
            "name": "ydai",
            "nodeType": "VariableDeclaration",
            "scope": 10515,
            "src": "1215:82:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9709,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1215:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307831366465353930393264414535436346344131453634333944363131666430363533663042643031",
                  "id": 9711,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1254:42:22",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 9710,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1246:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 9712,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1246:51:22",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 9718,
            "name": "curve",
            "nodeType": "VariableDeclaration",
            "scope": 10515,
            "src": "1303:83:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9714,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1303:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307834354637383343434536423746463233423261623244373065343136636462374436303535663531",
                  "id": 9716,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1343:42:22",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0x45F783CCE6B7FF23B2ab2D70e416cdb7D6055f51"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 9715,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1335:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 9717,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1335:51:22",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 9723,
            "name": "gauge",
            "nodeType": "VariableDeclaration",
            "scope": 10515,
            "src": "1393:83:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9719,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1393:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307846413731324545343738384330343265324237424235354536636238656335363943343533306331",
                  "id": 9721,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1433:42:22",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0xFA712EE4788C042e2B7BB55E6cb8ec569C4530c1"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 9720,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1425:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 9722,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1425:51:22",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 9728,
            "name": "voter",
            "nodeType": "VariableDeclaration",
            "scope": 10515,
            "src": "1482:83:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9724,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1482:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307846313437623831323564326566393346423639363544623937443637343639353261313333393334",
                  "id": 9726,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1522:42:22",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0xF147b8125d2ef93FB6965Db97D6746952a133934"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 9725,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1514:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 9727,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1514:51:22",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 9731,
            "name": "keepCRV",
            "nodeType": "VariableDeclaration",
            "scope": 10515,
            "src": "1572:29:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9729,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1572:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31303030",
              "id": 9730,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1597:4:22",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000_by_1",
                "typeString": "int_const 1000"
              },
              "value": "1000"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 9734,
            "name": "keepCRVMax",
            "nodeType": "VariableDeclaration",
            "scope": 10515,
            "src": "1607:42:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9732,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1607:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3130303030",
              "id": 9733,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1644:5:22",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 9737,
            "name": "performanceFee",
            "nodeType": "VariableDeclaration",
            "scope": 10515,
            "src": "1656:35:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9735,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1656:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "353030",
              "id": 9736,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1688:3:22",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_500_by_1",
                "typeString": "int_const 500"
              },
              "value": "500"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 9740,
            "name": "performanceMax",
            "nodeType": "VariableDeclaration",
            "scope": 10515,
            "src": "1697:46:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9738,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1697:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3130303030",
              "id": 9739,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1738:5:22",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 9743,
            "name": "withdrawalFee",
            "nodeType": "VariableDeclaration",
            "scope": 10515,
            "src": "1750:33:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9741,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1750:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3530",
              "id": 9742,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1781:2:22",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_50_by_1",
                "typeString": "int_const 50"
              },
              "value": "50"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 9746,
            "name": "withdrawalMax",
            "nodeType": "VariableDeclaration",
            "scope": 10515,
            "src": "1789:45:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9744,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1789:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3130303030",
              "id": 9745,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1829:5:22",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 9748,
            "name": "proxy",
            "nodeType": "VariableDeclaration",
            "scope": 10515,
            "src": "1841:20:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9747,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1841:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 9750,
            "name": "governance",
            "nodeType": "VariableDeclaration",
            "scope": 10515,
            "src": "1868:25:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9749,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1868:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 9752,
            "name": "controller",
            "nodeType": "VariableDeclaration",
            "scope": 10515,
            "src": "1899:25:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9751,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1899:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 9754,
            "name": "strategist",
            "nodeType": "VariableDeclaration",
            "scope": 10515,
            "src": "1930:25:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9753,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1930:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 9756,
            "name": "earned",
            "nodeType": "VariableDeclaration",
            "scope": 10515,
            "src": "1962:21:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9755,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1962:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 9762,
            "name": "Harvested",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9761,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9758,
                  "indexed": false,
                  "name": "wantEarned",
                  "nodeType": "VariableDeclaration",
                  "scope": 9762,
                  "src": "2064:18:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9757,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2064:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9760,
                  "indexed": false,
                  "name": "lifetimeEarned",
                  "nodeType": "VariableDeclaration",
                  "scope": 9762,
                  "src": "2084:22:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9759,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2084:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2063:44:22"
            },
            "src": "2048:60:22"
          },
          {
            "body": {
              "id": 9781,
              "nodeType": "Block",
              "src": "2154:107:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 9767,
                      "name": "governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9750,
                      "src": "2164:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 9768,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33369,
                        "src": "2177:3:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 9769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2177:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2164:23:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 9771,
                  "nodeType": "ExpressionStatement",
                  "src": "2164:23:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 9772,
                      "name": "strategist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9754,
                      "src": "2197:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 9773,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33369,
                        "src": "2210:3:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 9774,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2210:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2197:23:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 9776,
                  "nodeType": "ExpressionStatement",
                  "src": "2197:23:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 9777,
                      "name": "controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9752,
                      "src": "2230:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 9778,
                      "name": "_controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9764,
                      "src": "2243:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2230:24:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 9780,
                  "nodeType": "ExpressionStatement",
                  "src": "2230:24:22"
                }
              ]
            },
            "documentation": null,
            "id": 9782,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9765,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9764,
                  "name": "_controller",
                  "nodeType": "VariableDeclaration",
                  "scope": 9782,
                  "src": "2126:19:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9763,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2126:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2125:21:22"
            },
            "returnParameters": {
              "id": 9766,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2154:0:22"
            },
            "scope": 10515,
            "src": "2114:147:22",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9789,
              "nodeType": "Block",
              "src": "2324:50:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "5374726174656779437572766559566f74657250726f7879",
                    "id": 9787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2341:26:22",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_dcecae95bcff9005c0c17ac9c28dcbcb21463abfb9d86ad1ab7b3e2dd350d185",
                      "typeString": "literal_string \"StrategyCurveYVoterProxy\""
                    },
                    "value": "StrategyCurveYVoterProxy"
                  },
                  "functionReturnParameters": 9786,
                  "id": 9788,
                  "nodeType": "Return",
                  "src": "2334:33:22"
                }
              ]
            },
            "documentation": null,
            "id": 9790,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getName",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9783,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2283:2:22"
            },
            "returnParameters": {
              "id": 9786,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9785,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 9790,
                  "src": "2309:13:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9784,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2309:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2308:15:22"
            },
            "scope": 10515,
            "src": "2267:107:22",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9807,
              "nodeType": "Block",
              "src": "2433:99:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 9799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 9796,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33369,
                            "src": "2451:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 9797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2451:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 9798,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9750,
                          "src": "2465:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2451:24:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 9800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2477:13:22",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 9795,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        33372,
                        33373
                      ],
                      "referencedDeclaration": 33373,
                      "src": "2443:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2443:48:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9802,
                  "nodeType": "ExpressionStatement",
                  "src": "2443:48:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 9803,
                      "name": "strategist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9754,
                      "src": "2501:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 9804,
                      "name": "_strategist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9792,
                      "src": "2514:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2501:24:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 9806,
                  "nodeType": "ExpressionStatement",
                  "src": "2501:24:22"
                }
              ]
            },
            "documentation": null,
            "id": 9808,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setStrategist",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9793,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9792,
                  "name": "_strategist",
                  "nodeType": "VariableDeclaration",
                  "scope": 9808,
                  "src": "2403:19:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9791,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2403:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2402:21:22"
            },
            "returnParameters": {
              "id": 9794,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2433:0:22"
            },
            "scope": 10515,
            "src": "2380:152:22",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9825,
              "nodeType": "Block",
              "src": "2585:93:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 9817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 9814,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33369,
                            "src": "2603:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 9815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2603:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 9816,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9750,
                          "src": "2617:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2603:24:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 9818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2629:13:22",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 9813,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        33372,
                        33373
                      ],
                      "referencedDeclaration": 33373,
                      "src": "2595:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2595:48:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9820,
                  "nodeType": "ExpressionStatement",
                  "src": "2595:48:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 9821,
                      "name": "keepCRV",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9731,
                      "src": "2653:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 9822,
                      "name": "_keepCRV",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9810,
                      "src": "2663:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2653:18:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9824,
                  "nodeType": "ExpressionStatement",
                  "src": "2653:18:22"
                }
              ]
            },
            "documentation": null,
            "id": 9826,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setKeepCRV",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9811,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9810,
                  "name": "_keepCRV",
                  "nodeType": "VariableDeclaration",
                  "scope": 9826,
                  "src": "2558:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9809,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2558:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2557:18:22"
            },
            "returnParameters": {
              "id": 9812,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2585:0:22"
            },
            "scope": 10515,
            "src": "2538:140:22",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9843,
              "nodeType": "Block",
              "src": "2743:105:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 9835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 9832,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33369,
                            "src": "2761:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 9833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2761:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 9834,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9750,
                          "src": "2775:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2761:24:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 9836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2787:13:22",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 9831,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        33372,
                        33373
                      ],
                      "referencedDeclaration": 33373,
                      "src": "2753:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2753:48:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9838,
                  "nodeType": "ExpressionStatement",
                  "src": "2753:48:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 9839,
                      "name": "withdrawalFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9743,
                      "src": "2811:13:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 9840,
                      "name": "_withdrawalFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9828,
                      "src": "2827:14:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2811:30:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9842,
                  "nodeType": "ExpressionStatement",
                  "src": "2811:30:22"
                }
              ]
            },
            "documentation": null,
            "id": 9844,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setWithdrawalFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9829,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9828,
                  "name": "_withdrawalFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 9844,
                  "src": "2710:22:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9827,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2710:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2709:24:22"
            },
            "returnParameters": {
              "id": 9830,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2743:0:22"
            },
            "scope": 10515,
            "src": "2684:164:22",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9861,
              "nodeType": "Block",
              "src": "2915:107:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 9853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 9850,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33369,
                            "src": "2933:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 9851,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2933:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 9852,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9750,
                          "src": "2947:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2933:24:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 9854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2959:13:22",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 9849,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        33372,
                        33373
                      ],
                      "referencedDeclaration": 33373,
                      "src": "2925:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2925:48:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9856,
                  "nodeType": "ExpressionStatement",
                  "src": "2925:48:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 9857,
                      "name": "performanceFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9737,
                      "src": "2983:14:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 9858,
                      "name": "_performanceFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9846,
                      "src": "3000:15:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2983:32:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9860,
                  "nodeType": "ExpressionStatement",
                  "src": "2983:32:22"
                }
              ]
            },
            "documentation": null,
            "id": 9862,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setPerformanceFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9847,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9846,
                  "name": "_performanceFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 9862,
                  "src": "2881:23:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9845,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2881:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2880:25:22"
            },
            "returnParameters": {
              "id": 9848,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2915:0:22"
            },
            "scope": 10515,
            "src": "2854:168:22",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9879,
              "nodeType": "Block",
              "src": "3071:89:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 9871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 9868,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33369,
                            "src": "3089:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 9869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3089:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 9870,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9750,
                          "src": "3103:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3089:24:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 9872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3115:13:22",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 9867,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        33372,
                        33373
                      ],
                      "referencedDeclaration": 33373,
                      "src": "3081:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3081:48:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9874,
                  "nodeType": "ExpressionStatement",
                  "src": "3081:48:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9877,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 9875,
                      "name": "proxy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9748,
                      "src": "3139:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 9876,
                      "name": "_proxy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9864,
                      "src": "3147:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3139:14:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 9878,
                  "nodeType": "ExpressionStatement",
                  "src": "3139:14:22"
                }
              ]
            },
            "documentation": null,
            "id": 9880,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setProxy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9865,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9864,
                  "name": "_proxy",
                  "nodeType": "VariableDeclaration",
                  "scope": 9880,
                  "src": "3046:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9863,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3046:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3045:16:22"
            },
            "returnParameters": {
              "id": 9866,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3071:0:22"
            },
            "scope": 10515,
            "src": "3028:132:22",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9915,
              "nodeType": "Block",
              "src": "3192:211:22",
              "statements": [
                {
                  "assignments": [
                    9884
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9884,
                      "name": "_want",
                      "nodeType": "VariableDeclaration",
                      "scope": 9915,
                      "src": "3202:13:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9883,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3202:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 9893,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 9890,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33461,
                            "src": "3249:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StrategyCurveYVoterProxy_$10515",
                              "typeString": "contract StrategyCurveYVoterProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StrategyCurveYVoterProxy_$10515",
                              "typeString": "contract StrategyCurveYVoterProxy"
                            }
                          ],
                          "id": 9889,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3241:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 9891,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3241:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 9886,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9688,
                            "src": "3225:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 9885,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30955,
                          "src": "3218:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$30955_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 9887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3218:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$30955",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 9888,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30900,
                      "src": "3218:22:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 9892,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3218:37:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3202:53:22"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 9896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 9894,
                      "name": "_want",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9884,
                      "src": "3269:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 9895,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3277:1:22",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3269:9:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 9914,
                  "nodeType": "IfStatement",
                  "src": "3265:132:22",
                  "trueBody": {
                    "id": 9913,
                    "nodeType": "Block",
                    "src": "3280:117:22",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 9901,
                              "name": "proxy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9748,
                              "src": "3320:5:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 9902,
                              "name": "_want",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9884,
                              "src": "3327:5:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 9898,
                                  "name": "want",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9688,
                                  "src": "3301:4:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 9897,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30955,
                                "src": "3294:6:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$30955_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 9899,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3294:12:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$30955",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 9900,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30988,
                            "src": "3294:25:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$30955_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$30955_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 9903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3294:39:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9904,
                        "nodeType": "ExpressionStatement",
                        "src": "3294:39:22"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 9909,
                              "name": "gauge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9723,
                              "src": "3374:5:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 9910,
                              "name": "want",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9688,
                              "src": "3381:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 9906,
                                  "name": "proxy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9748,
                                  "src": "3359:5:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 9905,
                                "name": "IVoterProxy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32059,
                                "src": "3347:11:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IVoterProxy_$32059_$",
                                  "typeString": "type(contract IVoterProxy)"
                                }
                              },
                              "id": 9907,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3347:18:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IVoterProxy_$32059",
                                "typeString": "contract IVoterProxy"
                              }
                            },
                            "id": 9908,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "deposit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32050,
                            "src": "3347:26:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address) external"
                            }
                          },
                          "id": 9911,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3347:39:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9912,
                        "nodeType": "ExpressionStatement",
                        "src": "3347:39:22"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 9916,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9881,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3182:2:22"
            },
            "returnParameters": {
              "id": 9882,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3192:0:22"
            },
            "scope": 10515,
            "src": "3166:237:22",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9983,
              "nodeType": "Block",
              "src": "3551:362:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 9927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 9924,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33369,
                            "src": "3569:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 9925,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3569:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 9926,
                          "name": "controller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9752,
                          "src": "3583:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3569:24:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21636f6e74726f6c6c6572",
                        "id": 9928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3595:13:22",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24c17b6ae2491863f0fd26020e5d3d9f5265ffe6e6a381149356ab902482b506",
                          "typeString": "literal_string \"!controller\""
                        },
                        "value": "!controller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24c17b6ae2491863f0fd26020e5d3d9f5265ffe6e6a381149356ab902482b506",
                          "typeString": "literal_string \"!controller\""
                        }
                      ],
                      "id": 9923,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        33372,
                        33373
                      ],
                      "referencedDeclaration": 33373,
                      "src": "3561:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3561:48:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9930,
                  "nodeType": "ExpressionStatement",
                  "src": "3561:48:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 9936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 9932,
                          "name": "want",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9688,
                          "src": "3627:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 9934,
                              "name": "_asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9918,
                              "src": "3643:6:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$30955",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$30955",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 9933,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3635:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 9935,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3635:15:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3627:23:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "77616e74",
                        "id": 9937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3652:6:22",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_71c7155ed36af613071923b6266b4e08ab22e1dee63ee866722ae1cd3ba12727",
                          "typeString": "literal_string \"want\""
                        },
                        "value": "want"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_71c7155ed36af613071923b6266b4e08ab22e1dee63ee866722ae1cd3ba12727",
                          "typeString": "literal_string \"want\""
                        }
                      ],
                      "id": 9931,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        33372,
                        33373
                      ],
                      "referencedDeclaration": 33373,
                      "src": "3619:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3619:40:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9939,
                  "nodeType": "ExpressionStatement",
                  "src": "3619:40:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 9945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 9941,
                          "name": "crv",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9693,
                          "src": "3677:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 9943,
                              "name": "_asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9918,
                              "src": "3692:6:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$30955",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$30955",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 9942,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3684:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 9944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3684:15:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3677:22:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "637276",
                        "id": 9946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3701:5:22",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf4672f78075baa915145c3dd1768b2acae76ee3e66285a6a117c4d143682dfe",
                          "typeString": "literal_string \"crv\""
                        },
                        "value": "crv"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bf4672f78075baa915145c3dd1768b2acae76ee3e66285a6a117c4d143682dfe",
                          "typeString": "literal_string \"crv\""
                        }
                      ],
                      "id": 9940,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        33372,
                        33373
                      ],
                      "referencedDeclaration": 33373,
                      "src": "3669:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3669:38:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9948,
                  "nodeType": "ExpressionStatement",
                  "src": "3669:38:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 9954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 9950,
                          "name": "ydai",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9713,
                          "src": "3725:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 9952,
                              "name": "_asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9918,
                              "src": "3741:6:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$30955",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$30955",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 9951,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3733:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 9953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3733:15:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3725:23:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "79646169",
                        "id": 9955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3750:6:22",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c228c597bc6f630e01be70de0da3fe13376e8103e99a86129bb579019dbde93f",
                          "typeString": "literal_string \"ydai\""
                        },
                        "value": "ydai"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c228c597bc6f630e01be70de0da3fe13376e8103e99a86129bb579019dbde93f",
                          "typeString": "literal_string \"ydai\""
                        }
                      ],
                      "id": 9949,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        33372,
                        33373
                      ],
                      "referencedDeclaration": 33373,
                      "src": "3717:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3717:40:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9957,
                  "nodeType": "ExpressionStatement",
                  "src": "3717:40:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 9963,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 9959,
                          "name": "dai",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9708,
                          "src": "3775:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 9961,
                              "name": "_asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9918,
                              "src": "3790:6:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$30955",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$30955",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 9960,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3782:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 9962,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3782:15:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3775:22:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "646169",
                        "id": 9964,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3799:5:22",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9f08c71555a1be56230b2e2579fafe4777867e0a1b947f01073e934471de15c1",
                          "typeString": "literal_string \"dai\""
                        },
                        "value": "dai"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9f08c71555a1be56230b2e2579fafe4777867e0a1b947f01073e934471de15c1",
                          "typeString": "literal_string \"dai\""
                        }
                      ],
                      "id": 9958,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        33372,
                        33373
                      ],
                      "referencedDeclaration": 33373,
                      "src": "3767:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3767:38:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9966,
                  "nodeType": "ExpressionStatement",
                  "src": "3767:38:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 9967,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9921,
                      "src": "3815:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 9971,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33461,
                              "src": "3850:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StrategyCurveYVoterProxy_$10515",
                                "typeString": "contract StrategyCurveYVoterProxy"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StrategyCurveYVoterProxy_$10515",
                                "typeString": "contract StrategyCurveYVoterProxy"
                              }
                            ],
                            "id": 9970,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3842:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 9972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3842:13:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 9968,
                          "name": "_asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9918,
                          "src": "3825:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$30955",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 9969,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30900,
                        "src": "3825:16:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 9973,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3825:31:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3815:41:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9975,
                  "nodeType": "ExpressionStatement",
                  "src": "3815:41:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9979,
                        "name": "controller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9752,
                        "src": "3886:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9980,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9921,
                        "src": "3898:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 9976,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9918,
                        "src": "3866:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$30955",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 9978,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30988,
                      "src": "3866:19:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$30955_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$30955_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 9981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3866:40:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9982,
                  "nodeType": "ExpressionStatement",
                  "src": "3866:40:22"
                }
              ]
            },
            "documentation": null,
            "id": 9984,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9919,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9918,
                  "name": "_asset",
                  "nodeType": "VariableDeclaration",
                  "scope": 9984,
                  "src": "3501:13:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$30955",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 9917,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 30955,
                    "src": "3501:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$30955",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3500:15:22"
            },
            "returnParameters": {
              "id": 9922,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9921,
                  "name": "balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 9984,
                  "src": "3534:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9920,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3534:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3533:17:22"
            },
            "scope": 10515,
            "src": "3483:430:22",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10082,
              "nodeType": "Block",
              "src": "4032:664:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 9993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 9990,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33369,
                            "src": "4050:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 9991,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4050:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 9992,
                          "name": "controller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9752,
                          "src": "4064:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4050:24:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21636f6e74726f6c6c6572",
                        "id": 9994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4076:13:22",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24c17b6ae2491863f0fd26020e5d3d9f5265ffe6e6a381149356ab902482b506",
                          "typeString": "literal_string \"!controller\""
                        },
                        "value": "!controller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24c17b6ae2491863f0fd26020e5d3d9f5265ffe6e6a381149356ab902482b506",
                          "typeString": "literal_string \"!controller\""
                        }
                      ],
                      "id": 9989,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        33372,
                        33373
                      ],
                      "referencedDeclaration": 33373,
                      "src": "4042:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4042:48:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9996,
                  "nodeType": "ExpressionStatement",
                  "src": "4042:48:22"
                },
                {
                  "assignments": [
                    9998
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9998,
                      "name": "_balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 10082,
                      "src": "4100:16:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9997,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4100:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 10007,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 10004,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33461,
                            "src": "4150:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StrategyCurveYVoterProxy_$10515",
                              "typeString": "contract StrategyCurveYVoterProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StrategyCurveYVoterProxy_$10515",
                              "typeString": "contract StrategyCurveYVoterProxy"
                            }
                          ],
                          "id": 10003,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4142:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 10005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4142:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 10000,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9688,
                            "src": "4126:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 9999,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30955,
                          "src": "4119:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$30955_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 10001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4119:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$30955",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 10002,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30900,
                      "src": "4119:22:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 10006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4119:37:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4100:56:22"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 10008,
                      "name": "_balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9998,
                      "src": "4170:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 10009,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9986,
                      "src": "4181:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4170:18:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 10028,
                  "nodeType": "IfStatement",
                  "src": "4166:140:22",
                  "trueBody": {
                    "id": 10027,
                    "nodeType": "Block",
                    "src": "4190:116:22",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 10018,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 10011,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9986,
                            "src": "4204:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 10015,
                                    "name": "_balance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9998,
                                    "src": "4240:8:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 10013,
                                    "name": "_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9986,
                                    "src": "4228:7:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 10014,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sub",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 30742,
                                  "src": "4228:11:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 10016,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4228:21:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 10012,
                              "name": "_withdrawSome",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10437,
                              "src": "4214:13:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256) returns (uint256)"
                              }
                            },
                            "id": 10017,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4214:36:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4204:46:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10019,
                        "nodeType": "ExpressionStatement",
                        "src": "4204:46:22"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 10025,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 10020,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9986,
                            "src": "4264:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 10023,
                                "name": "_balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9998,
                                "src": "4286:8:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 10021,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9986,
                                "src": "4274:7:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 10022,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 30726,
                              "src": "4274:11:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 10024,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4274:21:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4264:31:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10026,
                        "nodeType": "ExpressionStatement",
                        "src": "4264:31:22"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    10030
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10030,
                      "name": "_fee",
                      "nodeType": "VariableDeclaration",
                      "scope": 10082,
                      "src": "4316:12:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10029,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4316:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 10038,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10036,
                        "name": "withdrawalMax",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9746,
                        "src": "4362:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 10033,
                            "name": "withdrawalFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9743,
                            "src": "4343:13:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 10031,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9986,
                            "src": "4331:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 10032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30803,
                          "src": "4331:11:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 10034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4331:26:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 10035,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30819,
                      "src": "4331:30:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 10037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4331:45:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4316:60:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 10044,
                                "name": "controller",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9752,
                                "src": "4425:10:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 10043,
                              "name": "IController",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31644,
                              "src": "4413:11:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IController_$31644_$",
                                "typeString": "type(contract IController)"
                              }
                            },
                            "id": 10045,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4413:23:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IController_$31644",
                              "typeString": "contract IController"
                            }
                          },
                          "id": 10046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rewards",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31620,
                          "src": "4413:31:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 10047,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4413:33:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10048,
                        "name": "_fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10030,
                        "src": "4448:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 10040,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9688,
                            "src": "4394:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10039,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30955,
                          "src": "4387:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$30955_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 10041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4387:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$30955",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 10042,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30988,
                      "src": "4387:25:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$30955_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$30955_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 10049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4387:66:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10050,
                  "nodeType": "ExpressionStatement",
                  "src": "4387:66:22"
                },
                {
                  "assignments": [
                    10052
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10052,
                      "name": "_vault",
                      "nodeType": "VariableDeclaration",
                      "scope": 10082,
                      "src": "4463:14:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 10051,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4463:7:22",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 10061,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 10058,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9688,
                            "src": "4519:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10057,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4511:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 10059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4511:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 10054,
                            "name": "controller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9752,
                            "src": "4492:10:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10053,
                          "name": "IController",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31644,
                          "src": "4480:11:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IController_$31644_$",
                            "typeString": "type(contract IController)"
                          }
                        },
                        "id": 10055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4480:23:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IController_$31644",
                          "typeString": "contract IController"
                        }
                      },
                      "id": 10056,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "vaults",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31627,
                      "src": "4480:30:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                        "typeString": "function (address) view external returns (address)"
                      }
                    },
                    "id": 10060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4480:45:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4463:62:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10067,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 10063,
                          "name": "_vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10052,
                          "src": "4543:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 10065,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4561:1:22",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 10064,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4553:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 10066,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4553:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "4543:20:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "217661756c74",
                        "id": 10068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4565:8:22",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_935dae7e2471bb42a624e3787c1dd49fe36e63fd03e67a6f90f78ba819cb3825",
                          "typeString": "literal_string \"!vault\""
                        },
                        "value": "!vault"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_935dae7e2471bb42a624e3787c1dd49fe36e63fd03e67a6f90f78ba819cb3825",
                          "typeString": "literal_string \"!vault\""
                        }
                      ],
                      "id": 10062,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        33372,
                        33373
                      ],
                      "referencedDeclaration": 33373,
                      "src": "4535:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4535:39:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10070,
                  "nodeType": "ExpressionStatement",
                  "src": "4535:39:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10075,
                        "name": "_vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10052,
                        "src": "4663:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 10078,
                            "name": "_fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10030,
                            "src": "4683:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 10076,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9986,
                            "src": "4671:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 10077,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30742,
                          "src": "4671:11:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 10079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4671:17:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 10072,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9688,
                            "src": "4644:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10071,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30955,
                          "src": "4637:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$30955_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 10073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4637:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$30955",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 10074,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30988,
                      "src": "4637:25:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$30955_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$30955_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 10080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4637:52:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10081,
                  "nodeType": "ExpressionStatement",
                  "src": "4637:52:22"
                }
              ]
            },
            "documentation": null,
            "id": 10083,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9987,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9986,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 10083,
                  "src": "4006:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9985,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4006:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4005:17:22"
            },
            "returnParameters": {
              "id": 9988,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4032:0:22"
            },
            "scope": 10515,
            "src": "3988:708:22",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10138,
              "nodeType": "Block",
              "src": "4827:373:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 10089,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33369,
                            "src": "4845:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10090,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4845:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 10091,
                          "name": "controller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9752,
                          "src": "4859:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4845:24:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21636f6e74726f6c6c6572",
                        "id": 10093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4871:13:22",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24c17b6ae2491863f0fd26020e5d3d9f5265ffe6e6a381149356ab902482b506",
                          "typeString": "literal_string \"!controller\""
                        },
                        "value": "!controller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24c17b6ae2491863f0fd26020e5d3d9f5265ffe6e6a381149356ab902482b506",
                          "typeString": "literal_string \"!controller\""
                        }
                      ],
                      "id": 10088,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        33372,
                        33373
                      ],
                      "referencedDeclaration": 33373,
                      "src": "4837:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4837:48:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10095,
                  "nodeType": "ExpressionStatement",
                  "src": "4837:48:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 10096,
                      "name": "_withdrawAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10151,
                      "src": "4895:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 10097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4895:14:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10098,
                  "nodeType": "ExpressionStatement",
                  "src": "4895:14:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 10099,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10086,
                      "src": "4920:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 10105,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33461,
                              "src": "4961:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StrategyCurveYVoterProxy_$10515",
                                "typeString": "contract StrategyCurveYVoterProxy"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StrategyCurveYVoterProxy_$10515",
                                "typeString": "contract StrategyCurveYVoterProxy"
                              }
                            ],
                            "id": 10104,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4953:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 10106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4953:13:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 10101,
                              "name": "want",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9688,
                              "src": "4937:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 10100,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30955,
                            "src": "4930:6:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$30955_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 10102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4930:12:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$30955",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 10103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30900,
                        "src": "4930:22:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 10107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4930:37:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4920:47:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10109,
                  "nodeType": "ExpressionStatement",
                  "src": "4920:47:22"
                },
                {
                  "assignments": [
                    10111
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10111,
                      "name": "_vault",
                      "nodeType": "VariableDeclaration",
                      "scope": 10138,
                      "src": "4978:14:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 10110,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4978:7:22",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 10120,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 10117,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9688,
                            "src": "5034:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5026:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 10118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5026:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 10113,
                            "name": "controller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9752,
                            "src": "5007:10:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10112,
                          "name": "IController",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31644,
                          "src": "4995:11:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IController_$31644_$",
                            "typeString": "type(contract IController)"
                          }
                        },
                        "id": 10114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4995:23:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IController_$31644",
                          "typeString": "contract IController"
                        }
                      },
                      "id": 10115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "vaults",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31627,
                      "src": "4995:30:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                        "typeString": "function (address) view external returns (address)"
                      }
                    },
                    "id": 10119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4995:45:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4978:62:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 10122,
                          "name": "_vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10111,
                          "src": "5058:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 10124,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5076:1:22",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 10123,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5068:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 10125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5068:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "5058:20:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "217661756c74",
                        "id": 10127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5080:8:22",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_935dae7e2471bb42a624e3787c1dd49fe36e63fd03e67a6f90f78ba819cb3825",
                          "typeString": "literal_string \"!vault\""
                        },
                        "value": "!vault"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_935dae7e2471bb42a624e3787c1dd49fe36e63fd03e67a6f90f78ba819cb3825",
                          "typeString": "literal_string \"!vault\""
                        }
                      ],
                      "id": 10121,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        33372,
                        33373
                      ],
                      "referencedDeclaration": 33373,
                      "src": "5050:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5050:39:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10129,
                  "nodeType": "ExpressionStatement",
                  "src": "5050:39:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10134,
                        "name": "_vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10111,
                        "src": "5177:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10135,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10086,
                        "src": "5185:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 10131,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9688,
                            "src": "5158:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10130,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30955,
                          "src": "5151:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$30955_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 10132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5151:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$30955",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 10133,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30988,
                      "src": "5151:25:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$30955_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$30955_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 10136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5151:42:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10137,
                  "nodeType": "ExpressionStatement",
                  "src": "5151:42:22"
                }
              ]
            },
            "documentation": null,
            "id": 10139,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawAll",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10084,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4789:2:22"
            },
            "returnParameters": {
              "id": 10087,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10086,
                  "name": "balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 10139,
                  "src": "4810:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10085,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4810:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4809:17:22"
            },
            "scope": 10515,
            "src": "4769:431:22",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10150,
              "nodeType": "Block",
              "src": "5239:60:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10146,
                        "name": "gauge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9723,
                        "src": "5280:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10147,
                        "name": "want",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9688,
                        "src": "5287:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 10143,
                            "name": "proxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9748,
                            "src": "5261:5:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10142,
                          "name": "IVoterProxy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32059,
                          "src": "5249:11:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IVoterProxy_$32059_$",
                            "typeString": "type(contract IVoterProxy)"
                          }
                        },
                        "id": 10144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5249:18:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoterProxy_$32059",
                          "typeString": "contract IVoterProxy"
                        }
                      },
                      "id": 10145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32043,
                      "src": "5249:30:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) external returns (uint256)"
                      }
                    },
                    "id": 10148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5249:43:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10149,
                  "nodeType": "ExpressionStatement",
                  "src": "5249:43:22"
                }
              ]
            },
            "documentation": null,
            "id": 10151,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_withdrawAll",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10140,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5227:2:22"
            },
            "returnParameters": {
              "id": 10141,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5239:0:22"
            },
            "scope": 10515,
            "src": "5206:93:22",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10419,
              "nodeType": "Block",
              "src": "5331:1601:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 10158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 10155,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33369,
                              "src": "5349:3:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 10156,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5349:10:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 10157,
                            "name": "strategist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9754,
                            "src": "5363:10:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5349:24:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 10162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 10159,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33369,
                              "src": "5377:3:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 10160,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5377:10:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 10161,
                            "name": "governance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9750,
                            "src": "5391:10:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5377:24:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5349:52:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21617574686f72697a6564",
                        "id": 10164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5403:13:22",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d7031b85265729c6983ea6d4e363a4efb2dd08bdad971b2517bc786f89231cb6",
                          "typeString": "literal_string \"!authorized\""
                        },
                        "value": "!authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d7031b85265729c6983ea6d4e363a4efb2dd08bdad971b2517bc786f89231cb6",
                          "typeString": "literal_string \"!authorized\""
                        }
                      ],
                      "id": 10154,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        33372,
                        33373
                      ],
                      "referencedDeclaration": 33373,
                      "src": "5341:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5341:76:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10166,
                  "nodeType": "ExpressionStatement",
                  "src": "5341:76:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10171,
                        "name": "gauge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9723,
                        "src": "5454:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 10168,
                            "name": "proxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9748,
                            "src": "5439:5:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10167,
                          "name": "IVoterProxy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32059,
                          "src": "5427:11:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IVoterProxy_$32059_$",
                            "typeString": "type(contract IVoterProxy)"
                          }
                        },
                        "id": 10169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5427:18:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoterProxy_$32059",
                          "typeString": "contract IVoterProxy"
                        }
                      },
                      "id": 10170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "harvest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32055,
                      "src": "5427:26:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 10172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5427:33:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10173,
                  "nodeType": "ExpressionStatement",
                  "src": "5427:33:22"
                },
                {
                  "assignments": [
                    10175
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10175,
                      "name": "_crv",
                      "nodeType": "VariableDeclaration",
                      "scope": 10419,
                      "src": "5470:12:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10174,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5470:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 10184,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 10181,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33461,
                            "src": "5515:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StrategyCurveYVoterProxy_$10515",
                              "typeString": "contract StrategyCurveYVoterProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StrategyCurveYVoterProxy_$10515",
                              "typeString": "contract StrategyCurveYVoterProxy"
                            }
                          ],
                          "id": 10180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5507:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 10182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5507:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 10177,
                            "name": "crv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9693,
                            "src": "5492:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10176,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30955,
                          "src": "5485:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$30955_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 10178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5485:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$30955",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 10179,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30900,
                      "src": "5485:21:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 10183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5485:36:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5470:51:22"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 10185,
                      "name": "_crv",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10175,
                      "src": "5535:4:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 10186,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5542:1:22",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5535:8:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 10276,
                  "nodeType": "IfStatement",
                  "src": "5531:518:22",
                  "trueBody": {
                    "id": 10275,
                    "nodeType": "Block",
                    "src": "5545:504:22",
                    "statements": [
                      {
                        "assignments": [
                          10189
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 10189,
                            "name": "_keepCRV",
                            "nodeType": "VariableDeclaration",
                            "scope": 10275,
                            "src": "5559:16:22",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 10188,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5559:7:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 10197,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 10195,
                              "name": "keepCRVMax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9734,
                              "src": "5600:10:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 10192,
                                  "name": "keepCRV",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9731,
                                  "src": "5587:7:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 10190,
                                  "name": "_crv",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10175,
                                  "src": "5578:4:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 10191,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 30803,
                                "src": "5578:8:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 10193,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5578:17:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 10194,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30819,
                            "src": "5578:21:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 10196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5578:33:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5559:52:22"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 10202,
                              "name": "voter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9728,
                              "src": "5650:5:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 10203,
                              "name": "_keepCRV",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10189,
                              "src": "5657:8:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 10199,
                                  "name": "crv",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9693,
                                  "src": "5632:3:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 10198,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30955,
                                "src": "5625:6:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$30955_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 10200,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5625:11:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$30955",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 10201,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30988,
                            "src": "5625:24:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$30955_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$30955_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 10204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5625:41:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10205,
                        "nodeType": "ExpressionStatement",
                        "src": "5625:41:22"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 10211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 10206,
                            "name": "_crv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10175,
                            "src": "5680:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 10209,
                                "name": "_keepCRV",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10189,
                                "src": "5696:8:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 10207,
                                "name": "_crv",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10175,
                                "src": "5687:4:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 10208,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 30742,
                              "src": "5687:8:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 10210,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5687:18:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5680:25:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10212,
                        "nodeType": "ExpressionStatement",
                        "src": "5680:25:22"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 10217,
                              "name": "uni",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9698,
                              "src": "5744:3:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 10218,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5749:1:22",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 10214,
                                  "name": "crv",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9693,
                                  "src": "5727:3:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 10213,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30955,
                                "src": "5720:6:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$30955_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 10215,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5720:11:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$30955",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 10216,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 31054,
                            "src": "5720:23:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$30955_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$30955_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 10219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5720:31:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10220,
                        "nodeType": "ExpressionStatement",
                        "src": "5720:31:22"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 10225,
                              "name": "uni",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9698,
                              "src": "5789:3:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 10226,
                              "name": "_crv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10175,
                              "src": "5794:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 10222,
                                  "name": "crv",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9693,
                                  "src": "5772:3:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 10221,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30955,
                                "src": "5765:6:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$30955_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 10223,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5765:11:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$30955",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 10224,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 31054,
                            "src": "5765:23:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$30955_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$30955_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 10227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5765:34:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10228,
                        "nodeType": "ExpressionStatement",
                        "src": "5765:34:22"
                      },
                      {
                        "assignments": [
                          10232
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 10232,
                            "name": "path",
                            "nodeType": "VariableDeclaration",
                            "scope": 10275,
                            "src": "5814:21:22",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 10230,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5814:7:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 10231,
                              "length": null,
                              "nodeType": "ArrayTypeName",
                              "src": "5814:9:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 10238,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "33",
                              "id": 10236,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5852:1:22",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              "value": "3"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              }
                            ],
                            "id": 10235,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "5838:13:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
                              "typeString": "function (uint256) pure returns (address[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 10233,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5842:7:22",
                                "stateMutability": "nonpayable",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 10234,
                              "length": null,
                              "nodeType": "ArrayTypeName",
                              "src": "5842:9:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            }
                          },
                          "id": 10237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5838:16:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory",
                            "typeString": "address[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5814:40:22"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 10243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 10239,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10232,
                              "src": "5868:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 10241,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 10240,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5873:1:22",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5868:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 10242,
                            "name": "crv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9693,
                            "src": "5878:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5868:13:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 10244,
                        "nodeType": "ExpressionStatement",
                        "src": "5868:13:22"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 10249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 10245,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10232,
                              "src": "5895:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 10247,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 10246,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5900:1:22",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5895:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 10248,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9703,
                            "src": "5905:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5895:14:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 10250,
                        "nodeType": "ExpressionStatement",
                        "src": "5895:14:22"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 10255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 10251,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10232,
                              "src": "5923:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 10253,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 10252,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5928:1:22",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5923:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 10254,
                            "name": "dai",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9708,
                            "src": "5933:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5923:13:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 10256,
                        "nodeType": "ExpressionStatement",
                        "src": "5923:13:22"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 10261,
                              "name": "_crv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10175,
                              "src": "5985:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 10263,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5999:1:22",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 10262,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5991:7:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": "uint256"
                              },
                              "id": 10264,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5991:10:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 10265,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10232,
                              "src": "6003:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 10267,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33461,
                                  "src": "6017:4:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StrategyCurveYVoterProxy_$10515",
                                    "typeString": "contract StrategyCurveYVoterProxy"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StrategyCurveYVoterProxy_$10515",
                                    "typeString": "contract StrategyCurveYVoterProxy"
                                  }
                                ],
                                "id": 10266,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6009:7:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 10268,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6009:13:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "31383030",
                                  "id": 10271,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6032:4:22",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1800_by_1",
                                    "typeString": "int_const 1800"
                                  },
                                  "value": "1800"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1800_by_1",
                                    "typeString": "int_const 1800"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 10269,
                                  "name": "now",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33371,
                                  "src": "6024:3:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 10270,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "add",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 30726,
                                "src": "6024:7:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 10272,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6024:13:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 10258,
                                  "name": "uni",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9698,
                                  "src": "5955:3:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 10257,
                                "name": "Uni",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31933,
                                "src": "5951:3:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Uni_$31933_$",
                                  "typeString": "type(contract Uni)"
                                }
                              },
                              "id": 10259,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5951:8:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Uni_$31933",
                                "typeString": "contract Uni"
                              }
                            },
                            "id": 10260,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "swapExactTokensForTokens",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 31932,
                            "src": "5951:33:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,address[] memory,address,uint256) external"
                            }
                          },
                          "id": 10273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5951:87:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10274,
                        "nodeType": "ExpressionStatement",
                        "src": "5951:87:22"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    10278
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10278,
                      "name": "_dai",
                      "nodeType": "VariableDeclaration",
                      "scope": 10419,
                      "src": "6058:12:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10277,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6058:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 10287,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 10284,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33461,
                            "src": "6103:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StrategyCurveYVoterProxy_$10515",
                              "typeString": "contract StrategyCurveYVoterProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StrategyCurveYVoterProxy_$10515",
                              "typeString": "contract StrategyCurveYVoterProxy"
                            }
                          ],
                          "id": 10283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6095:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 10285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6095:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 10280,
                            "name": "dai",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9708,
                            "src": "6080:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10279,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30955,
                          "src": "6073:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$30955_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 10281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6073:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$30955",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 10282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30900,
                      "src": "6073:21:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 10286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6073:36:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6058:51:22"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 10288,
                      "name": "_dai",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10278,
                      "src": "6123:4:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 10289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6130:1:22",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6123:8:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 10315,
                  "nodeType": "IfStatement",
                  "src": "6119:160:22",
                  "trueBody": {
                    "id": 10314,
                    "nodeType": "Block",
                    "src": "6133:146:22",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 10295,
                              "name": "ydai",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9713,
                              "src": "6171:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 10296,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6177:1:22",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 10292,
                                  "name": "dai",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9708,
                                  "src": "6154:3:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 10291,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30955,
                                "src": "6147:6:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$30955_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 10293,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6147:11:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$30955",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 10294,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 31054,
                            "src": "6147:23:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$30955_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$30955_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 10297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6147:32:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10298,
                        "nodeType": "ExpressionStatement",
                        "src": "6147:32:22"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 10303,
                              "name": "ydai",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9713,
                              "src": "6217:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 10304,
                              "name": "_dai",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10278,
                              "src": "6223:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 10300,
                                  "name": "dai",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9708,
                                  "src": "6200:3:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 10299,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30955,
                                "src": "6193:6:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$30955_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 10301,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6193:11:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$30955",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 10302,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 31054,
                            "src": "6193:23:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$30955_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$30955_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 10305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6193:35:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10306,
                        "nodeType": "ExpressionStatement",
                        "src": "6193:35:22"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 10311,
                              "name": "_dai",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10278,
                              "src": "6263:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 10308,
                                  "name": "ydai",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9713,
                                  "src": "6249:4:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 10307,
                                "name": "yERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31951,
                                "src": "6242:6:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_yERC20_$31951_$",
                                  "typeString": "type(contract yERC20)"
                                }
                              },
                              "id": 10309,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6242:12:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_yERC20_$31951",
                                "typeString": "contract yERC20"
                              }
                            },
                            "id": 10310,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "deposit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 31940,
                            "src": "6242:20:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 10312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6242:26:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10313,
                        "nodeType": "ExpressionStatement",
                        "src": "6242:26:22"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    10317
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10317,
                      "name": "_ydai",
                      "nodeType": "VariableDeclaration",
                      "scope": 10419,
                      "src": "6288:13:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10316,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6288:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 10326,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 10323,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33461,
                            "src": "6335:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StrategyCurveYVoterProxy_$10515",
                              "typeString": "contract StrategyCurveYVoterProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StrategyCurveYVoterProxy_$10515",
                              "typeString": "contract StrategyCurveYVoterProxy"
                            }
                          ],
                          "id": 10322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6327:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 10324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6327:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 10319,
                            "name": "ydai",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9713,
                            "src": "6311:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10318,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30955,
                          "src": "6304:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$30955_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 10320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6304:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$30955",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 10321,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30900,
                      "src": "6304:22:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 10325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6304:37:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6288:53:22"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 10327,
                      "name": "_ydai",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10317,
                      "src": "6355:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 10328,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6363:1:22",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6355:9:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 10359,
                  "nodeType": "IfStatement",
                  "src": "6351:190:22",
                  "trueBody": {
                    "id": 10358,
                    "nodeType": "Block",
                    "src": "6366:175:22",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 10334,
                              "name": "curve",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9718,
                              "src": "6405:5:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 10335,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6412:1:22",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 10331,
                                  "name": "ydai",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9713,
                                  "src": "6387:4:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 10330,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30955,
                                "src": "6380:6:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$30955_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 10332,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6380:12:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$30955",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 10333,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 31054,
                            "src": "6380:24:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$30955_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$30955_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 10336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6380:34:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10337,
                        "nodeType": "ExpressionStatement",
                        "src": "6380:34:22"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 10342,
                              "name": "curve",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9718,
                              "src": "6453:5:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 10343,
                              "name": "_ydai",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10317,
                              "src": "6460:5:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 10339,
                                  "name": "ydai",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9713,
                                  "src": "6435:4:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 10338,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30955,
                                "src": "6428:6:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$30955_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 10340,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6428:12:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$30955",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 10341,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 31054,
                            "src": "6428:24:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$30955_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$30955_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 10344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6428:38:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10345,
                        "nodeType": "ExpressionStatement",
                        "src": "6428:38:22"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "components": [
                                {
                                  "argumentTypes": null,
                                  "id": 10350,
                                  "name": "_ydai",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10317,
                                  "src": "6511:5:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 10351,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6518:1:22",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 10352,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6521:1:22",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 10353,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6524:1:22",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "id": 10354,
                              "isConstant": false,
                              "isInlineArray": true,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "6510:16:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                                "typeString": "uint256[4] memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 10355,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6528:1:22",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                                "typeString": "uint256[4] memory"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 10347,
                                  "name": "curve",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9718,
                                  "src": "6489:5:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 10346,
                                "name": "ICurveFi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31843,
                                "src": "6480:8:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ICurveFi_$31843_$",
                                  "typeString": "type(contract ICurveFi)"
                                }
                              },
                              "id": 10348,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6480:15:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICurveFi_$31843",
                                "typeString": "contract ICurveFi"
                              }
                            },
                            "id": 10349,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add_liquidity",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 31775,
                            "src": "6480:29:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_uint256_$4_memory_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256[4] memory,uint256) external"
                            }
                          },
                          "id": 10356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6480:50:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10357,
                        "nodeType": "ExpressionStatement",
                        "src": "6480:50:22"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    10361
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10361,
                      "name": "_want",
                      "nodeType": "VariableDeclaration",
                      "scope": 10419,
                      "src": "6550:13:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10360,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6550:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 10370,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 10367,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33461,
                            "src": "6597:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StrategyCurveYVoterProxy_$10515",
                              "typeString": "contract StrategyCurveYVoterProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StrategyCurveYVoterProxy_$10515",
                              "typeString": "contract StrategyCurveYVoterProxy"
                            }
                          ],
                          "id": 10366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6589:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 10368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6589:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 10363,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9688,
                            "src": "6573:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10362,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30955,
                          "src": "6566:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$30955_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 10364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6566:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$30955",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 10365,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30900,
                      "src": "6566:22:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 10369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6566:37:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6550:53:22"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 10371,
                      "name": "_want",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10361,
                      "src": "6617:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 10372,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6625:1:22",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6617:9:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 10400,
                  "nodeType": "IfStatement",
                  "src": "6613:203:22",
                  "trueBody": {
                    "id": 10399,
                    "nodeType": "Block",
                    "src": "6628:188:22",
                    "statements": [
                      {
                        "assignments": [
                          10375
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 10375,
                            "name": "_fee",
                            "nodeType": "VariableDeclaration",
                            "scope": 10399,
                            "src": "6642:12:22",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 10374,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6642:7:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 10383,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 10381,
                              "name": "performanceMax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9740,
                              "src": "6687:14:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 10378,
                                  "name": "performanceFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9737,
                                  "src": "6667:14:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 10376,
                                  "name": "_want",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10361,
                                  "src": "6657:5:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 10377,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 30803,
                                "src": "6657:9:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 10379,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6657:25:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 10380,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30819,
                            "src": "6657:29:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 10382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6657:45:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6642:60:22"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 10389,
                                      "name": "controller",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 9752,
                                      "src": "6754:10:22",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 10388,
                                    "name": "IController",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31644,
                                    "src": "6742:11:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IController_$31644_$",
                                      "typeString": "type(contract IController)"
                                    }
                                  },
                                  "id": 10390,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6742:23:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IController_$31644",
                                    "typeString": "contract IController"
                                  }
                                },
                                "id": 10391,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "rewards",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 31620,
                                "src": "6742:31:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                  "typeString": "function () view external returns (address)"
                                }
                              },
                              "id": 10392,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6742:33:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 10393,
                              "name": "_fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10375,
                              "src": "6777:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 10385,
                                  "name": "want",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9688,
                                  "src": "6723:4:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 10384,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30955,
                                "src": "6716:6:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$30955_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 10386,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6716:12:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$30955",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 10387,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30988,
                            "src": "6716:25:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$30955_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$30955_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 10394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6716:66:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10395,
                        "nodeType": "ExpressionStatement",
                        "src": "6716:66:22"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 10396,
                            "name": "deposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9916,
                            "src": "6796:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 10397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6796:9:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10398,
                        "nodeType": "ExpressionStatement",
                        "src": "6796:9:22"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 10402,
                            "name": "proxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9748,
                            "src": "6837:5:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10401,
                          "name": "IVoterProxy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32059,
                          "src": "6825:11:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IVoterProxy_$32059_$",
                            "typeString": "type(contract IVoterProxy)"
                          }
                        },
                        "id": 10403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6825:18:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoterProxy_$32059",
                          "typeString": "contract IVoterProxy"
                        }
                      },
                      "id": 10404,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32058,
                      "src": "6825:23:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 10405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6825:25:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10406,
                  "nodeType": "ExpressionStatement",
                  "src": "6825:25:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 10407,
                      "name": "earned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9756,
                      "src": "6860:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 10410,
                          "name": "_want",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10361,
                          "src": "6880:5:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 10408,
                          "name": "earned",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9756,
                          "src": "6869:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30726,
                        "src": "6869:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 10411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6869:17:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6860:26:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10413,
                  "nodeType": "ExpressionStatement",
                  "src": "6860:26:22"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10415,
                        "name": "_want",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10361,
                        "src": "6911:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10416,
                        "name": "earned",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9756,
                        "src": "6918:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10414,
                      "name": "Harvested",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9762,
                      "src": "6901:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 10417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6901:24:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10418,
                  "nodeType": "EmitStatement",
                  "src": "6896:29:22"
                }
              ]
            },
            "documentation": null,
            "id": 10420,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "harvest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10152,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5321:2:22"
            },
            "returnParameters": {
              "id": 10153,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5331:0:22"
            },
            "scope": 10515,
            "src": "5305:1627:22",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10436,
              "nodeType": "Block",
              "src": "7005:73:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10431,
                        "name": "gauge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9723,
                        "src": "7050:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10432,
                        "name": "want",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9688,
                        "src": "7057:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10433,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10422,
                        "src": "7063:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 10428,
                            "name": "proxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9748,
                            "src": "7034:5:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10427,
                          "name": "IVoterProxy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32059,
                          "src": "7022:11:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IVoterProxy_$32059_$",
                            "typeString": "type(contract IVoterProxy)"
                          }
                        },
                        "id": 10429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7022:18:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoterProxy_$32059",
                          "typeString": "contract IVoterProxy"
                        }
                      },
                      "id": 10430,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32027,
                      "src": "7022:27:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 10434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7022:49:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 10426,
                  "id": 10435,
                  "nodeType": "Return",
                  "src": "7015:56:22"
                }
              ]
            },
            "documentation": null,
            "id": 10437,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_withdrawSome",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10423,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10422,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 10437,
                  "src": "6961:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10421,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6961:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6960:17:22"
            },
            "returnParameters": {
              "id": 10426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10425,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10437,
                  "src": "6996:7:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10424,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6996:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6995:9:22"
            },
            "scope": 10515,
            "src": "6938:140:22",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10451,
              "nodeType": "Block",
              "src": "7139:61:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 10447,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33461,
                            "src": "7187:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StrategyCurveYVoterProxy_$10515",
                              "typeString": "contract StrategyCurveYVoterProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StrategyCurveYVoterProxy_$10515",
                              "typeString": "contract StrategyCurveYVoterProxy"
                            }
                          ],
                          "id": 10446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7179:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 10448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7179:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 10443,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9688,
                            "src": "7163:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10442,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30955,
                          "src": "7156:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$30955_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 10444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7156:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$30955",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 10445,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30900,
                      "src": "7156:22:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 10449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7156:37:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 10441,
                  "id": 10450,
                  "nodeType": "Return",
                  "src": "7149:44:22"
                }
              ]
            },
            "documentation": null,
            "id": 10452,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOfWant",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10438,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7106:2:22"
            },
            "returnParameters": {
              "id": 10441,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10440,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10452,
                  "src": "7130:7:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10439,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7130:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7129:9:22"
            },
            "scope": 10515,
            "src": "7084:116:22",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10464,
              "nodeType": "Block",
              "src": "7261:59:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10461,
                        "name": "gauge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9723,
                        "src": "7307:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 10458,
                            "name": "proxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9748,
                            "src": "7290:5:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10457,
                          "name": "IVoterProxy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32059,
                          "src": "7278:11:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IVoterProxy_$32059_$",
                            "typeString": "type(contract IVoterProxy)"
                          }
                        },
                        "id": 10459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7278:18:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoterProxy_$32059",
                          "typeString": "contract IVoterProxy"
                        }
                      },
                      "id": 10460,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32034,
                      "src": "7278:28:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 10462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7278:35:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 10456,
                  "id": 10463,
                  "nodeType": "Return",
                  "src": "7271:42:22"
                }
              ]
            },
            "documentation": null,
            "id": 10465,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOfPool",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10453,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7228:2:22"
            },
            "returnParameters": {
              "id": 10456,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10455,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10465,
                  "src": "7252:7:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10454,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7252:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7251:9:22"
            },
            "scope": 10515,
            "src": "7206:114:22",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10477,
              "nodeType": "Block",
              "src": "7377:60:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 10473,
                          "name": "balanceOfPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10465,
                          "src": "7414:13:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 10474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7414:15:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 10470,
                          "name": "balanceOfWant",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10452,
                          "src": "7394:13:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 10471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7394:15:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 10472,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30726,
                      "src": "7394:19:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 10475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7394:36:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 10469,
                  "id": 10476,
                  "nodeType": "Return",
                  "src": "7387:43:22"
                }
              ]
            },
            "documentation": null,
            "id": 10478,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10466,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7344:2:22"
            },
            "returnParameters": {
              "id": 10469,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10468,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10478,
                  "src": "7368:7:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10467,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7368:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7367:9:22"
            },
            "scope": 10515,
            "src": "7326:111:22",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10495,
              "nodeType": "Block",
              "src": "7496:99:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 10484,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33369,
                            "src": "7514:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "7514:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 10486,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9750,
                          "src": "7528:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7514:24:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 10488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7540:13:22",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 10483,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        33372,
                        33373
                      ],
                      "referencedDeclaration": 33373,
                      "src": "7506:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7506:48:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10490,
                  "nodeType": "ExpressionStatement",
                  "src": "7506:48:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 10491,
                      "name": "governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9750,
                      "src": "7564:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 10492,
                      "name": "_governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10480,
                      "src": "7577:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7564:24:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 10494,
                  "nodeType": "ExpressionStatement",
                  "src": "7564:24:22"
                }
              ]
            },
            "documentation": null,
            "id": 10496,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setGovernance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10481,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10480,
                  "name": "_governance",
                  "nodeType": "VariableDeclaration",
                  "scope": 10496,
                  "src": "7466:19:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10479,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7466:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7465:21:22"
            },
            "returnParameters": {
              "id": 10482,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7496:0:22"
            },
            "scope": 10515,
            "src": "7443:152:22",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10513,
              "nodeType": "Block",
              "src": "7654:99:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 10502,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33369,
                            "src": "7672:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10503,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "7672:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 10504,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9750,
                          "src": "7686:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7672:24:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 10506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7698:13:22",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 10501,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        33372,
                        33373
                      ],
                      "referencedDeclaration": 33373,
                      "src": "7664:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7664:48:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10508,
                  "nodeType": "ExpressionStatement",
                  "src": "7664:48:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 10509,
                      "name": "controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9752,
                      "src": "7722:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 10510,
                      "name": "_controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10498,
                      "src": "7735:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7722:24:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 10512,
                  "nodeType": "ExpressionStatement",
                  "src": "7722:24:22"
                }
              ]
            },
            "documentation": null,
            "id": 10514,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setController",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10499,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10498,
                  "name": "_controller",
                  "nodeType": "VariableDeclaration",
                  "scope": 10514,
                  "src": "7624:19:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10497,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7624:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7623:21:22"
            },
            "returnParameters": {
              "id": 10500,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7654:0:22"
            },
            "scope": 10515,
            "src": "7601:152:22",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 10516,
        "src": "604:7151:22"
      }
    ],
    "src": "33:7723:22"
  },
  "bytecode": "",
  "bytecodeSha1": "9e8f9e9d193f7415dec989032378a3c3e07c83ed",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.5.17+commit.d19bba13"
  },
  "contractName": "StrategyCurveYVoterProxy",
  "coverageMap": {
    "branches": {
      "1": {
        "SafeMath.add": {
          "103": [
            946,
            952,
            true
          ]
        },
        "SafeMath.div": {
          "107": [
            3897,
            3902,
            true
          ]
        },
        "SafeMath.mul": {
          "104": [
            2458,
            2464,
            false
          ],
          "105": [
            2544,
            2554,
            true
          ]
        },
        "SafeMath.sub": {
          "106": [
            1845,
            1851,
            true
          ]
        }
      },
      "22": {
        "StrategyCurveYVoterProxy.deposit": {
          "98": [
            3269,
            3278,
            false
          ]
        },
        "StrategyCurveYVoterProxy.harvest": {
          "78": [
            5349,
            5373,
            true
          ],
          "79": [
            5377,
            5401,
            true
          ],
          "80": [
            5535,
            5543,
            false
          ],
          "81": [
            6123,
            6131,
            false
          ],
          "82": [
            6355,
            6364,
            false
          ],
          "83": [
            6617,
            6626,
            false
          ]
        },
        "StrategyCurveYVoterProxy.setController": {
          "92": [
            7672,
            7696,
            true
          ]
        },
        "StrategyCurveYVoterProxy.setGovernance": {
          "95": [
            7514,
            7538,
            true
          ]
        },
        "StrategyCurveYVoterProxy.setKeepCRV": {
          "93": [
            2603,
            2627,
            true
          ]
        },
        "StrategyCurveYVoterProxy.setPerformanceFee": {
          "89": [
            2933,
            2957,
            true
          ]
        },
        "StrategyCurveYVoterProxy.setProxy": {
          "94": [
            3089,
            3113,
            true
          ]
        },
        "StrategyCurveYVoterProxy.setStrategist": {
          "97": [
            2451,
            2475,
            true
          ]
        },
        "StrategyCurveYVoterProxy.setWithdrawalFee": {
          "96": [
            2761,
            2785,
            true
          ]
        },
        "StrategyCurveYVoterProxy.withdraw": {
          "75": [
            4050,
            4074,
            true
          ],
          "76": [
            4170,
            4188,
            false
          ],
          "77": [
            4543,
            4563,
            true
          ],
          "84": [
            3569,
            3593,
            true
          ],
          "85": [
            3627,
            3650,
            true
          ],
          "86": [
            3677,
            3699,
            true
          ],
          "87": [
            3725,
            3748,
            true
          ],
          "88": [
            3775,
            3797,
            true
          ]
        },
        "StrategyCurveYVoterProxy.withdrawAll": {
          "90": [
            4845,
            4869,
            true
          ],
          "91": [
            5058,
            5078,
            true
          ]
        }
      },
      "5": {},
      "51": {},
      "6": {
        "SafeERC20.callOptionalReturn": {
          "99": [
            3261,
            3288,
            true
          ],
          "100": [
            3479,
            3486,
            true
          ],
          "101": [
            3538,
            3559,
            false
          ],
          "102": [
            3667,
            3697,
            true
          ]
        }
      },
      "60": {},
      "62": {},
      "69": {},
      "7": {},
      "71": {}
    },
    "statements": {
      "1": {
        "SafeMath.add": {
          "61": [
            938,
            984
          ]
        },
        "SafeMath.div": {
          "64": [
            3150,
            3196
          ],
          "70": [
            3889,
            3917
          ]
        },
        "SafeMath.mul": {
          "62": [
            2480,
            2488
          ],
          "63": [
            2536,
            2592
          ]
        },
        "SafeMath.sub": {
          "59": [
            1351,
            1401
          ],
          "69": [
            1837,
            1866
          ]
        }
      },
      "22": {
        "StrategyCurveYVoterProxy._withdrawAll": {
          "68": [
            5249,
            5292
          ]
        },
        "StrategyCurveYVoterProxy._withdrawSome": {
          "60": [
            7015,
            7071
          ]
        },
        "StrategyCurveYVoterProxy.balanceOf": {
          "38": [
            7387,
            7430
          ]
        },
        "StrategyCurveYVoterProxy.balanceOfPool": {
          "0": [
            7271,
            7313
          ]
        },
        "StrategyCurveYVoterProxy.balanceOfWant": {
          "54": [
            7149,
            7193
          ]
        },
        "StrategyCurveYVoterProxy.deposit": {
          "57": [
            3294,
            3333
          ],
          "58": [
            3347,
            3386
          ]
        },
        "StrategyCurveYVoterProxy.getName": {
          "1": [
            2334,
            2367
          ]
        },
        "StrategyCurveYVoterProxy.harvest": {
          "8": [
            5341,
            5417
          ],
          "9": [
            5427,
            5460
          ],
          "10": [
            5625,
            5666
          ],
          "11": [
            5680,
            5705
          ],
          "12": [
            5720,
            5751
          ],
          "13": [
            5765,
            5799
          ],
          "14": [
            5868,
            5881
          ],
          "15": [
            5895,
            5909
          ],
          "16": [
            5923,
            5936
          ],
          "17": [
            5951,
            6038
          ],
          "18": [
            6147,
            6179
          ],
          "19": [
            6193,
            6228
          ],
          "20": [
            6242,
            6268
          ],
          "21": [
            6380,
            6414
          ],
          "22": [
            6428,
            6466
          ],
          "23": [
            6480,
            6530
          ],
          "24": [
            6716,
            6782
          ],
          "25": [
            6796,
            6805
          ],
          "26": [
            6825,
            6850
          ],
          "27": [
            6860,
            6886
          ],
          "28": [
            6896,
            6925
          ]
        },
        "StrategyCurveYVoterProxy.setController": {
          "44": [
            7664,
            7712
          ],
          "45": [
            7722,
            7746
          ]
        },
        "StrategyCurveYVoterProxy.setGovernance": {
          "50": [
            7506,
            7554
          ],
          "51": [
            7564,
            7588
          ]
        },
        "StrategyCurveYVoterProxy.setKeepCRV": {
          "46": [
            2595,
            2643
          ],
          "47": [
            2653,
            2671
          ]
        },
        "StrategyCurveYVoterProxy.setPerformanceFee": {
          "36": [
            2925,
            2973
          ],
          "37": [
            2983,
            3015
          ]
        },
        "StrategyCurveYVoterProxy.setProxy": {
          "48": [
            3081,
            3129
          ],
          "49": [
            3139,
            3153
          ]
        },
        "StrategyCurveYVoterProxy.setStrategist": {
          "55": [
            2443,
            2491
          ],
          "56": [
            2501,
            2525
          ]
        },
        "StrategyCurveYVoterProxy.setWithdrawalFee": {
          "52": [
            2753,
            2801
          ],
          "53": [
            2811,
            2841
          ]
        },
        "StrategyCurveYVoterProxy.withdraw": {
          "2": [
            4042,
            4090
          ],
          "3": [
            4204,
            4250
          ],
          "4": [
            4264,
            4295
          ],
          "5": [
            4387,
            4453
          ],
          "6": [
            4535,
            4574
          ],
          "7": [
            4637,
            4689
          ],
          "29": [
            3561,
            3609
          ],
          "30": [
            3619,
            3659
          ],
          "31": [
            3669,
            3707
          ],
          "32": [
            3717,
            3757
          ],
          "33": [
            3767,
            3805
          ],
          "34": [
            3815,
            3856
          ],
          "35": [
            3866,
            3906
          ]
        },
        "StrategyCurveYVoterProxy.withdrawAll": {
          "39": [
            4837,
            4885
          ],
          "40": [
            4895,
            4909
          ],
          "41": [
            4920,
            4967
          ],
          "42": [
            5050,
            5089
          ],
          "43": [
            5151,
            5193
          ]
        }
      },
      "5": {},
      "51": {},
      "6": {
        "SafeERC20.callOptionalReturn": {
          "71": [
            3253,
            3324
          ],
          "72": [
            3471,
            3523
          ],
          "73": [
            3659,
            3744
          ]
        },
        "SafeERC20.safeApprove": {
          "66": [
            1406,
            1556
          ],
          "67": [
            1566,
            1655
          ]
        },
        "SafeERC20.safeTransfer": {
          "65": [
            744,
            829
          ]
        }
      },
      "60": {},
      "62": {},
      "69": {},
      "7": {
        "Address.isContract": {
          "74": [
            1238,
            1289
          ]
        }
      },
      "71": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@2.5.1/Address",
    "IController",
    "ICurveFi",
    "OpenZeppelin/openzeppelin-contracts@2.5.1/IERC20",
    "IVoterProxy",
    "OpenZeppelin/openzeppelin-contracts@2.5.1/SafeERC20",
    "OpenZeppelin/openzeppelin-contracts@2.5.1/SafeMath",
    "Uni",
    "yERC20"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061021c5760003560e01c80638778878211610125578063c7b9d530116100ad578063e9751f6b1161007c578063e9751f6b14610386578063ec556889146104a0578063edc9af95146104a8578063f4b9fa75146104b0578063f77c4791146104b85761021c565b8063c7b9d5301461046a578063d0e30db014610490578063d5c1ff7314610386578063d6f19262146104985761021c565b806397107d6d116100f457806397107d6d146103f1578063a6f19c8414610417578063ab033ea91461041f578063ac1e502514610445578063c1a3d44c146104625761021c565b8063877887821461039e5780638bc7e8c4146103a657806392eefe9b146103ae578063955383bd146103d45761021c565b806351cff8d9116101a85780637165485d116101775780637165485d14610376578063722713f71461037e5780637cc79113146103865780637fef901a1461038e578063853828b6146103965761021c565b806351cff8d9146103235780635aa6e675146103495780636a4874a11461035157806370897b23146103595761021c565b80632e1a7d4d116101ef5780632e1a7d4d146102e4578063366cd4f3146103035780633fc8cef31461030b5780634641257d1461031357806346c96aac1461031b5761021c565b8063115880861461022157806317d7de7c1461023b5780631f1fcd51146102b85780631fe4a686146102dc575b600080fd5b6102296104c0565b60408051918252519081900360200190f35b610243610550565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561027d578181015183820152602001610265565b50505050905090810190601f1680156102aa5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102c0610587565b604080516001600160a01b039092168252519081900360200190f35b6102c0610599565b610301600480360360208110156102fa57600080fd5b50356105a8565b005b6102c061086c565b6102c0610884565b61030161089c565b6102c0611198565b6102296004803603602081101561033957600080fd5b50356001600160a01b03166111b0565b6102c06113fa565b6102c0611409565b6103016004803603602081101561036f57600080fd5b5035611421565b6102c0611473565b61022961148b565b6102296114b1565b6102296114b7565b6102296114bd565b610229611680565b610229611686565b610301600480360360208110156103c457600080fd5b50356001600160a01b031661168c565b610301600480360360208110156103ea57600080fd5b50356116fb565b6103016004803603602081101561040757600080fd5b50356001600160a01b031661174d565b6102c06117bc565b6103016004803603602081101561043557600080fd5b50356001600160a01b03166117d4565b6103016004803603602081101561045b57600080fd5b5035611843565b610229611895565b6103016004803603602081101561048057600080fd5b50356001600160a01b03166118e4565b610301611953565b610229611a92565b6102c0611a98565b6102c0611aa7565b6102c0611abf565b6102c0611ad7565b600354604080516370a0823160e01b815273fa712ee4788c042e2b7bb55e6cb8ec569c4530c1600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561051f57600080fd5b505afa158015610533573d6000803e3d6000fd5b505050506040513d602081101561054957600080fd5b5051905090565b60408051808201909152601881527f5374726174656779437572766559566f74657250726f78790000000000000000602082015290565b6000805160206121d183398151915281565b6006546001600160a01b031681565b6005546001600160a01b031633146105f5576040805162461bcd60e51b815260206004820152600b60248201526a10b1b7b73a3937b63632b960a91b604482015290519081900360640190fd5b604080516370a0823160e01b815230600482015290516000916000805160206121d1833981519152916370a0823191602480820192602092909190829003018186803b15801561064457600080fd5b505afa158015610658573d6000803e3d6000fd5b505050506040513d602081101561066e57600080fd5b50519050818110156106a75761069261068d838363ffffffff611ae616565b611b31565b91506106a4828263ffffffff611bde16565b91505b60006106d06127106106c460025486611c3890919063ffffffff16565b9063ffffffff611c9116565b905061076b600560009054906101000a90046001600160a01b03166001600160a01b0316639ec5a8946040518163ffffffff1660e01b815260040160206040518083038186803b15801561072357600080fd5b505afa158015610737573d6000803e3d6000fd5b505050506040513d602081101561074d57600080fd5b50516000805160206121d1833981519152908363ffffffff611cd316565b60055460408051632988bb9f60e21b81526000805160206121d1833981519152600482015290516000926001600160a01b03169163a622ee7c916024808301926020929190829003018186803b1580156107c457600080fd5b505afa1580156107d8573d6000803e3d6000fd5b505050506040513d60208110156107ee57600080fd5b505190506001600160a01b038116610836576040805162461bcd60e51b8152602060048201526006602482015265085d985d5b1d60d21b604482015290519081900360640190fd5b6108668161084a868563ffffffff611ae616565b6000805160206121d1833981519152919063ffffffff611cd316565b50505050565b7316de59092dae5ccf4a1e6439d611fd0653f0bd0181565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b6006546001600160a01b03163314806108bf57506004546001600160a01b031633145b6108fe576040805162461bcd60e51b815260206004820152600b60248201526a08585d5d1a1bdc9a5e995960aa1b604482015290519081900360640190fd5b6003546040805163072e008f60e11b815273fa712ee4788c042e2b7bb55e6cb8ec569c4530c1600482015290516001600160a01b0390921691630e5c011e9160248082019260009290919082900301818387803b15801561095e57600080fd5b505af1158015610972573d6000803e3d6000fd5b5050604080516370a0823160e01b815230600482015290516000935073d533a949740bb3306d119cc777fa900ba034cd5292506370a0823191602480820192602092909190829003018186803b1580156109cb57600080fd5b505afa1580156109df573d6000803e3d6000fd5b505050506040513d60208110156109f557600080fd5b505190508015610caa576000610a1c6127106106c460005485611c3890919063ffffffff16565b9050610a5773d533a949740bb3306d119cc777fa900ba034cd5273f147b8125d2ef93fb6965db97d6746952a1339348363ffffffff611cd316565b610a67828263ffffffff611ae616565b9150610aa373d533a949740bb3306d119cc777fa900ba034cd52737a250d5630b4cf539739df2c5dacb4c659f2488d600063ffffffff611d2a16565b610adc73d533a949740bb3306d119cc777fa900ba034cd52737a250d5630b4cf539739df2c5dacb4c659f2488d8463ffffffff611d2a16565b6040805160038082526080820190925260609160208201838038833901905050905073d533a949740bb3306d119cc777fa900ba034cd5281600081518110610b2057fe5b60200260200101906001600160a01b031690816001600160a01b03168152505073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281600181518110610b6257fe5b60200260200101906001600160a01b031690816001600160a01b031681525050736b175474e89094c44da98b954eedeac495271d0f81600281518110610ba457fe5b6001600160a01b0390921660209283029190910190910152737a250d5630b4cf539739df2c5dacb4c659f2488d6338ed17398460008430610bed4261070863ffffffff611bde16565b6040518663ffffffff1660e01b81526004018086815260200185815260200180602001846001600160a01b03166001600160a01b03168152602001838152602001828103825285818151815260200191508051906020019060200280838360005b83811015610c66578181015183820152602001610c4e565b505050509050019650505050505050600060405180830381600087803b158015610c8f57600080fd5b505af1158015610ca3573d6000803e3d6000fd5b5050505050505b604080516370a0823160e01b81523060048201529051600091736b175474e89094c44da98b954eedeac495271d0f916370a0823191602480820192602092909190829003018186803b158015610cff57600080fd5b505afa158015610d13573d6000803e3d6000fd5b505050506040513d6020811015610d2957600080fd5b505190508015610e1957610d6d736b175474e89094c44da98b954eedeac495271d0f7316de59092dae5ccf4a1e6439d611fd0653f0bd01600063ffffffff611d2a16565b610da6736b175474e89094c44da98b954eedeac495271d0f7316de59092dae5ccf4a1e6439d611fd0653f0bd018363ffffffff611d2a16565b7316de59092dae5ccf4a1e6439d611fd0653f0bd016001600160a01b031663b6b55f25826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b158015610e0057600080fd5b505af1158015610e14573d6000803e3d6000fd5b505050505b604080516370a0823160e01b815230600482015290516000917316de59092dae5ccf4a1e6439d611fd0653f0bd01916370a0823191602480820192602092909190829003018186803b158015610e6e57600080fd5b505afa158015610e82573d6000803e3d6000fd5b505050506040513d6020811015610e9857600080fd5b505190508015610fd957610edc7316de59092dae5ccf4a1e6439d611fd0653f0bd017345f783cce6b7ff23b2ab2d70e416cdb7d6055f51600063ffffffff611d2a16565b610f157316de59092dae5ccf4a1e6439d611fd0653f0bd017345f783cce6b7ff23b2ab2d70e416cdb7d6055f518363ffffffff611d2a16565b7345f783cce6b7ff23b2ab2d70e416cdb7d6055f516001600160a01b031663029b2f3460405180608001604052808481526020016000815260200160008152602001600081525060006040518363ffffffff1660e01b81526004018083600460200280838360005b83811015610f95578181015183820152602001610f7d565b5050505090500182815260200192505050600060405180830381600087803b158015610fc057600080fd5b505af1158015610fd4573d6000803e3d6000fd5b505050505b604080516370a0823160e01b815230600482015290516000916000805160206121d1833981519152916370a0823191602480820192602092909190829003018186803b15801561102857600080fd5b505afa15801561103c573d6000803e3d6000fd5b505050506040513d602081101561105257600080fd5b5051905080156110d65760006110796127106106c460015485611c3890919063ffffffff16565b90506110cc600560009054906101000a90046001600160a01b03166001600160a01b0316639ec5a8946040518163ffffffff1660e01b815260040160206040518083038186803b15801561072357600080fd5b6110d4611953565b505b600360009054906101000a90046001600160a01b03166001600160a01b031663f83d08ba6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561112657600080fd5b505af115801561113a573d6000803e3d6000fd5b5050600754611152925090508263ffffffff611bde16565b600781905560408051838152602081019290925280517ffa07446fad45314351eb89109a154880278451332bb87f1824d435fe58da59399281900390910190a150505050565b73f147b8125d2ef93fb6965db97d6746952a13393481565b6005546000906001600160a01b03163314611200576040805162461bcd60e51b815260206004820152600b60248201526a10b1b7b73a3937b63632b960a91b604482015290519081900360640190fd5b6000805160206121d18339815191526001600160a01b0383161415611255576040805162461bcd60e51b815260206004808301919091526024820152631dd85b9d60e21b604482015290519081900360640190fd5b73d533a949740bb3306d119cc777fa900ba034cd526001600160a01b03831614156112ad576040805162461bcd60e51b815260206004820152600360248201526231b93b60e91b604482015290519081900360640190fd5b7316de59092dae5ccf4a1e6439d611fd0653f0bd016001600160a01b0383161415611308576040805162461bcd60e51b815260206004808301919091526024820152637964616960e01b604482015290519081900360640190fd5b736b175474e89094c44da98b954eedeac495271d0f6001600160a01b0383161415611360576040805162461bcd60e51b815260206004820152600360248201526264616960e81b604482015290519081900360640190fd5b604080516370a0823160e01b815230600482015290516001600160a01b038416916370a08231916024808301926020929190829003018186803b1580156113a657600080fd5b505afa1580156113ba573d6000803e3d6000fd5b505050506040513d60208110156113d057600080fd5b50516005549091506113f5906001600160a01b0384811691168363ffffffff611cd316565b919050565b6004546001600160a01b031681565b73d533a949740bb3306d119cc777fa900ba034cd5281565b6004546001600160a01b0316331461146e576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600155565b7345f783cce6b7ff23b2ab2d70e416cdb7d6055f5181565b60006114ac6114986104c0565b6114a0611895565b9063ffffffff611bde16565b905090565b61271081565b60005481565b6005546000906001600160a01b0316331461150d576040805162461bcd60e51b815260206004820152600b60248201526a10b1b7b73a3937b63632b960a91b604482015290519081900360640190fd5b611515611e3d565b604080516370a0823160e01b815230600482015290516000805160206121d1833981519152916370a08231916024808301926020929190829003018186803b15801561156057600080fd5b505afa158015611574573d6000803e3d6000fd5b505050506040513d602081101561158a57600080fd5b505160055460408051632988bb9f60e21b81526000805160206121d1833981519152600482015290519293506000926001600160a01b039092169163a622ee7c91602480820192602092909190829003018186803b1580156115eb57600080fd5b505afa1580156115ff573d6000803e3d6000fd5b505050506040513d602081101561161557600080fd5b505190506001600160a01b03811661165d576040805162461bcd60e51b8152602060048201526006602482015265085d985d5b1d60d21b604482015290519081900360640190fd5b61167c6000805160206121d1833981519152828463ffffffff611cd316565b5090565b60015481565b60025481565b6004546001600160a01b031633146116d9576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6004546001600160a01b03163314611748576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600055565b6004546001600160a01b0316331461179a576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b73fa712ee4788c042e2b7bb55e6cb8ec569c4530c181565b6004546001600160a01b03163314611821576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6004546001600160a01b03163314611890576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600255565b604080516370a0823160e01b815230600482015290516000916000805160206121d1833981519152916370a0823191602480820192602092909190829003018186803b15801561051f57600080fd5b6004546001600160a01b03163314611931576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600680546001600160a01b0319166001600160a01b0392909216919091179055565b604080516370a0823160e01b815230600482015290516000916000805160206121d1833981519152916370a0823191602480820192602092909190829003018186803b1580156119a257600080fd5b505afa1580156119b6573d6000803e3d6000fd5b505050506040513d60208110156119cc57600080fd5b505190508015611a8f57600354611a02906000805160206121d1833981519152906001600160a01b03168363ffffffff611cd316565b60035460408051631f2c13e160e31b815273fa712ee4788c042e2b7bb55e6cb8ec569c4530c160048201526000805160206121d1833981519152602482015290516001600160a01b039092169163f9609f089160448082019260009290919082900301818387803b158015611a7657600080fd5b505af1158015611a8a573d6000803e3d6000fd5b505050505b50565b60075481565b6003546001600160a01b031681565b737a250d5630b4cf539739df2c5dacb4c659f2488d81565b736b175474e89094c44da98b954eedeac495271d0f81565b6005546001600160a01b031681565b6000611b2883836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611ee0565b90505b92915050565b60035460408051636ce5768960e11b815273fa712ee4788c042e2b7bb55e6cb8ec569c4530c160048201526000805160206121d183398151915260248201526044810184905290516000926001600160a01b03169163d9caed1291606480830192602092919082900301818787803b158015611bac57600080fd5b505af1158015611bc0573d6000803e3d6000fd5b505050506040513d6020811015611bd657600080fd5b505192915050565b600082820183811015611b28576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600082611c4757506000611b2b565b82820282848281611c5457fe5b0414611b285760405162461bcd60e51b81526004018080602001828103825260218152602001806121f16021913960400191505060405180910390fd5b6000611b2883836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611f77565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052611d25908490611fdc565b505050565b801580611db0575060408051636eb1769f60e11b81523060048201526001600160a01b03848116602483015291519185169163dd62ed3e91604480820192602092909190829003018186803b158015611d8257600080fd5b505afa158015611d96573d6000803e3d6000fd5b505050506040513d6020811015611dac57600080fd5b5051155b611deb5760405162461bcd60e51b815260040180806020018281038252603681526020018061223c6036913960400191505060405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b179052611d25908490611fdc565b600354604080516301395c5960e31b815273fa712ee4788c042e2b7bb55e6cb8ec569c4530c160048201526000805160206121d1833981519152602482015290516001600160a01b03909216916309cae2c8916044808201926020929091908290030181600087803b158015611eb257600080fd5b505af1158015611ec6573d6000803e3d6000fd5b505050506040513d6020811015611edc57600080fd5b5050565b60008184841115611f6f5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611f34578181015183820152602001611f1c565b50505050905090810190601f168015611f615780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60008183611fc65760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315611f34578181015183820152602001611f1c565b506000838581611fd257fe5b0495945050505050565b611fee826001600160a01b0316612194565b61203f576040805162461bcd60e51b815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b60006060836001600160a01b0316836040518082805190602001908083835b6020831061207d5780518252601f19909201916020918201910161205e565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146120df576040519150601f19603f3d011682016040523d82523d6000602084013e6120e4565b606091505b50915091508161213b576040805162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b8051156108665780806020019051602081101561215757600080fd5b50516108665760405162461bcd60e51b815260040180806020018281038252602a815260200180612212602a913960400191505060405180910390fd5b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906121c857508115155b94935050505056fe000000000000000000000000df5e0e81dff6faf3a7e52ba697820c5e32d806a8536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365a265627a7a72315820a296b715aee7ca9e7ec1e121148e842b71c8dd5a795e69f27280cc1ab2c91e9d64736f6c63430005110032",
  "deployedSourceMap": "604:7151:22:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;604:7151:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7206:114;;;:::i;:::-;;;;;;;;;;;;;;;;2267:107;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2267:107:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;740:82;;;:::i;:::-;;;;-1:-1:-1;;;;;740:82:22;;;;;;;;;;;;;;1930:25;;;:::i;3988:708::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3988:708:22;;:::i;:::-;;1215:82;;;:::i;1002:::-;;;:::i;5305:1627::-;;;:::i;1482:83::-;;;:::i;3483:430::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3483:430:22;-1:-1:-1;;;;;3483:430:22;;:::i;1868:25::-;;;:::i;828:81::-;;;:::i;2854:168::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2854:168:22;;:::i;1303:83::-;;;:::i;7326:111::-;;;:::i;1697:46::-;;;:::i;1572:29::-;;;:::i;4769:431::-;;;:::i;1656:35::-;;;:::i;1750:33::-;;;:::i;7601:152::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7601:152:22;-1:-1:-1;;;;;7601:152:22;;:::i;2538:140::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2538:140:22;;:::i;3028:132::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3028:132:22;-1:-1:-1;;;;;3028:132:22;;:::i;1393:83::-;;;:::i;7443:152::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7443:152:22;-1:-1:-1;;;;;7443:152:22;;:::i;2684:164::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2684:164:22;;:::i;7084:116::-;;;:::i;2380:152::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2380:152:22;-1:-1:-1;;;;;2380:152:22;;:::i;3166:237::-;;;:::i;1962:21::-;;;:::i;1841:20::-;;;:::i;915:81::-;;;:::i;1128:::-;;;:::i;1899:25::-;;;:::i;7206:114::-;7290:5;;7278:35;;;-1:-1:-1;;;7278:35:22;;1433:42;7278:35;;;;;;7252:7;;-1:-1:-1;;;;;7290:5:22;;7278:28;;:35;;;;;;;;;;;;;;7290:5;7278:35;;;5:2:-1;;;;30:1;27;20:12;5:2;7278:35:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7278:35:22;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7278:35:22;;-1:-1:-1;7206:114:22;:::o;2267:107::-;2334:33;;;;;;;;;;;;;;;;;2267:107;:::o;740:82::-;-1:-1:-1;;;;;;;;;;;740:82:22;:::o;1930:25::-;;;-1:-1:-1;;;;;1930:25:22;;:::o;3988:708::-;4064:10;;-1:-1:-1;;;;;4064:10:22;4050;:24;4042:48;;;;;-1:-1:-1;;;4042:48:22;;;;;;;;;;;;-1:-1:-1;;;4042:48:22;;;;;;;;;;;;;;;4119:37;;;-1:-1:-1;;;4119:37:22;;4150:4;4119:37;;;;;;4100:16;;-1:-1:-1;;;;;;;;;;;779:42:22;4119:22;;:37;;;;;;;;;;;;;;;779:42;4119:37;;;5:2:-1;;;;30:1;27;20:12;5:2;4119:37:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4119:37:22;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4119:37:22;;-1:-1:-1;4170:18:22;;;4166:140;;;4214:36;4228:21;:7;4240:8;4228:21;:11;:21;:::i;:::-;4214:13;:36::i;:::-;4204:46;-1:-1:-1;4274:21:22;4204:46;4286:8;4274:21;:11;:21;:::i;:::-;4264:31;;4166:140;4316:12;4331:45;1829:5;4331:26;4343:13;;4331:7;:11;;:26;;;;:::i;:::-;:30;:45;:30;:45;:::i;:::-;4316:60;;4387:66;4425:10;;;;;;;;;-1:-1:-1;;;;;4425:10:22;-1:-1:-1;;;;;4413:31:22;;:33;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4413:33:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4413:33:22;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4413:33:22;-1:-1:-1;;;;;;;;;;;779:42:22;4448:4;4387:66;:25;:66;:::i;:::-;4492:10;;4480:45;;;-1:-1:-1;;;4480:45:22;;-1:-1:-1;;;;;;;;;;;4480:45:22;;;;;;4463:14;;-1:-1:-1;;;;;4492:10:22;;4480:30;;:45;;;;;;;;;;;;;;4492:10;4480:45;;;5:2:-1;;;;30:1;27;20:12;5:2;4480:45:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4480:45:22;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4480:45:22;;-1:-1:-1;;;;;;4543:20:22;;4535:39;;;;;-1:-1:-1;;;4535:39:22;;;;;;;;;;;;-1:-1:-1;;;4535:39:22;;;;;;;;;;;;;;;4637:52;4663:6;4671:17;:7;4683:4;4671:17;:11;:17;:::i;:::-;-1:-1:-1;;;;;;;;;;;779:42:22;4637:52;;:25;:52;:::i;:::-;3988:708;;;;:::o;1215:82::-;1254:42;1215:82;:::o;1002:::-;1041:42;1002:82;:::o;5305:1627::-;5363:10;;-1:-1:-1;;;;;5363:10:22;5349;:24;;:52;;-1:-1:-1;5391:10:22;;-1:-1:-1;;;;;5391:10:22;5377;:24;5349:52;5341:76;;;;;-1:-1:-1;;;5341:76:22;;;;;;;;;;;;-1:-1:-1;;;5341:76:22;;;;;;;;;;;;;;;5439:5;;5427:33;;;-1:-1:-1;;;5427:33:22;;1433:42;5427:33;;;;;;-1:-1:-1;;;;;5439:5:22;;;;5427:26;;:33;;;;;5439:5;;5427:33;;;;;;;;5439:5;;5427:33;;;5:2:-1;;;;30:1;27;20:12;5:2;5427:33:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;5485:36:22;;;-1:-1:-1;;;5485:36:22;;5515:4;5485:36;;;;;;5470:12;;-1:-1:-1;866:42:22;;-1:-1:-1;5485:21:22;;:36;;;;;;;;;;;;;;;866:42;5485:36;;;5:2:-1;;;;30:1;27;20:12;5:2;5485:36:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5485:36:22;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5485:36:22;;-1:-1:-1;5535:8:22;;5531:518;;5559:16;5578:33;1644:5;5578:17;5587:7;;5578:4;:8;;:17;;;;:::i;:33::-;5559:52;-1:-1:-1;5625:41:22;866:42;1522;5559:52;5625:41;:24;:41;:::i;:::-;5687:18;:4;5696:8;5687:18;:8;:18;:::i;:::-;5680:25;-1:-1:-1;5720:31:22;866:42;953;5749:1;5720:31;:23;:31;:::i;:::-;5765:34;866:42;953;5794:4;5765:34;:23;:34;:::i;:::-;5838:16;;;5852:1;5838:16;;;;;;;;;5814:21;;5838:16;;;5814:21;;105:10:-1;5838:16:22;88:34:-1;136:17;;-1:-1;5838:16:22;5814:40;;866:42;5868:4;5873:1;5868:7;;;;;;;;;;;;;:13;-1:-1:-1;;;;;5868:13:22;;;-1:-1:-1;;;;;5868:13:22;;;;;1041:42;5895:4;5900:1;5895:7;;;;;;;;;;;;;:14;-1:-1:-1;;;;;5895:14:22;;;-1:-1:-1;;;;;5895:14:22;;;;;1166:42;5923:4;5928:1;5923:7;;;;;;;;-1:-1:-1;;;;;5923:13:22;;;:7;;;;;;;;;;;:13;953:42;5951:33;5985:4;5999:1;6003:4;6017;6024:13;:3;6032:4;6024:13;:7;:13;:::i;:::-;5951:87;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5951:87:22;-1:-1:-1;;;;;5951:87:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5951:87:22;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5951:87:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5951:87:22;;;;5531:518;;;6073:36;;;-1:-1:-1;;;6073:36:22;;6103:4;6073:36;;;;;;6058:12;;1166:42;;6073:21;;:36;;;;;;;;;;;;;;;1166:42;6073:36;;;5:2:-1;;;;30:1;27;20:12;5:2;6073:36:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6073:36:22;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6073:36:22;;-1:-1:-1;6123:8:22;;6119:160;;6147:32;1166:42;1254;6177:1;6147:32;:23;:32;:::i;:::-;6193:35;1166:42;1254;6223:4;6193:35;:23;:35;:::i;:::-;1254:42;-1:-1:-1;;;;;6242:20:22;;6263:4;6242:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6242:26:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6242:26:22;;;;6119:160;6304:37;;;-1:-1:-1;;;6304:37:22;;6335:4;6304:37;;;;;;6288:13;;1254:42;;6304:22;;:37;;;;;;;;;;;;;;;1254:42;6304:37;;;5:2:-1;;;;30:1;27;20:12;5:2;6304:37:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6304:37:22;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6304:37:22;;-1:-1:-1;6355:9:22;;6351:190;;6380:34;1254:42;1343;6412:1;6380:34;:24;:34;:::i;:::-;6428:38;1254:42;1343;6460:5;6428:38;:24;:38;:::i;:::-;1343:42;-1:-1:-1;;;;;6480:29:22;;:50;;;;;;;;6511:5;6480:50;;;;6518:1;6480:50;;;;6521:1;6480:50;;;;6524:1;6480:50;;;6528:1;6480:50;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;6480:50:22;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6480:50:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6480:50:22;;;;6351:190;6566:37;;;-1:-1:-1;;;6566:37:22;;6597:4;6566:37;;;;;;6550:13;;-1:-1:-1;;;;;;;;;;;779:42:22;6566:22;;:37;;;;;;;;;;;;;;;779:42;6566:37;;;5:2:-1;;;;30:1;27;20:12;5:2;6566:37:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6566:37:22;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6566:37:22;;-1:-1:-1;6617:9:22;;6613:203;;6642:12;6657:45;1738:5;6657:25;6667:14;;6657:5;:9;;:25;;;;:::i;:45::-;6642:60;;6716:66;6754:10;;;;;;;;;-1:-1:-1;;;;;6754:10:22;-1:-1:-1;;;;;6742:31:22;;:33;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;6716:66:22;6796:9;:7;:9::i;:::-;6613:203;;6837:5;;;;;;;;;-1:-1:-1;;;;;6837:5:22;-1:-1:-1;;;;;6825:23:22;;:25;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6825:25:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;6869:6:22;;:17;;-1:-1:-1;6869:6:22;-1:-1:-1;6880:5:22;6869:17;:10;:17;:::i;:::-;6860:6;:26;;;6901:24;;;;;;;;;;;;;;;;;;;;;;;;;5305:1627;;;;:::o;1482:83::-;1522:42;1482:83;:::o;3483:430::-;3583:10;;3534:15;;-1:-1:-1;;;;;3583:10:22;3569;:24;3561:48;;;;;-1:-1:-1;;;3561:48:22;;;;;;;;;;;;-1:-1:-1;;;3561:48:22;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;3627:23:22;;;;3619:40;;;;;-1:-1:-1;;;3619:40:22;;;;;;;;;;;;;;;-1:-1:-1;;;3619:40:22;;;;;;;;;;;;;;;866:42;-1:-1:-1;;;;;3677:22:22;;;;3669:38;;;;;-1:-1:-1;;;3669:38:22;;;;;;;;;;;;-1:-1:-1;;;3669:38:22;;;;;;;;;;;;;;;1254:42;-1:-1:-1;;;;;3725:23:22;;;;3717:40;;;;;-1:-1:-1;;;3717:40:22;;;;;;;;;;;;;;;-1:-1:-1;;;3717:40:22;;;;;;;;;;;;;;;1166:42;-1:-1:-1;;;;;3775:22:22;;;;3767:38;;;;;-1:-1:-1;;;3767:38:22;;;;;;;;;;;;-1:-1:-1;;;3767:38:22;;;;;;;;;;;;;;;3825:31;;;-1:-1:-1;;;3825:31:22;;3850:4;3825:31;;;;;;-1:-1:-1;;;;;3825:16:22;;;;;:31;;;;;;;;;;;;;;:16;:31;;;5:2:-1;;;;30:1;27;20:12;5:2;3825:31:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3825:31:22;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3825:31:22;3886:10;;3825:31;;-1:-1:-1;3866:40:22;;-1:-1:-1;;;;;3866:19:22;;;;3886:10;3825:31;3866:40;:19;:40;:::i;:::-;3483:430;;;:::o;1868:25::-;;;-1:-1:-1;;;;;1868:25:22;;:::o;828:81::-;866:42;828:81;:::o;2854:168::-;2947:10;;-1:-1:-1;;;;;2947:10:22;2933;:24;2925:48;;;;;-1:-1:-1;;;2925:48:22;;;;;;;;;;;;-1:-1:-1;;;2925:48:22;;;;;;;;;;;;;;;2983:14;:32;2854:168::o;1303:83::-;1343:42;1303:83;:::o;7326:111::-;7368:7;7394:36;7414:15;:13;:15::i;:::-;7394;:13;:15::i;:::-;:19;:36;:19;:36;:::i;:::-;7387:43;;7326:111;:::o;1697:46::-;1738:5;1697:46;:::o;1572:29::-;;;;:::o;4769:431::-;4859:10;;4810:15;;-1:-1:-1;;;;;4859:10:22;4845;:24;4837:48;;;;;-1:-1:-1;;;4837:48:22;;;;;;;;;;;;-1:-1:-1;;;4837:48:22;;;;;;;;;;;;;;;4895:14;:12;:14::i;:::-;4930:37;;;-1:-1:-1;;;4930:37:22;;4961:4;4930:37;;;;;;-1:-1:-1;;;;;;;;;;;779:42:22;4930:22;;:37;;;;;;;;;;;;;;779:42;4930:37;;;5:2:-1;;;;30:1;27;20:12;5:2;4930:37:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4930:37:22;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4930:37:22;5007:10;;4995:45;;;-1:-1:-1;;;4995:45:22;;-1:-1:-1;;;;;;;;;;;4995:45:22;;;;;;4930:37;;-1:-1:-1;4978:14:22;;-1:-1:-1;;;;;5007:10:22;;;;4995:30;;:45;;;;;4930:37;;4995:45;;;;;;;;5007:10;4995:45;;;5:2:-1;;;;30:1;27;20:12;5:2;4995:45:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4995:45:22;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4995:45:22;;-1:-1:-1;;;;;;5058:20:22;;5050:39;;;;;-1:-1:-1;;;5050:39:22;;;;;;;;;;;;-1:-1:-1;;;5050:39:22;;;;;;;;;;;;;;;5151:42;-1:-1:-1;;;;;;;;;;;5177:6:22;5185:7;5151:42;:25;:42;:::i;:::-;4769:431;;:::o;1656:35::-;;;;:::o;1750:33::-;;;;:::o;7601:152::-;7686:10;;-1:-1:-1;;;;;7686:10:22;7672;:24;7664:48;;;;;-1:-1:-1;;;7664:48:22;;;;;;;;;;;;-1:-1:-1;;;7664:48:22;;;;;;;;;;;;;;;7722:10;:24;;-1:-1:-1;;;;;;7722:24:22;-1:-1:-1;;;;;7722:24:22;;;;;;;;;;7601:152::o;2538:140::-;2617:10;;-1:-1:-1;;;;;2617:10:22;2603;:24;2595:48;;;;;-1:-1:-1;;;2595:48:22;;;;;;;;;;;;-1:-1:-1;;;2595:48:22;;;;;;;;;;;;;;;2653:7;:18;2538:140::o;3028:132::-;3103:10;;-1:-1:-1;;;;;3103:10:22;3089;:24;3081:48;;;;;-1:-1:-1;;;3081:48:22;;;;;;;;;;;;-1:-1:-1;;;3081:48:22;;;;;;;;;;;;;;;3139:5;:14;;-1:-1:-1;;;;;;3139:14:22;-1:-1:-1;;;;;3139:14:22;;;;;;;;;;3028:132::o;1393:83::-;1433:42;1393:83;:::o;7443:152::-;7528:10;;-1:-1:-1;;;;;7528:10:22;7514;:24;7506:48;;;;;-1:-1:-1;;;7506:48:22;;;;;;;;;;;;-1:-1:-1;;;7506:48:22;;;;;;;;;;;;;;;7564:10;:24;;-1:-1:-1;;;;;;7564:24:22;-1:-1:-1;;;;;7564:24:22;;;;;;;;;;7443:152::o;2684:164::-;2775:10;;-1:-1:-1;;;;;2775:10:22;2761;:24;2753:48;;;;;-1:-1:-1;;;2753:48:22;;;;;;;;;;;;-1:-1:-1;;;2753:48:22;;;;;;;;;;;;;;;2811:13;:30;2684:164::o;7084:116::-;7156:37;;;-1:-1:-1;;;7156:37:22;;7187:4;7156:37;;;;;;7130:7;;-1:-1:-1;;;;;;;;;;;779:42:22;7156:22;;:37;;;;;;;;;;;;;;;779:42;7156:37;;;5:2:-1;;;;30:1;27;20:12;2380:152:22;2465:10;;-1:-1:-1;;;;;2465:10:22;2451;:24;2443:48;;;;;-1:-1:-1;;;2443:48:22;;;;;;;;;;;;-1:-1:-1;;;2443:48:22;;;;;;;;;;;;;;;2501:10;:24;;-1:-1:-1;;;;;;2501:24:22;-1:-1:-1;;;;;2501:24:22;;;;;;;;;;2380:152::o;3166:237::-;3218:37;;;-1:-1:-1;;;3218:37:22;;3249:4;3218:37;;;;;;3202:13;;-1:-1:-1;;;;;;;;;;;779:42:22;3218:22;;:37;;;;;;;;;;;;;;;779:42;3218:37;;;5:2:-1;;;;30:1;27;20:12;5:2;3218:37:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3218:37:22;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3218:37:22;;-1:-1:-1;3269:9:22;;3265:132;;3320:5;;3294:39;;-1:-1:-1;;;;;;;;;;;779:42:22;-1:-1:-1;;;;;3320:5:22;3327;3294:39;:25;:39;:::i;:::-;3359:5;;3347:39;;;-1:-1:-1;;;3347:39:22;;1433:42;3347:39;;;;-1:-1:-1;;;;;;;;;;;3347:39:22;;;;;;-1:-1:-1;;;;;3359:5:22;;;;3347:26;;:39;;;;;3359:5;;3347:39;;;;;;;;3359:5;;3347:39;;;5:2:-1;;;;30:1;27;20:12;5:2;3347:39:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3347:39:22;;;;3265:132;3166:237;:::o;1962:21::-;;;;:::o;1841:20::-;;;-1:-1:-1;;;;;1841:20:22;;:::o;915:81::-;953:42;915:81;:::o;1128:::-;1166:42;1128:81;:::o;1899:25::-;;;-1:-1:-1;;;;;1899:25:22;;:::o;1274:134:1:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;;:::o;6938:140:22:-;7034:5;;7022:49;;;-1:-1:-1;;;7022:49:22;;1433:42;7022:49;;;;-1:-1:-1;;;;;;;;;;;7022:49:22;;;;;;;;;;;;6996:7;;-1:-1:-1;;;;;7034:5:22;;7022:27;;:49;;;;;;;;;;;;;;6996:7;7034:5;7022:49;;;5:2:-1;;;;30:1;27;20:12;5:2;7022:49:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7022:49:22;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7022:49:22;;6938:140;-1:-1:-1;;6938:140:22:o;834:176:1:-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:1;;;;;;;;;;;;;;;;;;;;;;;;;;;2159:459;2217:7;2458:6;2454:45;;-1:-1:-1;2487:1:1;2480:8;;2454:45;2521:5;;;2525:1;2521;:5;:1;2544:5;;;;;:10;2536:56;;;;-1:-1:-1;;;2536:56:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3073:130;3131:7;3157:39;3161:1;3164;3157:39;;;;;;;;;;;;;;;;;:3;:39::i;662:174:6:-;770:58;;;-1:-1:-1;;;;;770:58:6;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;770:58:6;;;;;;;;25:18:-1;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;744:85:6;;763:5;;744:18;:85::i;:::-;662:174;;;:::o;1050:612::-;1415:10;;;1414:62;;-1:-1:-1;1431:39:6;;;-1:-1:-1;;;1431:39:6;;1455:4;1431:39;;;;-1:-1:-1;;;;;1431:39:6;;;;;;;;;:15;;;;;;:39;;;;;;;;;;;;;;;:15;:39;;;5:2:-1;;;;30:1;27;20:12;5:2;1431:39:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1431:39:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1431:39:6;:44;1414:62;1406:150;;;;-1:-1:-1;;;1406:150:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1592:62;;;-1:-1:-1;;;;;1592:62:6;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1592:62:6;;;;;;;;25:18:-1;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;1566:89:6;;1585:5;;1566:18;:89::i;5206:93:22:-;5261:5;;5249:43;;;-1:-1:-1;;;5249:43:22;;1433:42;5249:43;;;;-1:-1:-1;;;;;;;;;;;5249:43:22;;;;;;-1:-1:-1;;;;;5261:5:22;;;;5249:30;;:43;;;;;;;;;;;;;;;5261:5;;5249:43;;;5:2:-1;;;;30:1;27;20:12;5:2;5249:43:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5249:43:22;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;5206:93:22:o;1732:187:1:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1837:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:1;;;1732:187::o;3718:338::-;3804:7;3904:12;3897:5;3889:28;;;;-1:-1:-1;;;3889:28:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;3889:28:1;;3927:9;3943:1;3939;:5;;;;;;;3718:338;-1:-1:-1;;;;;3718:338:1:o;2666:1095:6:-;3261:27;3269:5;-1:-1:-1;;;;;3261:25:6;;:27::i;:::-;3253:71;;;;;-1:-1:-1;;;3253:71:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;3395:12;3409:23;3444:5;-1:-1:-1;;;;;3436:19:6;3456:4;3436:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3436:25:6;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;3394:67:6;;;;3479:7;3471:52;;;;;-1:-1:-1;;;3471:52:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3538:17;;:21;3534:221;;3678:10;3667:30;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3667:30:6;3659:85;;;;-1:-1:-1;;;3659:85:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;686:610:7;746:4;1207:20;;1052:66;1246:23;;;;;;:42;;-1:-1:-1;1273:15:7;;;1246:42;1238:51;686:610;-1:-1:-1;;;;686:610:7:o",
  "language": "Solidity",
  "natspec": {
    "methods": {}
  },
  "offset": [
    604,
    7755
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x21C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x87788782 GT PUSH2 0x125 JUMPI DUP1 PUSH4 0xC7B9D530 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xE9751F6B GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xE9751F6B EQ PUSH2 0x386 JUMPI DUP1 PUSH4 0xEC556889 EQ PUSH2 0x4A0 JUMPI DUP1 PUSH4 0xEDC9AF95 EQ PUSH2 0x4A8 JUMPI DUP1 PUSH4 0xF4B9FA75 EQ PUSH2 0x4B0 JUMPI DUP1 PUSH4 0xF77C4791 EQ PUSH2 0x4B8 JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0xC7B9D530 EQ PUSH2 0x46A JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x490 JUMPI DUP1 PUSH4 0xD5C1FF73 EQ PUSH2 0x386 JUMPI DUP1 PUSH4 0xD6F19262 EQ PUSH2 0x498 JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0x97107D6D GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x97107D6D EQ PUSH2 0x3F1 JUMPI DUP1 PUSH4 0xA6F19C84 EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0xAB033EA9 EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0xAC1E5025 EQ PUSH2 0x445 JUMPI DUP1 PUSH4 0xC1A3D44C EQ PUSH2 0x462 JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0x87788782 EQ PUSH2 0x39E JUMPI DUP1 PUSH4 0x8BC7E8C4 EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0x92EEFE9B EQ PUSH2 0x3AE JUMPI DUP1 PUSH4 0x955383BD EQ PUSH2 0x3D4 JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0x51CFF8D9 GT PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x7165485D GT PUSH2 0x177 JUMPI DUP1 PUSH4 0x7165485D EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0x722713F7 EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0x7CC79113 EQ PUSH2 0x386 JUMPI DUP1 PUSH4 0x7FEF901A EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0x853828B6 EQ PUSH2 0x396 JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0x5AA6E675 EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0x6A4874A1 EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0x70897B23 EQ PUSH2 0x359 JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0x2E1A7D4D GT PUSH2 0x1EF JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0x366CD4F3 EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0x3FC8CEF3 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0x46C96AAC EQ PUSH2 0x31B JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0x11588086 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x17D7DE7C EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x1F1FCD51 EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x1FE4A686 EQ PUSH2 0x2DC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x229 PUSH2 0x4C0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x243 PUSH2 0x550 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x27D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x265 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2AA JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C0 PUSH2 0x587 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2C0 PUSH2 0x599 JUMP JUMPDEST PUSH2 0x301 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x5A8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C0 PUSH2 0x86C JUMP JUMPDEST PUSH2 0x2C0 PUSH2 0x884 JUMP JUMPDEST PUSH2 0x301 PUSH2 0x89C JUMP JUMPDEST PUSH2 0x2C0 PUSH2 0x1198 JUMP JUMPDEST PUSH2 0x229 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x11B0 JUMP JUMPDEST PUSH2 0x2C0 PUSH2 0x13FA JUMP JUMPDEST PUSH2 0x2C0 PUSH2 0x1409 JUMP JUMPDEST PUSH2 0x301 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x36F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1421 JUMP JUMPDEST PUSH2 0x2C0 PUSH2 0x1473 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x148B JUMP JUMPDEST PUSH2 0x229 PUSH2 0x14B1 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x14B7 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x14BD JUMP JUMPDEST PUSH2 0x229 PUSH2 0x1680 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x1686 JUMP JUMPDEST PUSH2 0x301 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x168C JUMP JUMPDEST PUSH2 0x301 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x16FB JUMP JUMPDEST PUSH2 0x301 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x407 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x174D JUMP JUMPDEST PUSH2 0x2C0 PUSH2 0x17BC JUMP JUMPDEST PUSH2 0x301 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x435 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x17D4 JUMP JUMPDEST PUSH2 0x301 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x45B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1843 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x1895 JUMP JUMPDEST PUSH2 0x301 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x480 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x18E4 JUMP JUMPDEST PUSH2 0x301 PUSH2 0x1953 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x1A92 JUMP JUMPDEST PUSH2 0x2C0 PUSH2 0x1A98 JUMP JUMPDEST PUSH2 0x2C0 PUSH2 0x1AA7 JUMP JUMPDEST PUSH2 0x2C0 PUSH2 0x1ABF JUMP JUMPDEST PUSH2 0x2C0 PUSH2 0x1AD7 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH20 0xFA712EE4788C042E2B7BB55E6CB8EC569C4530C1 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x51F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x533 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x549 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH32 0x5374726174656779437572766559566F74657250726F78790000000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x21D1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5F5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x10B1B7B73A3937B63632B9 PUSH1 0xA9 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x21D1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x644 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x658 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x66E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x6A7 JUMPI PUSH2 0x692 PUSH2 0x68D DUP4 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1AE6 AND JUMP JUMPDEST PUSH2 0x1B31 JUMP JUMPDEST SWAP2 POP PUSH2 0x6A4 DUP3 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1BDE AND JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x0 PUSH2 0x6D0 PUSH2 0x2710 PUSH2 0x6C4 PUSH1 0x2 SLOAD DUP7 PUSH2 0x1C38 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1C91 AND JUMP JUMPDEST SWAP1 POP PUSH2 0x76B PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9EC5A894 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x723 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x737 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x74D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x21D1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1CD3 AND JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x2988BB9F PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x21D1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xA622EE7C SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7D8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x836 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x6 PUSH1 0x24 DUP3 ADD MSTORE PUSH6 0x85D985D5B1D PUSH1 0xD2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x866 DUP2 PUSH2 0x84A DUP7 DUP6 PUSH4 0xFFFFFFFF PUSH2 0x1AE6 AND JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x21D1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1CD3 AND JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH20 0x16DE59092DAE5CCF4A1E6439D611FD0653F0BD01 DUP2 JUMP JUMPDEST PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x8BF JUMPI POP PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x8FE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x8585D5D1A1BDC9A5E9959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x72E008F PUSH1 0xE1 SHL DUP2 MSTORE PUSH20 0xFA712EE4788C042E2B7BB55E6CB8EC569C4530C1 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xE5C011E SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x95E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x972 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP4 POP PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 SWAP3 POP PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9DF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 ISZERO PUSH2 0xCAA JUMPI PUSH1 0x0 PUSH2 0xA1C PUSH2 0x2710 PUSH2 0x6C4 PUSH1 0x0 SLOAD DUP6 PUSH2 0x1C38 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xA57 PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 PUSH20 0xF147B8125D2EF93FB6965DB97D6746952A133934 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1CD3 AND JUMP JUMPDEST PUSH2 0xA67 DUP3 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1AE6 AND JUMP JUMPDEST SWAP2 POP PUSH2 0xAA3 PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 PUSH20 0x7A250D5630B4CF539739DF2C5DACB4C659F2488D PUSH1 0x0 PUSH4 0xFFFFFFFF PUSH2 0x1D2A AND JUMP JUMPDEST PUSH2 0xADC PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 PUSH20 0x7A250D5630B4CF539739DF2C5DACB4C659F2488D DUP5 PUSH4 0xFFFFFFFF PUSH2 0x1D2A AND JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x3 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x20 DUP3 ADD DUP4 DUP1 CODESIZE DUP4 CODECOPY ADD SWAP1 POP POP SWAP1 POP PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xB20 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xB62 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0xBA4 JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH20 0x7A250D5630B4CF539739DF2C5DACB4C659F2488D PUSH4 0x38ED1739 DUP5 PUSH1 0x0 DUP5 ADDRESS PUSH2 0xBED TIMESTAMP PUSH2 0x708 PUSH4 0xFFFFFFFF PUSH2 0x1BDE AND JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC66 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xC4E JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCA3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD13 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 ISZERO PUSH2 0xE19 JUMPI PUSH2 0xD6D PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F PUSH20 0x16DE59092DAE5CCF4A1E6439D611FD0653F0BD01 PUSH1 0x0 PUSH4 0xFFFFFFFF PUSH2 0x1D2A AND JUMP JUMPDEST PUSH2 0xDA6 PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F PUSH20 0x16DE59092DAE5CCF4A1E6439D611FD0653F0BD01 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1D2A AND JUMP JUMPDEST PUSH20 0x16DE59092DAE5CCF4A1E6439D611FD0653F0BD01 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB6B55F25 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE14 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH20 0x16DE59092DAE5CCF4A1E6439D611FD0653F0BD01 SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE82 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 ISZERO PUSH2 0xFD9 JUMPI PUSH2 0xEDC PUSH20 0x16DE59092DAE5CCF4A1E6439D611FD0653F0BD01 PUSH20 0x45F783CCE6B7FF23B2AB2D70E416CDB7D6055F51 PUSH1 0x0 PUSH4 0xFFFFFFFF PUSH2 0x1D2A AND JUMP JUMPDEST PUSH2 0xF15 PUSH20 0x16DE59092DAE5CCF4A1E6439D611FD0653F0BD01 PUSH20 0x45F783CCE6B7FF23B2AB2D70E416CDB7D6055F51 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1D2A AND JUMP JUMPDEST PUSH20 0x45F783CCE6B7FF23B2AB2D70E416CDB7D6055F51 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x29B2F34 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x4 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF95 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xF7D JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFD4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x21D1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1028 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x103C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1052 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 ISZERO PUSH2 0x10D6 JUMPI PUSH1 0x0 PUSH2 0x1079 PUSH2 0x2710 PUSH2 0x6C4 PUSH1 0x1 SLOAD DUP6 PUSH2 0x1C38 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x10CC PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9EC5A894 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x723 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D4 PUSH2 0x1953 JUMP JUMPDEST POP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF83D08BA PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1126 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x113A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x7 SLOAD PUSH2 0x1152 SWAP3 POP SWAP1 POP DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1BDE AND JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP1 MLOAD PUSH32 0xFA07446FAD45314351EB89109A154880278451332BB87F1824D435FE58DA5939 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH20 0xF147B8125D2EF93FB6965DB97D6746952A133934 DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1200 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x10B1B7B73A3937B63632B9 PUSH1 0xA9 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x21D1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ ISZERO PUSH2 0x1255 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH4 0x1DD85B9D PUSH1 0xE2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ ISZERO PUSH2 0x12AD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x31B93B PUSH1 0xE9 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0x16DE59092DAE5CCF4A1E6439D611FD0653F0BD01 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ ISZERO PUSH2 0x1308 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH4 0x79646169 PUSH1 0xE0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ ISZERO PUSH2 0x1360 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x646169 PUSH1 0xE8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x13D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x5 SLOAD SWAP1 SWAP2 POP PUSH2 0x13F5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1CD3 AND JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x146E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH20 0x45F783CCE6B7FF23B2AB2D70E416CDB7D6055F51 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14AC PUSH2 0x1498 PUSH2 0x4C0 JUMP JUMPDEST PUSH2 0x14A0 PUSH2 0x1895 JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1BDE AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x150D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x10B1B7B73A3937B63632B9 PUSH1 0xA9 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1515 PUSH2 0x1E3D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x21D1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1560 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1574 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x158A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x2988BB9F PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x21D1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xA622EE7C SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15FF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1615 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x165D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x6 PUSH1 0x24 DUP3 ADD MSTORE PUSH6 0x85D985D5B1D PUSH1 0xD2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x167C PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x21D1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x1CD3 AND JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x16D9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1748 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x179A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH20 0xFA712EE4788C042E2B7BB55E6CB8EC569C4530C1 DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1821 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1890 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x21D1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x51F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1931 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x21D1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19B6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x19CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 ISZERO PUSH2 0x1A8F JUMPI PUSH1 0x3 SLOAD PUSH2 0x1A02 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x21D1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1CD3 AND JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1F2C13E1 PUSH1 0xE3 SHL DUP2 MSTORE PUSH20 0xFA712EE4788C042E2B7BB55E6CB8EC569C4530C1 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x21D1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xF9609F08 SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A8A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH20 0x7A250D5630B4CF539739DF2C5DACB4C659F2488D DUP2 JUMP JUMPDEST PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B28 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x1EE0 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x6CE57689 PUSH1 0xE1 SHL DUP2 MSTORE PUSH20 0xFA712EE4788C042E2B7BB55E6CB8EC569C4530C1 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x21D1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xD9CAED12 SWAP2 PUSH1 0x64 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP8 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1BC0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1BD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x1B28 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1C47 JUMPI POP PUSH1 0x0 PUSH2 0x1B2B JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x1C54 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1B28 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x21F1 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1B28 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x1F77 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x1D25 SWAP1 DUP5 SWAP1 PUSH2 0x1FDC JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 ISZERO DUP1 PUSH2 0x1DB0 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 DUP6 AND SWAP2 PUSH4 0xDD62ED3E SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D96 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1DAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO JUMPDEST PUSH2 0x1DEB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x223C PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x1D25 SWAP1 DUP5 SWAP1 PUSH2 0x1FDC JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1395C59 PUSH1 0xE3 SHL DUP2 MSTORE PUSH20 0xFA712EE4788C042E2B7BB55E6CB8EC569C4530C1 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x21D1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x9CAE2C8 SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1EB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1EC6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1EDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x1F6F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F34 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1F1C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1F61 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1FC6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x1F34 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1F1C JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x1FD2 JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1FEE DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2194 JUMP JUMPDEST PUSH2 0x203F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x207D JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x205E JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x20DF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x20E4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x213B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x866 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x866 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2212 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x21C8 JUMPI POP DUP2 ISZERO ISZERO JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP 0xDF 0x5E 0xE DUP2 0xDF 0xF6 STATICCALL RETURN 0xA7 0xE5 0x2B 0xA6 SWAP8 DUP3 0xC 0x5E ORIGIN 0xD8 MOD 0xA8 MSTORE8 PUSH2 0x6665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F77536166654552433230 GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x7563636565645361666545524332303A20617070 PUSH19 0x6F76652066726F6D206E6F6E2D7A65726F2074 PUSH16 0x206E6F6E2D7A65726F20616C6C6F7761 PUSH15 0x6365A265627A7A72315820A296B715 0xAE 0xE7 0xCA SWAP15 PUSH31 0xC1E121148E842B71C8DD5A795E69F27280CC1AB2C91E9D64736F6C63430005 GT STOP ORIGIN ",
  "pcMap": {
    "0": {
      "offset": [
        604,
        7755
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "6": {
      "op": "DUP1"
    },
    "7": {
      "op": "ISZERO"
    },
    "8": {
      "op": "PUSH2",
      "value": "0x10"
    },
    "11": {
      "op": "JUMPI"
    },
    "12": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14": {
      "op": "DUP1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "REVERT",
      "path": "22"
    },
    "16": {
      "op": "JUMPDEST"
    },
    "17": {
      "offset": [
        604,
        7755
      ],
      "op": "POP",
      "path": "22"
    },
    "18": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "21": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "LT",
      "path": "22"
    },
    "22": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x21C"
    },
    "25": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "26": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "29": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "SHR",
      "path": "22"
    },
    "32": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "DUP1",
      "path": "22"
    },
    "33": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x87788782"
    },
    "38": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "GT",
      "path": "22"
    },
    "39": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x125"
    },
    "42": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "43": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "DUP1",
      "path": "22"
    },
    "44": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xC7B9D530"
    },
    "49": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "GT",
      "path": "22"
    },
    "50": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xAD"
    },
    "53": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "54": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "DUP1",
      "path": "22"
    },
    "55": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xE9751F6B"
    },
    "60": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "GT",
      "path": "22"
    },
    "61": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x7C"
    },
    "64": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "65": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "DUP1",
      "path": "22"
    },
    "66": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xE9751F6B"
    },
    "71": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "EQ",
      "path": "22"
    },
    "72": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x386"
    },
    "75": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "76": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "DUP1",
      "path": "22"
    },
    "77": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xEC556889"
    },
    "82": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "EQ",
      "path": "22"
    },
    "83": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4A0"
    },
    "86": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "87": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "DUP1",
      "path": "22"
    },
    "88": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xEDC9AF95"
    },
    "93": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "EQ",
      "path": "22"
    },
    "94": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4A8"
    },
    "97": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "98": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "DUP1",
      "path": "22"
    },
    "99": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xF4B9FA75"
    },
    "104": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "EQ",
      "path": "22"
    },
    "105": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4B0"
    },
    "108": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "109": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "DUP1",
      "path": "22"
    },
    "110": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xF77C4791"
    },
    "115": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "EQ",
      "path": "22"
    },
    "116": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4B8"
    },
    "119": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "120": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x21C"
    },
    "123": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "JUMP",
      "path": "22"
    },
    "124": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "125": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "DUP1",
      "path": "22"
    },
    "126": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xC7B9D530"
    },
    "131": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "EQ",
      "path": "22"
    },
    "132": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x46A"
    },
    "135": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "136": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "DUP1",
      "path": "22"
    },
    "137": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xD0E30DB0"
    },
    "142": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "EQ",
      "path": "22"
    },
    "143": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x490"
    },
    "146": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "147": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "DUP1",
      "path": "22"
    },
    "148": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xD5C1FF73"
    },
    "153": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "EQ",
      "path": "22"
    },
    "154": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x386"
    },
    "157": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "158": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "DUP1",
      "path": "22"
    },
    "159": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xD6F19262"
    },
    "164": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "EQ",
      "path": "22"
    },
    "165": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x498"
    },
    "168": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "169": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x21C"
    },
    "172": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "JUMP",
      "path": "22"
    },
    "173": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "174": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "DUP1",
      "path": "22"
    },
    "175": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x97107D6D"
    },
    "180": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "GT",
      "path": "22"
    },
    "181": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xF4"
    },
    "184": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "185": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "DUP1",
      "path": "22"
    },
    "186": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x97107D6D"
    },
    "191": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "EQ",
      "path": "22"
    },
    "192": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3F1"
    },
    "195": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "196": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "DUP1",
      "path": "22"
    },
    "197": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xA6F19C84"
    },
    "202": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "EQ",
      "path": "22"
    },
    "203": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x417"
    },
    "206": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "207": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "DUP1",
      "path": "22"
    },
    "208": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xAB033EA9"
    },
    "213": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "EQ",
      "path": "22"
    },
    "214": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x41F"
    },
    "217": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "218": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "DUP1",
      "path": "22"
    },
    "219": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xAC1E5025"
    },
    "224": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "EQ",
      "path": "22"
    },
    "225": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x445"
    },
    "228": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "229": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "DUP1",
      "path": "22"
    },
    "230": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xC1A3D44C"
    },
    "235": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "EQ",
      "path": "22"
    },
    "236": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x462"
    },
    "239": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "240": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x21C"
    },
    "243": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "JUMP",
      "path": "22"
    },
    "244": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "245": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "DUP1",
      "path": "22"
    },
    "246": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x87788782"
    },
    "251": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "EQ",
      "path": "22"
    },
    "252": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x39E"
    },
    "255": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "256": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "DUP1",
      "path": "22"
    },
    "257": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x8BC7E8C4"
    },
    "262": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "EQ",
      "path": "22"
    },
    "263": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3A6"
    },
    "266": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "267": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "DUP1",
      "path": "22"
    },
    "268": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x92EEFE9B"
    },
    "273": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "EQ",
      "path": "22"
    },
    "274": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3AE"
    },
    "277": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "278": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "DUP1",
      "path": "22"
    },
    "279": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x955383BD"
    },
    "284": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "EQ",
      "path": "22"
    },
    "285": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3D4"
    },
    "288": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "289": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x21C"
    },
    "292": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "JUMP",
      "path": "22"
    },
    "293": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "294": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "DUP1",
      "path": "22"
    },
    "295": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x51CFF8D9"
    },
    "300": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "GT",
      "path": "22"
    },
    "301": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1A8"
    },
    "304": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "305": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "DUP1",
      "path": "22"
    },
    "306": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x7165485D"
    },
    "311": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "GT",
      "path": "22"
    },
    "312": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x177"
    },
    "315": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "316": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "DUP1",
      "path": "22"
    },
    "317": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x7165485D"
    },
    "322": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "EQ",
      "path": "22"
    },
    "323": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x376"
    },
    "326": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "327": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "DUP1",
      "path": "22"
    },
    "328": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x722713F7"
    },
    "333": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "EQ",
      "path": "22"
    },
    "334": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x37E"
    },
    "337": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "338": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "DUP1",
      "path": "22"
    },
    "339": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x7CC79113"
    },
    "344": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "EQ",
      "path": "22"
    },
    "345": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x386"
    },
    "348": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "349": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "DUP1",
      "path": "22"
    },
    "350": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x7FEF901A"
    },
    "355": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "EQ",
      "path": "22"
    },
    "356": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x38E"
    },
    "359": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "360": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "DUP1",
      "path": "22"
    },
    "361": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x853828B6"
    },
    "366": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "EQ",
      "path": "22"
    },
    "367": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x396"
    },
    "370": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "371": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x21C"
    },
    "374": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "JUMP",
      "path": "22"
    },
    "375": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "376": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "DUP1",
      "path": "22"
    },
    "377": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x51CFF8D9"
    },
    "382": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "EQ",
      "path": "22"
    },
    "383": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x323"
    },
    "386": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "387": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "DUP1",
      "path": "22"
    },
    "388": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x5AA6E675"
    },
    "393": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "EQ",
      "path": "22"
    },
    "394": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x349"
    },
    "397": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "398": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "DUP1",
      "path": "22"
    },
    "399": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x6A4874A1"
    },
    "404": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "EQ",
      "path": "22"
    },
    "405": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x351"
    },
    "408": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "409": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "DUP1",
      "path": "22"
    },
    "410": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x70897B23"
    },
    "415": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "EQ",
      "path": "22"
    },
    "416": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x359"
    },
    "419": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "420": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x21C"
    },
    "423": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "JUMP",
      "path": "22"
    },
    "424": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "425": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "DUP1",
      "path": "22"
    },
    "426": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x2E1A7D4D"
    },
    "431": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "GT",
      "path": "22"
    },
    "432": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1EF"
    },
    "435": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "436": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "DUP1",
      "path": "22"
    },
    "437": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x2E1A7D4D"
    },
    "442": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "EQ",
      "path": "22"
    },
    "443": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2E4"
    },
    "446": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "447": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "DUP1",
      "path": "22"
    },
    "448": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x366CD4F3"
    },
    "453": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "EQ",
      "path": "22"
    },
    "454": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x303"
    },
    "457": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "458": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "DUP1",
      "path": "22"
    },
    "459": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x3FC8CEF3"
    },
    "464": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "EQ",
      "path": "22"
    },
    "465": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x30B"
    },
    "468": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "469": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "DUP1",
      "path": "22"
    },
    "470": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x4641257D"
    },
    "475": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "EQ",
      "path": "22"
    },
    "476": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x313"
    },
    "479": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "480": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "DUP1",
      "path": "22"
    },
    "481": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x46C96AAC"
    },
    "486": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "EQ",
      "path": "22"
    },
    "487": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x31B"
    },
    "490": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "491": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x21C"
    },
    "494": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "JUMP",
      "path": "22"
    },
    "495": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "496": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "DUP1",
      "path": "22"
    },
    "497": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x11588086"
    },
    "502": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "EQ",
      "path": "22"
    },
    "503": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x221"
    },
    "506": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "507": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "DUP1",
      "path": "22"
    },
    "508": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x17D7DE7C"
    },
    "513": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "EQ",
      "path": "22"
    },
    "514": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x23B"
    },
    "517": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "518": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "DUP1",
      "path": "22"
    },
    "519": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x1F1FCD51"
    },
    "524": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "EQ",
      "path": "22"
    },
    "525": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2B8"
    },
    "528": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "529": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "DUP1",
      "path": "22"
    },
    "530": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x1FE4A686"
    },
    "535": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "EQ",
      "path": "22"
    },
    "536": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2DC"
    },
    "539": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "540": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "541": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "543": {
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "DUP1",
      "path": "22"
    },
    "544": {
      "first_revert": true,
      "fn": null,
      "offset": [
        604,
        7755
      ],
      "op": "REVERT",
      "path": "22"
    },
    "545": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7206,
        7320
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "546": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7206,
        7320
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x229"
    },
    "549": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7206,
        7320
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4C0"
    },
    "552": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "jump": "i",
      "offset": [
        7206,
        7320
      ],
      "op": "JUMP",
      "path": "22"
    },
    "553": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7206,
        7320
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "554": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7206,
        7320
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "556": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7206,
        7320
      ],
      "op": "DUP1",
      "path": "22"
    },
    "557": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7206,
        7320
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "558": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7206,
        7320
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "559": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7206,
        7320
      ],
      "op": "DUP3",
      "path": "22"
    },
    "560": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7206,
        7320
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "561": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7206,
        7320
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "562": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7206,
        7320
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "563": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7206,
        7320
      ],
      "op": "DUP2",
      "path": "22"
    },
    "564": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7206,
        7320
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "565": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7206,
        7320
      ],
      "op": "SUB",
      "path": "22"
    },
    "566": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7206,
        7320
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "568": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7206,
        7320
      ],
      "op": "ADD",
      "path": "22"
    },
    "569": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7206,
        7320
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "570": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7206,
        7320
      ],
      "op": "RETURN",
      "path": "22"
    },
    "571": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "572": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x243"
    },
    "575": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x550"
    },
    "578": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "jump": "i",
      "offset": [
        2267,
        2374
      ],
      "op": "JUMP",
      "path": "22"
    },
    "579": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "580": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "582": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "DUP1",
      "path": "22"
    },
    "583": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "584": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "586": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "DUP1",
      "path": "22"
    },
    "587": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "DUP3",
      "path": "22"
    },
    "588": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "589": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "DUP4",
      "path": "22"
    },
    "590": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "591": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "DUP2",
      "path": "22"
    },
    "592": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "DUP4",
      "path": "22"
    },
    "593": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "ADD",
      "path": "22"
    },
    "594": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "595": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "DUP4",
      "path": "22"
    },
    "596": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "597": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "598": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "599": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "DUP4",
      "path": "22"
    },
    "600": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "601": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "602": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "DUP4",
      "path": "22"
    },
    "603": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "ADD",
      "path": "22"
    },
    "604": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "605": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "DUP6",
      "path": "22"
    },
    "606": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "ADD",
      "path": "22"
    },
    "607": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "608": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "DUP1",
      "path": "22"
    },
    "609": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "DUP4",
      "path": "22"
    },
    "610": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "DUP4",
      "path": "22"
    },
    "611": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "613": {
      "op": "JUMPDEST"
    },
    "614": {
      "op": "DUP4"
    },
    "615": {
      "op": "DUP2"
    },
    "616": {
      "op": "LT"
    },
    "617": {
      "op": "ISZERO"
    },
    "618": {
      "op": "PUSH2",
      "value": "0x27D"
    },
    "621": {
      "op": "JUMPI"
    },
    "622": {
      "op": "DUP2"
    },
    "623": {
      "op": "DUP2"
    },
    "624": {
      "op": "ADD"
    },
    "625": {
      "op": "MLOAD"
    },
    "626": {
      "op": "DUP4"
    },
    "627": {
      "op": "DUP3"
    },
    "628": {
      "op": "ADD"
    },
    "629": {
      "op": "MSTORE"
    },
    "630": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "632": {
      "op": "ADD"
    },
    "633": {
      "op": "PUSH2",
      "value": "0x265"
    },
    "636": {
      "op": "JUMP"
    },
    "637": {
      "op": "JUMPDEST"
    },
    "638": {
      "op": "POP"
    },
    "639": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "POP",
      "path": "22"
    },
    "640": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "POP",
      "path": "22"
    },
    "641": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "POP",
      "path": "22"
    },
    "642": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "643": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "POP",
      "path": "22"
    },
    "644": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "645": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "DUP2",
      "path": "22"
    },
    "646": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "ADD",
      "path": "22"
    },
    "647": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "648": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1F"
    },
    "650": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "AND",
      "path": "22"
    },
    "651": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "DUP1",
      "path": "22"
    },
    "652": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "653": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2AA"
    },
    "656": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "657": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "DUP1",
      "path": "22"
    },
    "658": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "DUP3",
      "path": "22"
    },
    "659": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "SUB",
      "path": "22"
    },
    "660": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "DUP1",
      "path": "22"
    },
    "661": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "662": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "664": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "DUP4",
      "path": "22"
    },
    "665": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "667": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "SUB",
      "path": "22"
    },
    "668": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x100"
    },
    "671": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "EXP",
      "path": "22"
    },
    "672": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "SUB",
      "path": "22"
    },
    "673": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "NOT",
      "path": "22"
    },
    "674": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "AND",
      "path": "22"
    },
    "675": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "DUP2",
      "path": "22"
    },
    "676": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "677": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "679": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "ADD",
      "path": "22"
    },
    "680": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "681": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "POP",
      "path": "22"
    },
    "682": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "683": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "POP",
      "path": "22"
    },
    "684": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "685": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "POP",
      "path": "22"
    },
    "686": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "POP",
      "path": "22"
    },
    "687": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "POP",
      "path": "22"
    },
    "688": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "690": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "691": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "DUP1",
      "path": "22"
    },
    "692": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "693": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "SUB",
      "path": "22"
    },
    "694": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "695": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "RETURN",
      "path": "22"
    },
    "696": {
      "offset": [
        740,
        822
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "697": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        740,
        822
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2C0"
    },
    "700": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        740,
        822
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x587"
    },
    "703": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "jump": "i",
      "offset": [
        740,
        822
      ],
      "op": "JUMP",
      "path": "22"
    },
    "704": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        740,
        822
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "705": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        740,
        822
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "707": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        740,
        822
      ],
      "op": "DUP1",
      "path": "22"
    },
    "708": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        740,
        822
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "709": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "711": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "713": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "715": {
      "op": "SHL"
    },
    "716": {
      "op": "SUB"
    },
    "717": {
      "offset": [
        740,
        822
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "718": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        740,
        822
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "719": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        740,
        822
      ],
      "op": "AND",
      "path": "22"
    },
    "720": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        740,
        822
      ],
      "op": "DUP3",
      "path": "22"
    },
    "721": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        740,
        822
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "722": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        740,
        822
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "723": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        740,
        822
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "724": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        740,
        822
      ],
      "op": "DUP2",
      "path": "22"
    },
    "725": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        740,
        822
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "726": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        740,
        822
      ],
      "op": "SUB",
      "path": "22"
    },
    "727": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        740,
        822
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "729": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        740,
        822
      ],
      "op": "ADD",
      "path": "22"
    },
    "730": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        740,
        822
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "731": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        740,
        822
      ],
      "op": "RETURN",
      "path": "22"
    },
    "732": {
      "offset": [
        1930,
        1955
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "733": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        1930,
        1955
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2C0"
    },
    "736": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        1930,
        1955
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x599"
    },
    "739": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "jump": "i",
      "offset": [
        1930,
        1955
      ],
      "op": "JUMP",
      "path": "22"
    },
    "740": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3988,
        4696
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "741": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3988,
        4696
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x301"
    },
    "744": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3988,
        4696
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "746": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3988,
        4696
      ],
      "op": "DUP1",
      "path": "22"
    },
    "747": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3988,
        4696
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "748": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3988,
        4696
      ],
      "op": "SUB",
      "path": "22"
    },
    "749": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "751": {
      "op": "DUP2"
    },
    "752": {
      "op": "LT"
    },
    "753": {
      "op": "ISZERO"
    },
    "754": {
      "op": "PUSH2",
      "value": "0x2FA"
    },
    "757": {
      "op": "JUMPI"
    },
    "758": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "760": {
      "op": "DUP1"
    },
    "761": {
      "op": "REVERT"
    },
    "762": {
      "op": "JUMPDEST"
    },
    "763": {
      "op": "POP"
    },
    "764": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3988,
        4696
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "765": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3988,
        4696
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x5A8"
    },
    "768": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        3988,
        4696
      ],
      "op": "JUMP",
      "path": "22"
    },
    "769": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3988,
        4696
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "770": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3988,
        4696
      ],
      "op": "STOP",
      "path": "22"
    },
    "771": {
      "offset": [
        1215,
        1297
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "772": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        1215,
        1297
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2C0"
    },
    "775": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        1215,
        1297
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x86C"
    },
    "778": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        1215,
        1297
      ],
      "op": "JUMP",
      "path": "22"
    },
    "779": {
      "offset": [
        1002,
        1084
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "780": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        1002,
        1084
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2C0"
    },
    "783": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        1002,
        1084
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x884"
    },
    "786": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        1002,
        1084
      ],
      "op": "JUMP",
      "path": "22"
    },
    "787": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5305,
        6932
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "788": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5305,
        6932
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x301"
    },
    "791": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5305,
        6932
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x89C"
    },
    "794": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "jump": "i",
      "offset": [
        5305,
        6932
      ],
      "op": "JUMP",
      "path": "22"
    },
    "795": {
      "offset": [
        1482,
        1565
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "796": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        1482,
        1565
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2C0"
    },
    "799": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        1482,
        1565
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1198"
    },
    "802": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "jump": "i",
      "offset": [
        1482,
        1565
      ],
      "op": "JUMP",
      "path": "22"
    },
    "803": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3483,
        3913
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "804": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3483,
        3913
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x229"
    },
    "807": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3483,
        3913
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "809": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3483,
        3913
      ],
      "op": "DUP1",
      "path": "22"
    },
    "810": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3483,
        3913
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "811": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3483,
        3913
      ],
      "op": "SUB",
      "path": "22"
    },
    "812": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "814": {
      "op": "DUP2"
    },
    "815": {
      "op": "LT"
    },
    "816": {
      "op": "ISZERO"
    },
    "817": {
      "op": "PUSH2",
      "value": "0x339"
    },
    "820": {
      "op": "JUMPI"
    },
    "821": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "823": {
      "op": "DUP1"
    },
    "824": {
      "op": "REVERT"
    },
    "825": {
      "op": "JUMPDEST"
    },
    "826": {
      "op": "POP"
    },
    "827": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3483,
        3913
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "832": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "834": {
      "op": "SHL"
    },
    "835": {
      "op": "SUB"
    },
    "836": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3483,
        3913
      ],
      "op": "AND",
      "path": "22"
    },
    "837": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3483,
        3913
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x11B0"
    },
    "840": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        3483,
        3913
      ],
      "op": "JUMP",
      "path": "22"
    },
    "841": {
      "offset": [
        1868,
        1893
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "842": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        1868,
        1893
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2C0"
    },
    "845": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        1868,
        1893
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x13FA"
    },
    "848": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        1868,
        1893
      ],
      "op": "JUMP",
      "path": "22"
    },
    "849": {
      "offset": [
        828,
        909
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "850": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        828,
        909
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2C0"
    },
    "853": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        828,
        909
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1409"
    },
    "856": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        828,
        909
      ],
      "op": "JUMP",
      "path": "22"
    },
    "857": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2854,
        3022
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "858": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2854,
        3022
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x301"
    },
    "861": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2854,
        3022
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "863": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2854,
        3022
      ],
      "op": "DUP1",
      "path": "22"
    },
    "864": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2854,
        3022
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "865": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2854,
        3022
      ],
      "op": "SUB",
      "path": "22"
    },
    "866": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "868": {
      "op": "DUP2"
    },
    "869": {
      "op": "LT"
    },
    "870": {
      "op": "ISZERO"
    },
    "871": {
      "op": "PUSH2",
      "value": "0x36F"
    },
    "874": {
      "op": "JUMPI"
    },
    "875": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "877": {
      "op": "DUP1"
    },
    "878": {
      "op": "REVERT"
    },
    "879": {
      "op": "JUMPDEST"
    },
    "880": {
      "op": "POP"
    },
    "881": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2854,
        3022
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "882": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2854,
        3022
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1421"
    },
    "885": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "jump": "i",
      "offset": [
        2854,
        3022
      ],
      "op": "JUMP",
      "path": "22"
    },
    "886": {
      "offset": [
        1303,
        1386
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "887": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        1303,
        1386
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2C0"
    },
    "890": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        1303,
        1386
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1473"
    },
    "893": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "jump": "i",
      "offset": [
        1303,
        1386
      ],
      "op": "JUMP",
      "path": "22"
    },
    "894": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "offset": [
        7326,
        7437
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "895": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "offset": [
        7326,
        7437
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x229"
    },
    "898": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "offset": [
        7326,
        7437
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x148B"
    },
    "901": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "jump": "i",
      "offset": [
        7326,
        7437
      ],
      "op": "JUMP",
      "path": "22"
    },
    "902": {
      "offset": [
        1697,
        1743
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "903": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "offset": [
        1697,
        1743
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x229"
    },
    "906": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "offset": [
        1697,
        1743
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x14B1"
    },
    "909": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "jump": "i",
      "offset": [
        1697,
        1743
      ],
      "op": "JUMP",
      "path": "22"
    },
    "910": {
      "offset": [
        1572,
        1601
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "911": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "offset": [
        1572,
        1601
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x229"
    },
    "914": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "offset": [
        1572,
        1601
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x14B7"
    },
    "917": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "jump": "i",
      "offset": [
        1572,
        1601
      ],
      "op": "JUMP",
      "path": "22"
    },
    "918": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4769,
        5200
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "919": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4769,
        5200
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x229"
    },
    "922": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4769,
        5200
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x14BD"
    },
    "925": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "jump": "i",
      "offset": [
        4769,
        5200
      ],
      "op": "JUMP",
      "path": "22"
    },
    "926": {
      "offset": [
        1656,
        1691
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "927": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        1656,
        1691
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x229"
    },
    "930": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        1656,
        1691
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1680"
    },
    "933": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "jump": "i",
      "offset": [
        1656,
        1691
      ],
      "op": "JUMP",
      "path": "22"
    },
    "934": {
      "offset": [
        1750,
        1783
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "935": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        1750,
        1783
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x229"
    },
    "938": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        1750,
        1783
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1686"
    },
    "941": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "jump": "i",
      "offset": [
        1750,
        1783
      ],
      "op": "JUMP",
      "path": "22"
    },
    "942": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7601,
        7753
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "943": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7601,
        7753
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x301"
    },
    "946": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7601,
        7753
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "948": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7601,
        7753
      ],
      "op": "DUP1",
      "path": "22"
    },
    "949": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7601,
        7753
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "950": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7601,
        7753
      ],
      "op": "SUB",
      "path": "22"
    },
    "951": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "953": {
      "op": "DUP2"
    },
    "954": {
      "op": "LT"
    },
    "955": {
      "op": "ISZERO"
    },
    "956": {
      "op": "PUSH2",
      "value": "0x3C4"
    },
    "959": {
      "op": "JUMPI"
    },
    "960": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "962": {
      "op": "DUP1"
    },
    "963": {
      "op": "REVERT"
    },
    "964": {
      "op": "JUMPDEST"
    },
    "965": {
      "op": "POP"
    },
    "966": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7601,
        7753
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "969": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "971": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "973": {
      "op": "SHL"
    },
    "974": {
      "op": "SUB"
    },
    "975": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7601,
        7753
      ],
      "op": "AND",
      "path": "22"
    },
    "976": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7601,
        7753
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x168C"
    },
    "979": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "jump": "i",
      "offset": [
        7601,
        7753
      ],
      "op": "JUMP",
      "path": "22"
    },
    "980": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2538,
        2678
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "981": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2538,
        2678
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x301"
    },
    "984": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2538,
        2678
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "986": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2538,
        2678
      ],
      "op": "DUP1",
      "path": "22"
    },
    "987": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2538,
        2678
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "988": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2538,
        2678
      ],
      "op": "SUB",
      "path": "22"
    },
    "989": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "991": {
      "op": "DUP2"
    },
    "992": {
      "op": "LT"
    },
    "993": {
      "op": "ISZERO"
    },
    "994": {
      "op": "PUSH2",
      "value": "0x3EA"
    },
    "997": {
      "op": "JUMPI"
    },
    "998": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1000": {
      "op": "DUP1"
    },
    "1001": {
      "op": "REVERT"
    },
    "1002": {
      "op": "JUMPDEST"
    },
    "1003": {
      "op": "POP"
    },
    "1004": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2538,
        2678
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "1005": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2538,
        2678
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x16FB"
    },
    "1008": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "jump": "i",
      "offset": [
        2538,
        2678
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1009": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3028,
        3160
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1010": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3028,
        3160
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x301"
    },
    "1013": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3028,
        3160
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1015": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3028,
        3160
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1016": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3028,
        3160
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "1017": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3028,
        3160
      ],
      "op": "SUB",
      "path": "22"
    },
    "1018": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1020": {
      "op": "DUP2"
    },
    "1021": {
      "op": "LT"
    },
    "1022": {
      "op": "ISZERO"
    },
    "1023": {
      "op": "PUSH2",
      "value": "0x407"
    },
    "1026": {
      "op": "JUMPI"
    },
    "1027": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1029": {
      "op": "DUP1"
    },
    "1030": {
      "op": "REVERT"
    },
    "1031": {
      "op": "JUMPDEST"
    },
    "1032": {
      "op": "POP"
    },
    "1033": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3028,
        3160
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "1034": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1036": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1038": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1040": {
      "op": "SHL"
    },
    "1041": {
      "op": "SUB"
    },
    "1042": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3028,
        3160
      ],
      "op": "AND",
      "path": "22"
    },
    "1043": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3028,
        3160
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x174D"
    },
    "1046": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "jump": "i",
      "offset": [
        3028,
        3160
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1047": {
      "offset": [
        1393,
        1476
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1048": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        1393,
        1476
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2C0"
    },
    "1051": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        1393,
        1476
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x17BC"
    },
    "1054": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "jump": "i",
      "offset": [
        1393,
        1476
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1055": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7443,
        7595
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1056": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7443,
        7595
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x301"
    },
    "1059": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7443,
        7595
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1061": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7443,
        7595
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1062": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7443,
        7595
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "1063": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7443,
        7595
      ],
      "op": "SUB",
      "path": "22"
    },
    "1064": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1066": {
      "op": "DUP2"
    },
    "1067": {
      "op": "LT"
    },
    "1068": {
      "op": "ISZERO"
    },
    "1069": {
      "op": "PUSH2",
      "value": "0x435"
    },
    "1072": {
      "op": "JUMPI"
    },
    "1073": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1075": {
      "op": "DUP1"
    },
    "1076": {
      "op": "REVERT"
    },
    "1077": {
      "op": "JUMPDEST"
    },
    "1078": {
      "op": "POP"
    },
    "1079": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7443,
        7595
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "1080": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1082": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1084": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1086": {
      "op": "SHL"
    },
    "1087": {
      "op": "SUB"
    },
    "1088": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7443,
        7595
      ],
      "op": "AND",
      "path": "22"
    },
    "1089": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7443,
        7595
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x17D4"
    },
    "1092": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "jump": "i",
      "offset": [
        7443,
        7595
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1093": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2684,
        2848
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1094": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2684,
        2848
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x301"
    },
    "1097": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2684,
        2848
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1099": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2684,
        2848
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1100": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2684,
        2848
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "1101": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2684,
        2848
      ],
      "op": "SUB",
      "path": "22"
    },
    "1102": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1104": {
      "op": "DUP2"
    },
    "1105": {
      "op": "LT"
    },
    "1106": {
      "op": "ISZERO"
    },
    "1107": {
      "op": "PUSH2",
      "value": "0x45B"
    },
    "1110": {
      "op": "JUMPI"
    },
    "1111": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1113": {
      "op": "DUP1"
    },
    "1114": {
      "op": "REVERT"
    },
    "1115": {
      "op": "JUMPDEST"
    },
    "1116": {
      "op": "POP"
    },
    "1117": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2684,
        2848
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "1118": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2684,
        2848
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1843"
    },
    "1121": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "jump": "i",
      "offset": [
        2684,
        2848
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1122": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        7084,
        7200
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1123": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        7084,
        7200
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x229"
    },
    "1126": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        7084,
        7200
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1895"
    },
    "1129": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "jump": "i",
      "offset": [
        7084,
        7200
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1130": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2380,
        2532
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1131": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2380,
        2532
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x301"
    },
    "1134": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2380,
        2532
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1136": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2380,
        2532
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1137": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2380,
        2532
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "1138": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2380,
        2532
      ],
      "op": "SUB",
      "path": "22"
    },
    "1139": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1141": {
      "op": "DUP2"
    },
    "1142": {
      "op": "LT"
    },
    "1143": {
      "op": "ISZERO"
    },
    "1144": {
      "op": "PUSH2",
      "value": "0x480"
    },
    "1147": {
      "op": "JUMPI"
    },
    "1148": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1150": {
      "op": "DUP1"
    },
    "1151": {
      "op": "REVERT"
    },
    "1152": {
      "op": "JUMPDEST"
    },
    "1153": {
      "op": "POP"
    },
    "1154": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2380,
        2532
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "1155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1157": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1159": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1161": {
      "op": "SHL"
    },
    "1162": {
      "op": "SUB"
    },
    "1163": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2380,
        2532
      ],
      "op": "AND",
      "path": "22"
    },
    "1164": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2380,
        2532
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x18E4"
    },
    "1167": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "jump": "i",
      "offset": [
        2380,
        2532
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1168": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3166,
        3403
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1169": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3166,
        3403
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x301"
    },
    "1172": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3166,
        3403
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1953"
    },
    "1175": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "jump": "i",
      "offset": [
        3166,
        3403
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1176": {
      "offset": [
        1962,
        1983
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1177": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        1962,
        1983
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x229"
    },
    "1180": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        1962,
        1983
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1A92"
    },
    "1183": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "jump": "i",
      "offset": [
        1962,
        1983
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1184": {
      "offset": [
        1841,
        1861
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1185": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        1841,
        1861
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2C0"
    },
    "1188": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        1841,
        1861
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1A98"
    },
    "1191": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "jump": "i",
      "offset": [
        1841,
        1861
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1192": {
      "offset": [
        915,
        996
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1193": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        915,
        996
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2C0"
    },
    "1196": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        915,
        996
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1AA7"
    },
    "1199": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "jump": "i",
      "offset": [
        915,
        996
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1200": {
      "offset": [
        1128,
        1209
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1201": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        1128,
        1209
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2C0"
    },
    "1204": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        1128,
        1209
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1ABF"
    },
    "1207": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "jump": "i",
      "offset": [
        1128,
        1209
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1208": {
      "offset": [
        1899,
        1924
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1209": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        1899,
        1924
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2C0"
    },
    "1212": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        1899,
        1924
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1AD7"
    },
    "1215": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "jump": "i",
      "offset": [
        1899,
        1924
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1216": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7206,
        7320
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1217": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7290,
        7295
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 0,
      "value": "0x3"
    },
    "1219": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7290,
        7295
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1220": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7278,
        7313
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1222": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7278,
        7313
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1223": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7278,
        7313
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1224": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1229": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1231": {
      "op": "SHL"
    },
    "1232": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7278,
        7313
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1233": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7278,
        7313
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1234": {
      "offset": [
        1433,
        1475
      ],
      "op": "PUSH20",
      "path": "22",
      "value": "0xFA712EE4788C042E2B7BB55E6CB8EC569C4530C1"
    },
    "1255": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7278,
        7313
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1257": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7278,
        7313
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1258": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7278,
        7313
      ],
      "op": "ADD",
      "path": "22"
    },
    "1259": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7278,
        7313
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1260": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7278,
        7313
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1261": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7278,
        7313
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1262": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7252,
        7259
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1264": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7252,
        7259
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1265": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1267": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1269": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1271": {
      "op": "SHL"
    },
    "1272": {
      "op": "SUB"
    },
    "1273": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7290,
        7295
      ],
      "op": "AND",
      "path": "22"
    },
    "1274": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7290,
        7295
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1275": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7278,
        7306
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x70A08231"
    },
    "1280": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7278,
        7306
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1281": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7278,
        7313
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "1283": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7278,
        7313
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1284": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7278,
        7313
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1285": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7278,
        7313
      ],
      "op": "ADD",
      "path": "22"
    },
    "1286": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7278,
        7313
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1287": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7278,
        7313
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1289": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7278,
        7313
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1290": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7278,
        7313
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1291": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7278,
        7313
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1292": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7278,
        7313
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1293": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7278,
        7313
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1294": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7278,
        7313
      ],
      "op": "SUB",
      "path": "22"
    },
    "1295": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7278,
        7313
      ],
      "op": "ADD",
      "path": "22"
    },
    "1296": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7278,
        7313
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1297": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7290,
        7295
      ],
      "op": "DUP7",
      "path": "22"
    },
    "1298": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7278,
        7313
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1299": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7278,
        7313
      ],
      "op": "EXTCODESIZE",
      "path": "22"
    },
    "1300": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7278,
        7313
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1301": {
      "op": "DUP1"
    },
    "1302": {
      "op": "ISZERO"
    },
    "1303": {
      "op": "PUSH2",
      "value": "0x51F"
    },
    "1306": {
      "op": "JUMPI"
    },
    "1307": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1309": {
      "op": "DUP1"
    },
    "1310": {
      "op": "REVERT"
    },
    "1311": {
      "op": "JUMPDEST"
    },
    "1312": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7278,
        7313
      ],
      "op": "POP",
      "path": "22"
    },
    "1313": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7278,
        7313
      ],
      "op": "GAS",
      "path": "22"
    },
    "1314": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7278,
        7313
      ],
      "op": "STATICCALL",
      "path": "22"
    },
    "1315": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7278,
        7313
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1316": {
      "op": "DUP1"
    },
    "1317": {
      "op": "ISZERO"
    },
    "1318": {
      "op": "PUSH2",
      "value": "0x533"
    },
    "1321": {
      "op": "JUMPI"
    },
    "1322": {
      "op": "RETURNDATASIZE"
    },
    "1323": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1325": {
      "op": "DUP1"
    },
    "1326": {
      "op": "RETURNDATACOPY"
    },
    "1327": {
      "op": "RETURNDATASIZE"
    },
    "1328": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1330": {
      "op": "REVERT"
    },
    "1331": {
      "op": "JUMPDEST"
    },
    "1332": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7278,
        7313
      ],
      "op": "POP",
      "path": "22"
    },
    "1333": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7278,
        7313
      ],
      "op": "POP",
      "path": "22"
    },
    "1334": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7278,
        7313
      ],
      "op": "POP",
      "path": "22"
    },
    "1335": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7278,
        7313
      ],
      "op": "POP",
      "path": "22"
    },
    "1336": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7278,
        7313
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1338": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7278,
        7313
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1339": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7278,
        7313
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "1340": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1342": {
      "op": "DUP2"
    },
    "1343": {
      "op": "LT"
    },
    "1344": {
      "op": "ISZERO"
    },
    "1345": {
      "op": "PUSH2",
      "value": "0x549"
    },
    "1348": {
      "op": "JUMPI"
    },
    "1349": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1351": {
      "op": "DUP1"
    },
    "1352": {
      "op": "REVERT"
    },
    "1353": {
      "op": "JUMPDEST"
    },
    "1354": {
      "op": "POP"
    },
    "1355": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7278,
        7313
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1356": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7278,
        7313
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1357": {
      "op": "POP"
    },
    "1358": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        7206,
        7320
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1359": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "jump": "o",
      "offset": [
        7206,
        7320
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1360": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1361": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2334,
        2367
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 1,
      "value": "0x40"
    },
    "1363": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2334,
        2367
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1364": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2334,
        2367
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1365": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2334,
        2367
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1366": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2334,
        2367
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1367": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2334,
        2367
      ],
      "op": "ADD",
      "path": "22"
    },
    "1368": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2334,
        2367
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1369": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2334,
        2367
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1370": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2334,
        2367
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1371": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2334,
        2367
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x18"
    },
    "1373": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2334,
        2367
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1374": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2334,
        2367
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1375": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2334,
        2367
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x5374726174656779437572766559566F74657250726F78790000000000000000"
    },
    "1408": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2334,
        2367
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1410": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2334,
        2367
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1411": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2334,
        2367
      ],
      "op": "ADD",
      "path": "22"
    },
    "1412": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2334,
        2367
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1413": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2267,
        2374
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1414": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "jump": "o",
      "offset": [
        2267,
        2374
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1415": {
      "offset": [
        740,
        822
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1416": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1418": {
      "op": "DUP1"
    },
    "1419": {
      "op": "MLOAD"
    },
    "1420": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1422": {
      "op": "PUSH2",
      "value": "0x21D1"
    },
    "1425": {
      "op": "DUP4"
    },
    "1426": {
      "op": "CODECOPY"
    },
    "1427": {
      "op": "DUP2"
    },
    "1428": {
      "op": "MLOAD"
    },
    "1429": {
      "op": "SWAP2"
    },
    "1430": {
      "op": "MSTORE"
    },
    "1431": {
      "offset": [
        740,
        822
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1432": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "jump": "o",
      "offset": [
        740,
        822
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1433": {
      "offset": [
        1930,
        1955
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1434": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        1930,
        1955
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x6"
    },
    "1436": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        1930,
        1955
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1441": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1443": {
      "op": "SHL"
    },
    "1444": {
      "op": "SUB"
    },
    "1445": {
      "offset": [
        1930,
        1955
      ],
      "op": "AND",
      "path": "22"
    },
    "1446": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        1930,
        1955
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1447": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "jump": "o",
      "offset": [
        1930,
        1955
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1448": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3988,
        4696
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1449": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4064,
        4074
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 2,
      "value": "0x5"
    },
    "1451": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4064,
        4074
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1456": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1458": {
      "op": "SHL"
    },
    "1459": {
      "op": "SUB"
    },
    "1460": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4064,
        4074
      ],
      "op": "AND",
      "path": "22"
    },
    "1461": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4050,
        4060
      ],
      "op": "CALLER",
      "path": "22"
    },
    "1462": {
      "branch": 75,
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4050,
        4074
      ],
      "op": "EQ",
      "path": "22"
    },
    "1463": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4042,
        4090
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x5F5"
    },
    "1466": {
      "branch": 75,
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4042,
        4090
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1467": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4042,
        4090
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1469": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4042,
        4090
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1470": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4042,
        4090
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1471": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1475": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1477": {
      "op": "SHL"
    },
    "1478": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4042,
        4090
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1479": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4042,
        4090
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1480": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4042,
        4090
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1482": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4042,
        4090
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1484": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4042,
        4090
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1485": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4042,
        4090
      ],
      "op": "ADD",
      "path": "22"
    },
    "1486": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4042,
        4090
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1487": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4042,
        4090
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "1489": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4042,
        4090
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "1491": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4042,
        4090
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1492": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4042,
        4090
      ],
      "op": "ADD",
      "path": "22"
    },
    "1493": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4042,
        4090
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1494": {
      "op": "PUSH11",
      "value": "0x10B1B7B73A3937B63632B9"
    },
    "1506": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "1508": {
      "op": "SHL"
    },
    "1509": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4042,
        4090
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "1511": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4042,
        4090
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1512": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4042,
        4090
      ],
      "op": "ADD",
      "path": "22"
    },
    "1513": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4042,
        4090
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1514": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4042,
        4090
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1515": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4042,
        4090
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1516": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4042,
        4090
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1517": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4042,
        4090
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1518": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4042,
        4090
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1519": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4042,
        4090
      ],
      "op": "SUB",
      "path": "22"
    },
    "1520": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4042,
        4090
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "1522": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4042,
        4090
      ],
      "op": "ADD",
      "path": "22"
    },
    "1523": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4042,
        4090
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1524": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4042,
        4090
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1525": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4042,
        4090
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1526": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4119,
        4156
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1528": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4119,
        4156
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1529": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4119,
        4156
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1530": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1535": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1537": {
      "op": "SHL"
    },
    "1538": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4119,
        4156
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1539": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4119,
        4156
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1540": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4150,
        4154
      ],
      "op": "ADDRESS",
      "path": "22"
    },
    "1541": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4119,
        4156
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1543": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4119,
        4156
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1544": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4119,
        4156
      ],
      "op": "ADD",
      "path": "22"
    },
    "1545": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4119,
        4156
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1546": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4119,
        4156
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1547": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4119,
        4156
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1548": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4100,
        4116
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1550": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4100,
        4116
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1551": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1553": {
      "op": "DUP1"
    },
    "1554": {
      "op": "MLOAD"
    },
    "1555": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1557": {
      "op": "PUSH2",
      "value": "0x21D1"
    },
    "1560": {
      "op": "DUP4"
    },
    "1561": {
      "op": "CODECOPY"
    },
    "1562": {
      "op": "DUP2"
    },
    "1563": {
      "op": "MLOAD"
    },
    "1564": {
      "op": "SWAP2"
    },
    "1565": {
      "op": "MSTORE"
    },
    "1566": {
      "offset": [
        779,
        821
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1567": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4119,
        4141
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x70A08231"
    },
    "1572": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4119,
        4141
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1573": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4119,
        4156
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "1575": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4119,
        4156
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1576": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4119,
        4156
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1577": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4119,
        4156
      ],
      "op": "ADD",
      "path": "22"
    },
    "1578": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4119,
        4156
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1579": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4119,
        4156
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1581": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4119,
        4156
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1582": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4119,
        4156
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1583": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4119,
        4156
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1584": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4119,
        4156
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1585": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4119,
        4156
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1586": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4119,
        4156
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1587": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4119,
        4156
      ],
      "op": "SUB",
      "path": "22"
    },
    "1588": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4119,
        4156
      ],
      "op": "ADD",
      "path": "22"
    },
    "1589": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4119,
        4156
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1590": {
      "offset": [
        779,
        821
      ],
      "op": "DUP7",
      "path": "22"
    },
    "1591": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4119,
        4156
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1592": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4119,
        4156
      ],
      "op": "EXTCODESIZE",
      "path": "22"
    },
    "1593": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4119,
        4156
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1594": {
      "op": "DUP1"
    },
    "1595": {
      "op": "ISZERO"
    },
    "1596": {
      "op": "PUSH2",
      "value": "0x644"
    },
    "1599": {
      "op": "JUMPI"
    },
    "1600": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1602": {
      "op": "DUP1"
    },
    "1603": {
      "op": "REVERT"
    },
    "1604": {
      "op": "JUMPDEST"
    },
    "1605": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4119,
        4156
      ],
      "op": "POP",
      "path": "22"
    },
    "1606": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4119,
        4156
      ],
      "op": "GAS",
      "path": "22"
    },
    "1607": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4119,
        4156
      ],
      "op": "STATICCALL",
      "path": "22"
    },
    "1608": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4119,
        4156
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1609": {
      "op": "DUP1"
    },
    "1610": {
      "op": "ISZERO"
    },
    "1611": {
      "op": "PUSH2",
      "value": "0x658"
    },
    "1614": {
      "op": "JUMPI"
    },
    "1615": {
      "op": "RETURNDATASIZE"
    },
    "1616": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1618": {
      "op": "DUP1"
    },
    "1619": {
      "op": "RETURNDATACOPY"
    },
    "1620": {
      "op": "RETURNDATASIZE"
    },
    "1621": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1623": {
      "op": "REVERT"
    },
    "1624": {
      "op": "JUMPDEST"
    },
    "1625": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4119,
        4156
      ],
      "op": "POP",
      "path": "22"
    },
    "1626": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4119,
        4156
      ],
      "op": "POP",
      "path": "22"
    },
    "1627": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4119,
        4156
      ],
      "op": "POP",
      "path": "22"
    },
    "1628": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4119,
        4156
      ],
      "op": "POP",
      "path": "22"
    },
    "1629": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4119,
        4156
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1631": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4119,
        4156
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1632": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4119,
        4156
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "1633": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1635": {
      "op": "DUP2"
    },
    "1636": {
      "op": "LT"
    },
    "1637": {
      "op": "ISZERO"
    },
    "1638": {
      "op": "PUSH2",
      "value": "0x66E"
    },
    "1641": {
      "op": "JUMPI"
    },
    "1642": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1644": {
      "op": "DUP1"
    },
    "1645": {
      "op": "REVERT"
    },
    "1646": {
      "op": "JUMPDEST"
    },
    "1647": {
      "op": "POP"
    },
    "1648": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4119,
        4156
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1649": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4119,
        4156
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1650": {
      "op": "POP"
    },
    "1651": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4170,
        4188
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1652": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4170,
        4188
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1653": {
      "branch": 76,
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4170,
        4188
      ],
      "op": "LT",
      "path": "22"
    },
    "1654": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4166,
        4306
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1655": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4166,
        4306
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x6A7"
    },
    "1658": {
      "branch": 76,
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4166,
        4306
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1659": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4214,
        4250
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 3,
      "value": "0x692"
    },
    "1662": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4228,
        4249
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x68D"
    },
    "1665": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4228,
        4235
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1666": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4240,
        4248
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1667": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4228,
        4249
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "1672": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4228,
        4239
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1AE6"
    },
    "1675": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4228,
        4249
      ],
      "op": "AND",
      "path": "22"
    },
    "1676": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        4228,
        4249
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1677": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4228,
        4249
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1678": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4214,
        4227
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1B31"
    },
    "1681": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        4214,
        4250
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1682": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4214,
        4250
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1683": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4204,
        4250
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1684": {
      "op": "POP"
    },
    "1685": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4274,
        4295
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 4,
      "value": "0x6A4"
    },
    "1688": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4204,
        4250
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1689": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4286,
        4294
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1690": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4274,
        4295
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "1695": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4274,
        4285
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1BDE"
    },
    "1698": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4274,
        4295
      ],
      "op": "AND",
      "path": "22"
    },
    "1699": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        4274,
        4295
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1700": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4274,
        4295
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1701": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4264,
        4295
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1702": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4264,
        4295
      ],
      "op": "POP",
      "path": "22"
    },
    "1703": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4166,
        4306
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1704": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4316,
        4328
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1706": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4331,
        4376
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x6D0"
    },
    "1709": {
      "offset": [
        1829,
        1834
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2710"
    },
    "1712": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4331,
        4357
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x6C4"
    },
    "1715": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4343,
        4356
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "1717": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4343,
        4356
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1718": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4331,
        4338
      ],
      "op": "DUP7",
      "path": "22"
    },
    "1719": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4331,
        4342
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1C38"
    },
    "1722": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4331,
        4342
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1723": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4331,
        4357
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1724": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4331,
        4357
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1725": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4331,
        4357
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "1730": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4331,
        4357
      ],
      "op": "AND",
      "path": "22"
    },
    "1731": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        4331,
        4357
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1732": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4331,
        4357
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1733": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4331,
        4361
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1734": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4331,
        4376
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "1739": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4331,
        4361
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1C91"
    },
    "1742": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4331,
        4376
      ],
      "op": "AND",
      "path": "22"
    },
    "1743": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        4331,
        4376
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1744": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4331,
        4376
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1745": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4316,
        4376
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1746": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4316,
        4376
      ],
      "op": "POP",
      "path": "22"
    },
    "1747": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4387,
        4453
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 5,
      "value": "0x76B"
    },
    "1750": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4425,
        4435
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x5"
    },
    "1752": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4425,
        4435
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1754": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4425,
        4435
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1755": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4425,
        4435
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1756": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4425,
        4435
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1757": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4425,
        4435
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x100"
    },
    "1760": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4425,
        4435
      ],
      "op": "EXP",
      "path": "22"
    },
    "1761": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4425,
        4435
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1762": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4425,
        4435
      ],
      "op": "DIV",
      "path": "22"
    },
    "1763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1767": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1769": {
      "op": "SHL"
    },
    "1770": {
      "op": "SUB"
    },
    "1771": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4425,
        4435
      ],
      "op": "AND",
      "path": "22"
    },
    "1772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1776": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1778": {
      "op": "SHL"
    },
    "1779": {
      "op": "SUB"
    },
    "1780": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4413,
        4444
      ],
      "op": "AND",
      "path": "22"
    },
    "1781": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4413,
        4444
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x9EC5A894"
    },
    "1786": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4413,
        4446
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1788": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4413,
        4446
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1789": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4413,
        4446
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1790": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4413,
        4446
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "1795": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4413,
        4446
      ],
      "op": "AND",
      "path": "22"
    },
    "1796": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4413,
        4446
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE0"
    },
    "1798": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4413,
        4446
      ],
      "op": "SHL",
      "path": "22"
    },
    "1799": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4413,
        4446
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1800": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4413,
        4446
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1801": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4413,
        4446
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1803": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4413,
        4446
      ],
      "op": "ADD",
      "path": "22"
    },
    "1804": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4413,
        4446
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1806": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4413,
        4446
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1808": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4413,
        4446
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1809": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4413,
        4446
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1810": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4413,
        4446
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1811": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4413,
        4446
      ],
      "op": "SUB",
      "path": "22"
    },
    "1812": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4413,
        4446
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1813": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4413,
        4446
      ],
      "op": "DUP7",
      "path": "22"
    },
    "1814": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4413,
        4446
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1815": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4413,
        4446
      ],
      "op": "EXTCODESIZE",
      "path": "22"
    },
    "1816": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4413,
        4446
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1817": {
      "op": "DUP1"
    },
    "1818": {
      "op": "ISZERO"
    },
    "1819": {
      "op": "PUSH2",
      "value": "0x723"
    },
    "1822": {
      "op": "JUMPI"
    },
    "1823": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1825": {
      "op": "DUP1"
    },
    "1826": {
      "op": "REVERT"
    },
    "1827": {
      "op": "JUMPDEST"
    },
    "1828": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4413,
        4446
      ],
      "op": "POP",
      "path": "22"
    },
    "1829": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4413,
        4446
      ],
      "op": "GAS",
      "path": "22"
    },
    "1830": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4413,
        4446
      ],
      "op": "STATICCALL",
      "path": "22"
    },
    "1831": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4413,
        4446
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1832": {
      "op": "DUP1"
    },
    "1833": {
      "op": "ISZERO"
    },
    "1834": {
      "op": "PUSH2",
      "value": "0x737"
    },
    "1837": {
      "op": "JUMPI"
    },
    "1838": {
      "op": "RETURNDATASIZE"
    },
    "1839": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1841": {
      "op": "DUP1"
    },
    "1842": {
      "op": "RETURNDATACOPY"
    },
    "1843": {
      "op": "RETURNDATASIZE"
    },
    "1844": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1846": {
      "op": "REVERT"
    },
    "1847": {
      "op": "JUMPDEST"
    },
    "1848": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4413,
        4446
      ],
      "op": "POP",
      "path": "22"
    },
    "1849": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4413,
        4446
      ],
      "op": "POP",
      "path": "22"
    },
    "1850": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4413,
        4446
      ],
      "op": "POP",
      "path": "22"
    },
    "1851": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4413,
        4446
      ],
      "op": "POP",
      "path": "22"
    },
    "1852": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4413,
        4446
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1854": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4413,
        4446
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1855": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4413,
        4446
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "1856": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1858": {
      "op": "DUP2"
    },
    "1859": {
      "op": "LT"
    },
    "1860": {
      "op": "ISZERO"
    },
    "1861": {
      "op": "PUSH2",
      "value": "0x74D"
    },
    "1864": {
      "op": "JUMPI"
    },
    "1865": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1867": {
      "op": "DUP1"
    },
    "1868": {
      "op": "REVERT"
    },
    "1869": {
      "op": "JUMPDEST"
    },
    "1870": {
      "op": "POP"
    },
    "1871": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4413,
        4446
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1872": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1874": {
      "op": "DUP1"
    },
    "1875": {
      "op": "MLOAD"
    },
    "1876": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1878": {
      "op": "PUSH2",
      "value": "0x21D1"
    },
    "1881": {
      "op": "DUP4"
    },
    "1882": {
      "op": "CODECOPY"
    },
    "1883": {
      "op": "DUP2"
    },
    "1884": {
      "op": "MLOAD"
    },
    "1885": {
      "op": "SWAP2"
    },
    "1886": {
      "op": "MSTORE"
    },
    "1887": {
      "offset": [
        779,
        821
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1888": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4448,
        4452
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1889": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4387,
        4453
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "1894": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4387,
        4412
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1CD3"
    },
    "1897": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4387,
        4453
      ],
      "op": "AND",
      "path": "22"
    },
    "1898": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        4387,
        4453
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1899": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4387,
        4453
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1900": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4492,
        4502
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x5"
    },
    "1902": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4492,
        4502
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1903": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4480,
        4525
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1905": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4480,
        4525
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1906": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4480,
        4525
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1907": {
      "op": "PUSH4",
      "value": "0x2988BB9F"
    },
    "1912": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "1914": {
      "op": "SHL"
    },
    "1915": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4480,
        4525
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1916": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4480,
        4525
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1917": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1919": {
      "op": "DUP1"
    },
    "1920": {
      "op": "MLOAD"
    },
    "1921": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1923": {
      "op": "PUSH2",
      "value": "0x21D1"
    },
    "1926": {
      "op": "DUP4"
    },
    "1927": {
      "op": "CODECOPY"
    },
    "1928": {
      "op": "DUP2"
    },
    "1929": {
      "op": "MLOAD"
    },
    "1930": {
      "op": "SWAP2"
    },
    "1931": {
      "op": "MSTORE"
    },
    "1932": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4480,
        4525
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1934": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4480,
        4525
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1935": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4480,
        4525
      ],
      "op": "ADD",
      "path": "22"
    },
    "1936": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4480,
        4525
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1937": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4480,
        4525
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1938": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4480,
        4525
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1939": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4463,
        4477
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1941": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4463,
        4477
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1942": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1944": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1946": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1948": {
      "op": "SHL"
    },
    "1949": {
      "op": "SUB"
    },
    "1950": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4492,
        4502
      ],
      "op": "AND",
      "path": "22"
    },
    "1951": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4492,
        4502
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1952": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4480,
        4510
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xA622EE7C"
    },
    "1957": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4480,
        4510
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1958": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4480,
        4525
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "1960": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4480,
        4525
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1961": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4480,
        4525
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1962": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4480,
        4525
      ],
      "op": "ADD",
      "path": "22"
    },
    "1963": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4480,
        4525
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1964": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4480,
        4525
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1966": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4480,
        4525
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1967": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4480,
        4525
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1968": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4480,
        4525
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1969": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4480,
        4525
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1970": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4480,
        4525
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1971": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4480,
        4525
      ],
      "op": "SUB",
      "path": "22"
    },
    "1972": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4480,
        4525
      ],
      "op": "ADD",
      "path": "22"
    },
    "1973": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4480,
        4525
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1974": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4492,
        4502
      ],
      "op": "DUP7",
      "path": "22"
    },
    "1975": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4480,
        4525
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1976": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4480,
        4525
      ],
      "op": "EXTCODESIZE",
      "path": "22"
    },
    "1977": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4480,
        4525
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1978": {
      "op": "DUP1"
    },
    "1979": {
      "op": "ISZERO"
    },
    "1980": {
      "op": "PUSH2",
      "value": "0x7C4"
    },
    "1983": {
      "op": "JUMPI"
    },
    "1984": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1986": {
      "op": "DUP1"
    },
    "1987": {
      "op": "REVERT"
    },
    "1988": {
      "op": "JUMPDEST"
    },
    "1989": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4480,
        4525
      ],
      "op": "POP",
      "path": "22"
    },
    "1990": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4480,
        4525
      ],
      "op": "GAS",
      "path": "22"
    },
    "1991": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4480,
        4525
      ],
      "op": "STATICCALL",
      "path": "22"
    },
    "1992": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4480,
        4525
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1993": {
      "op": "DUP1"
    },
    "1994": {
      "op": "ISZERO"
    },
    "1995": {
      "op": "PUSH2",
      "value": "0x7D8"
    },
    "1998": {
      "op": "JUMPI"
    },
    "1999": {
      "op": "RETURNDATASIZE"
    },
    "2000": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2002": {
      "op": "DUP1"
    },
    "2003": {
      "op": "RETURNDATACOPY"
    },
    "2004": {
      "op": "RETURNDATASIZE"
    },
    "2005": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2007": {
      "op": "REVERT"
    },
    "2008": {
      "op": "JUMPDEST"
    },
    "2009": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4480,
        4525
      ],
      "op": "POP",
      "path": "22"
    },
    "2010": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4480,
        4525
      ],
      "op": "POP",
      "path": "22"
    },
    "2011": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4480,
        4525
      ],
      "op": "POP",
      "path": "22"
    },
    "2012": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4480,
        4525
      ],
      "op": "POP",
      "path": "22"
    },
    "2013": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4480,
        4525
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2015": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4480,
        4525
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2016": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4480,
        4525
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "2017": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2019": {
      "op": "DUP2"
    },
    "2020": {
      "op": "LT"
    },
    "2021": {
      "op": "ISZERO"
    },
    "2022": {
      "op": "PUSH2",
      "value": "0x7EE"
    },
    "2025": {
      "op": "JUMPI"
    },
    "2026": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2028": {
      "op": "DUP1"
    },
    "2029": {
      "op": "REVERT"
    },
    "2030": {
      "op": "JUMPDEST"
    },
    "2031": {
      "op": "POP"
    },
    "2032": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4480,
        4525
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2033": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4480,
        4525
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2034": {
      "op": "POP"
    },
    "2035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2037": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2039": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2041": {
      "op": "SHL"
    },
    "2042": {
      "op": "SUB"
    },
    "2043": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4543,
        4563
      ],
      "op": "DUP2",
      "path": "22",
      "statement": 6
    },
    "2044": {
      "branch": 77,
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4543,
        4563
      ],
      "op": "AND",
      "path": "22"
    },
    "2045": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4535,
        4574
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x836"
    },
    "2048": {
      "branch": 77,
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4535,
        4574
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2049": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4535,
        4574
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2051": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4535,
        4574
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2052": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4535,
        4574
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2053": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2057": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2059": {
      "op": "SHL"
    },
    "2060": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4535,
        4574
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2061": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4535,
        4574
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2062": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4535,
        4574
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2064": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4535,
        4574
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "2066": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4535,
        4574
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2067": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4535,
        4574
      ],
      "op": "ADD",
      "path": "22"
    },
    "2068": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4535,
        4574
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2069": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4535,
        4574
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x6"
    },
    "2071": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4535,
        4574
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "2073": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4535,
        4574
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2074": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4535,
        4574
      ],
      "op": "ADD",
      "path": "22"
    },
    "2075": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4535,
        4574
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2076": {
      "op": "PUSH6",
      "value": "0x85D985D5B1D"
    },
    "2083": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "2085": {
      "op": "SHL"
    },
    "2086": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4535,
        4574
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "2088": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4535,
        4574
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2089": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4535,
        4574
      ],
      "op": "ADD",
      "path": "22"
    },
    "2090": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4535,
        4574
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2091": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4535,
        4574
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2092": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4535,
        4574
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2093": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4535,
        4574
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2094": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4535,
        4574
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2095": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4535,
        4574
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2096": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4535,
        4574
      ],
      "op": "SUB",
      "path": "22"
    },
    "2097": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4535,
        4574
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "2099": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4535,
        4574
      ],
      "op": "ADD",
      "path": "22"
    },
    "2100": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4535,
        4574
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2101": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4535,
        4574
      ],
      "op": "REVERT",
      "path": "22"
    },
    "2102": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4535,
        4574
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2103": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4637,
        4689
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 7,
      "value": "0x866"
    },
    "2106": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4663,
        4669
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2107": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4671,
        4688
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x84A"
    },
    "2110": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4671,
        4678
      ],
      "op": "DUP7",
      "path": "22"
    },
    "2111": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4683,
        4687
      ],
      "op": "DUP6",
      "path": "22"
    },
    "2112": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4671,
        4688
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "2117": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4671,
        4682
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1AE6"
    },
    "2120": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4671,
        4688
      ],
      "op": "AND",
      "path": "22"
    },
    "2121": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        4671,
        4688
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2122": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4671,
        4688
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2123": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2125": {
      "op": "DUP1"
    },
    "2126": {
      "op": "MLOAD"
    },
    "2127": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2129": {
      "op": "PUSH2",
      "value": "0x21D1"
    },
    "2132": {
      "op": "DUP4"
    },
    "2133": {
      "op": "CODECOPY"
    },
    "2134": {
      "op": "DUP2"
    },
    "2135": {
      "op": "MLOAD"
    },
    "2136": {
      "op": "SWAP2"
    },
    "2137": {
      "op": "MSTORE"
    },
    "2138": {
      "offset": [
        779,
        821
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2139": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4637,
        4689
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2140": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4637,
        4689
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "2145": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4637,
        4662
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1CD3"
    },
    "2148": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4637,
        4689
      ],
      "op": "AND",
      "path": "22"
    },
    "2149": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        4637,
        4689
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2150": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4637,
        4689
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2151": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3988,
        4696
      ],
      "op": "POP",
      "path": "22"
    },
    "2152": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3988,
        4696
      ],
      "op": "POP",
      "path": "22"
    },
    "2153": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3988,
        4696
      ],
      "op": "POP",
      "path": "22"
    },
    "2154": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3988,
        4696
      ],
      "op": "POP",
      "path": "22"
    },
    "2155": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "jump": "o",
      "offset": [
        3988,
        4696
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2156": {
      "offset": [
        1215,
        1297
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2157": {
      "offset": [
        1254,
        1296
      ],
      "op": "PUSH20",
      "path": "22",
      "value": "0x16DE59092DAE5CCF4A1E6439D611FD0653F0BD01"
    },
    "2178": {
      "offset": [
        1215,
        1297
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2179": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "jump": "o",
      "offset": [
        1215,
        1297
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2180": {
      "offset": [
        1002,
        1084
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2181": {
      "offset": [
        1041,
        1083
      ],
      "op": "PUSH20",
      "path": "22",
      "value": "0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2"
    },
    "2202": {
      "offset": [
        1002,
        1084
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2203": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "jump": "o",
      "offset": [
        1002,
        1084
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2204": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5305,
        6932
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2205": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5363,
        5373
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 8,
      "value": "0x6"
    },
    "2207": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5363,
        5373
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2208": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2212": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2214": {
      "op": "SHL"
    },
    "2215": {
      "op": "SUB"
    },
    "2216": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5363,
        5373
      ],
      "op": "AND",
      "path": "22"
    },
    "2217": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5349,
        5359
      ],
      "op": "CALLER",
      "path": "22"
    },
    "2218": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5349,
        5373
      ],
      "op": "EQ",
      "path": "22"
    },
    "2219": {
      "branch": 78,
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5349,
        5373
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2220": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5349,
        5401
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x8BF"
    },
    "2223": {
      "branch": 78,
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5349,
        5401
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2224": {
      "op": "POP"
    },
    "2225": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5391,
        5401
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "2227": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5391,
        5401
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2228": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2232": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2234": {
      "op": "SHL"
    },
    "2235": {
      "op": "SUB"
    },
    "2236": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5391,
        5401
      ],
      "op": "AND",
      "path": "22"
    },
    "2237": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5377,
        5387
      ],
      "op": "CALLER",
      "path": "22"
    },
    "2238": {
      "branch": 79,
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5377,
        5401
      ],
      "op": "EQ",
      "path": "22"
    },
    "2239": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5349,
        5401
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2240": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5341,
        5417
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x8FE"
    },
    "2243": {
      "branch": 79,
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5341,
        5417
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2244": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5341,
        5417
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2246": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5341,
        5417
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2247": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5341,
        5417
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2248": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2252": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2254": {
      "op": "SHL"
    },
    "2255": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5341,
        5417
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2256": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5341,
        5417
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2257": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5341,
        5417
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2259": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5341,
        5417
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "2261": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5341,
        5417
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2262": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5341,
        5417
      ],
      "op": "ADD",
      "path": "22"
    },
    "2263": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5341,
        5417
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2264": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5341,
        5417
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "2266": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5341,
        5417
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "2268": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5341,
        5417
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2269": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5341,
        5417
      ],
      "op": "ADD",
      "path": "22"
    },
    "2270": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5341,
        5417
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2271": {
      "op": "PUSH11",
      "value": "0x8585D5D1A1BDC9A5E9959"
    },
    "2283": {
      "op": "PUSH1",
      "value": "0xAA"
    },
    "2285": {
      "op": "SHL"
    },
    "2286": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5341,
        5417
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "2288": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5341,
        5417
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2289": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5341,
        5417
      ],
      "op": "ADD",
      "path": "22"
    },
    "2290": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5341,
        5417
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2291": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5341,
        5417
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2292": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5341,
        5417
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2293": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5341,
        5417
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2294": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5341,
        5417
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2295": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5341,
        5417
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2296": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5341,
        5417
      ],
      "op": "SUB",
      "path": "22"
    },
    "2297": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5341,
        5417
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "2299": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5341,
        5417
      ],
      "op": "ADD",
      "path": "22"
    },
    "2300": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5341,
        5417
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2301": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5341,
        5417
      ],
      "op": "REVERT",
      "path": "22"
    },
    "2302": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5341,
        5417
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2303": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5439,
        5444
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 9,
      "value": "0x3"
    },
    "2305": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5439,
        5444
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2306": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5427,
        5460
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2308": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5427,
        5460
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2309": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5427,
        5460
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2310": {
      "op": "PUSH4",
      "value": "0x72E008F"
    },
    "2315": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2317": {
      "op": "SHL"
    },
    "2318": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5427,
        5460
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2319": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5427,
        5460
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2320": {
      "offset": [
        1433,
        1475
      ],
      "op": "PUSH20",
      "path": "22",
      "value": "0xFA712EE4788C042E2B7BB55E6CB8EC569C4530C1"
    },
    "2341": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5427,
        5460
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "2343": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5427,
        5460
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2344": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5427,
        5460
      ],
      "op": "ADD",
      "path": "22"
    },
    "2345": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5427,
        5460
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2346": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5427,
        5460
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2347": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5427,
        5460
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2352": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2354": {
      "op": "SHL"
    },
    "2355": {
      "op": "SUB"
    },
    "2356": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5439,
        5444
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2357": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5439,
        5444
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "2358": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5439,
        5444
      ],
      "op": "AND",
      "path": "22"
    },
    "2359": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5439,
        5444
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2360": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5427,
        5453
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xE5C011E"
    },
    "2365": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5427,
        5453
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2366": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5427,
        5460
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "2368": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5427,
        5460
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2369": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5427,
        5460
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2370": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5427,
        5460
      ],
      "op": "ADD",
      "path": "22"
    },
    "2371": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5427,
        5460
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "2372": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5439,
        5444
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2374": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5439,
        5444
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "2375": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5427,
        5460
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2376": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5427,
        5460
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2377": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5427,
        5460
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2378": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5427,
        5460
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2379": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5427,
        5460
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2380": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5427,
        5460
      ],
      "op": "SUB",
      "path": "22"
    },
    "2381": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5427,
        5460
      ],
      "op": "ADD",
      "path": "22"
    },
    "2382": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5427,
        5460
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2383": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5439,
        5444
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2384": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5439,
        5444
      ],
      "op": "DUP8",
      "path": "22"
    },
    "2385": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5427,
        5460
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2386": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5427,
        5460
      ],
      "op": "EXTCODESIZE",
      "path": "22"
    },
    "2387": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5427,
        5460
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2388": {
      "op": "DUP1"
    },
    "2389": {
      "op": "ISZERO"
    },
    "2390": {
      "op": "PUSH2",
      "value": "0x95E"
    },
    "2393": {
      "op": "JUMPI"
    },
    "2394": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2396": {
      "op": "DUP1"
    },
    "2397": {
      "op": "REVERT"
    },
    "2398": {
      "op": "JUMPDEST"
    },
    "2399": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5427,
        5460
      ],
      "op": "POP",
      "path": "22"
    },
    "2400": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5427,
        5460
      ],
      "op": "GAS",
      "path": "22"
    },
    "2401": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5427,
        5460
      ],
      "op": "CALL",
      "path": "22"
    },
    "2402": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5427,
        5460
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2403": {
      "op": "DUP1"
    },
    "2404": {
      "op": "ISZERO"
    },
    "2405": {
      "op": "PUSH2",
      "value": "0x972"
    },
    "2408": {
      "op": "JUMPI"
    },
    "2409": {
      "op": "RETURNDATASIZE"
    },
    "2410": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2412": {
      "op": "DUP1"
    },
    "2413": {
      "op": "RETURNDATACOPY"
    },
    "2414": {
      "op": "RETURNDATASIZE"
    },
    "2415": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2417": {
      "op": "REVERT"
    },
    "2418": {
      "op": "JUMPDEST"
    },
    "2419": {
      "op": "POP"
    },
    "2420": {
      "op": "POP"
    },
    "2421": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5485,
        5521
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2423": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5485,
        5521
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2424": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5485,
        5521
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2425": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2430": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2432": {
      "op": "SHL"
    },
    "2433": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5485,
        5521
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2434": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5485,
        5521
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2435": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5515,
        5519
      ],
      "op": "ADDRESS",
      "path": "22"
    },
    "2436": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5485,
        5521
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "2438": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5485,
        5521
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2439": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5485,
        5521
      ],
      "op": "ADD",
      "path": "22"
    },
    "2440": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5485,
        5521
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2441": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5485,
        5521
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2442": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5485,
        5521
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2443": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5470,
        5482
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2445": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5470,
        5482
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "2446": {
      "op": "POP"
    },
    "2447": {
      "offset": [
        866,
        908
      ],
      "op": "PUSH20",
      "path": "22",
      "value": "0xD533A949740BB3306D119CC777FA900BA034CD52"
    },
    "2468": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        866,
        908
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "2469": {
      "op": "POP"
    },
    "2470": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5485,
        5506
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x70A08231"
    },
    "2475": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5485,
        5506
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2476": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5485,
        5521
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "2478": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5485,
        5521
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2479": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5485,
        5521
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2480": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5485,
        5521
      ],
      "op": "ADD",
      "path": "22"
    },
    "2481": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5485,
        5521
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "2482": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5485,
        5521
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2484": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5485,
        5521
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "2485": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5485,
        5521
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2486": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5485,
        5521
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2487": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5485,
        5521
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2488": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5485,
        5521
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2489": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5485,
        5521
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2490": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5485,
        5521
      ],
      "op": "SUB",
      "path": "22"
    },
    "2491": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5485,
        5521
      ],
      "op": "ADD",
      "path": "22"
    },
    "2492": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5485,
        5521
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2493": {
      "offset": [
        866,
        908
      ],
      "op": "DUP7",
      "path": "22"
    },
    "2494": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5485,
        5521
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2495": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5485,
        5521
      ],
      "op": "EXTCODESIZE",
      "path": "22"
    },
    "2496": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5485,
        5521
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2497": {
      "op": "DUP1"
    },
    "2498": {
      "op": "ISZERO"
    },
    "2499": {
      "op": "PUSH2",
      "value": "0x9CB"
    },
    "2502": {
      "op": "JUMPI"
    },
    "2503": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2505": {
      "op": "DUP1"
    },
    "2506": {
      "op": "REVERT"
    },
    "2507": {
      "op": "JUMPDEST"
    },
    "2508": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5485,
        5521
      ],
      "op": "POP",
      "path": "22"
    },
    "2509": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5485,
        5521
      ],
      "op": "GAS",
      "path": "22"
    },
    "2510": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5485,
        5521
      ],
      "op": "STATICCALL",
      "path": "22"
    },
    "2511": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5485,
        5521
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2512": {
      "op": "DUP1"
    },
    "2513": {
      "op": "ISZERO"
    },
    "2514": {
      "op": "PUSH2",
      "value": "0x9DF"
    },
    "2517": {
      "op": "JUMPI"
    },
    "2518": {
      "op": "RETURNDATASIZE"
    },
    "2519": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2521": {
      "op": "DUP1"
    },
    "2522": {
      "op": "RETURNDATACOPY"
    },
    "2523": {
      "op": "RETURNDATASIZE"
    },
    "2524": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2526": {
      "op": "REVERT"
    },
    "2527": {
      "op": "JUMPDEST"
    },
    "2528": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5485,
        5521
      ],
      "op": "POP",
      "path": "22"
    },
    "2529": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5485,
        5521
      ],
      "op": "POP",
      "path": "22"
    },
    "2530": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5485,
        5521
      ],
      "op": "POP",
      "path": "22"
    },
    "2531": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5485,
        5521
      ],
      "op": "POP",
      "path": "22"
    },
    "2532": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5485,
        5521
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2534": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5485,
        5521
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2535": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5485,
        5521
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "2536": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2538": {
      "op": "DUP2"
    },
    "2539": {
      "op": "LT"
    },
    "2540": {
      "op": "ISZERO"
    },
    "2541": {
      "op": "PUSH2",
      "value": "0x9F5"
    },
    "2544": {
      "op": "JUMPI"
    },
    "2545": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2547": {
      "op": "DUP1"
    },
    "2548": {
      "op": "REVERT"
    },
    "2549": {
      "op": "JUMPDEST"
    },
    "2550": {
      "op": "POP"
    },
    "2551": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5485,
        5521
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2552": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5485,
        5521
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2553": {
      "op": "POP"
    },
    "2554": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5535,
        5543
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2555": {
      "branch": 80,
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5535,
        5543
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2556": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5531,
        6049
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xCAA"
    },
    "2559": {
      "branch": 80,
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5531,
        6049
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2560": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5559,
        5575
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2562": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5578,
        5611
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xA1C"
    },
    "2565": {
      "offset": [
        1644,
        1649
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2710"
    },
    "2568": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5578,
        5595
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x6C4"
    },
    "2571": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5587,
        5594
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2573": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5587,
        5594
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2574": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5578,
        5582
      ],
      "op": "DUP6",
      "path": "22"
    },
    "2575": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5578,
        5586
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1C38"
    },
    "2578": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5578,
        5586
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2579": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5578,
        5595
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2580": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5578,
        5595
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2581": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5578,
        5595
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "2586": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5578,
        5595
      ],
      "op": "AND",
      "path": "22"
    },
    "2587": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "jump": "i",
      "offset": [
        5578,
        5595
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2588": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5578,
        5611
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2589": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5559,
        5611
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2590": {
      "op": "POP"
    },
    "2591": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5625,
        5666
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 10,
      "value": "0xA57"
    },
    "2594": {
      "offset": [
        866,
        908
      ],
      "op": "PUSH20",
      "path": "22",
      "value": "0xD533A949740BB3306D119CC777FA900BA034CD52"
    },
    "2615": {
      "offset": [
        1522,
        1564
      ],
      "op": "PUSH20",
      "path": "22",
      "value": "0xF147B8125D2EF93FB6965DB97D6746952A133934"
    },
    "2636": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5559,
        5611
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2637": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5625,
        5666
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "2642": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5625,
        5649
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1CD3"
    },
    "2645": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5625,
        5666
      ],
      "op": "AND",
      "path": "22"
    },
    "2646": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "jump": "i",
      "offset": [
        5625,
        5666
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2647": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5625,
        5666
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2648": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5687,
        5705
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 11,
      "value": "0xA67"
    },
    "2651": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5687,
        5691
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2652": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5696,
        5704
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2653": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5687,
        5705
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "2658": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5687,
        5695
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1AE6"
    },
    "2661": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5687,
        5705
      ],
      "op": "AND",
      "path": "22"
    },
    "2662": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "jump": "i",
      "offset": [
        5687,
        5705
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2663": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5687,
        5705
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2664": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5680,
        5705
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2665": {
      "op": "POP"
    },
    "2666": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5720,
        5751
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 12,
      "value": "0xAA3"
    },
    "2669": {
      "offset": [
        866,
        908
      ],
      "op": "PUSH20",
      "path": "22",
      "value": "0xD533A949740BB3306D119CC777FA900BA034CD52"
    },
    "2690": {
      "offset": [
        953,
        995
      ],
      "op": "PUSH20",
      "path": "22",
      "value": "0x7A250D5630B4CF539739DF2C5DACB4C659F2488D"
    },
    "2711": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5749,
        5750
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2713": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5720,
        5751
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "2718": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5720,
        5743
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1D2A"
    },
    "2721": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5720,
        5751
      ],
      "op": "AND",
      "path": "22"
    },
    "2722": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "jump": "i",
      "offset": [
        5720,
        5751
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2723": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5720,
        5751
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2724": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5765,
        5799
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 13,
      "value": "0xADC"
    },
    "2727": {
      "offset": [
        866,
        908
      ],
      "op": "PUSH20",
      "path": "22",
      "value": "0xD533A949740BB3306D119CC777FA900BA034CD52"
    },
    "2748": {
      "offset": [
        953,
        995
      ],
      "op": "PUSH20",
      "path": "22",
      "value": "0x7A250D5630B4CF539739DF2C5DACB4C659F2488D"
    },
    "2769": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5794,
        5798
      ],
      "op": "DUP5",
      "path": "22"
    },
    "2770": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5765,
        5799
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "2775": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5765,
        5788
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1D2A"
    },
    "2778": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5765,
        5799
      ],
      "op": "AND",
      "path": "22"
    },
    "2779": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "jump": "i",
      "offset": [
        5765,
        5799
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2780": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5765,
        5799
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2781": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5838,
        5854
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2783": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5838,
        5854
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2784": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5838,
        5854
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2785": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5852,
        5853
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x3"
    },
    "2787": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5838,
        5854
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2788": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5838,
        5854
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2789": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5838,
        5854
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2790": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5838,
        5854
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x80"
    },
    "2792": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5838,
        5854
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2793": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5838,
        5854
      ],
      "op": "ADD",
      "path": "22"
    },
    "2794": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5838,
        5854
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2795": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5838,
        5854
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "2796": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5838,
        5854
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2797": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5814,
        5835
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x60"
    },
    "2799": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5814,
        5835
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2800": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5838,
        5854
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2802": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5838,
        5854
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2803": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5838,
        5854
      ],
      "op": "ADD",
      "path": "22"
    },
    "2804": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5814,
        5835
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2805": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5814,
        5835
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2806": {
      "op": "CODESIZE"
    },
    "2807": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5838,
        5854
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2808": {
      "op": "CODECOPY"
    },
    "2809": {
      "op": "ADD"
    },
    "2810": {
      "op": "SWAP1"
    },
    "2811": {
      "op": "POP"
    },
    "2812": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5838,
        5854
      ],
      "op": "POP",
      "path": "22"
    },
    "2813": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5814,
        5854
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2814": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5814,
        5854
      ],
      "op": "POP",
      "path": "22"
    },
    "2815": {
      "offset": [
        866,
        908
      ],
      "op": "PUSH20",
      "path": "22",
      "value": "0xD533A949740BB3306D119CC777FA900BA034CD52"
    },
    "2836": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5868,
        5872
      ],
      "op": "DUP2",
      "path": "22",
      "statement": 14
    },
    "2837": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5873,
        5874
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2839": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5868,
        5875
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2840": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5868,
        5875
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2841": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5868,
        5875
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2842": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5868,
        5875
      ],
      "op": "LT",
      "path": "22"
    },
    "2843": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5868,
        5875
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB20"
    },
    "2846": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5868,
        5875
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2847": {
      "dev": "Index out of range",
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5868,
        5875
      ],
      "op": "INVALID",
      "path": "22"
    },
    "2848": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5868,
        5875
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2849": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5868,
        5875
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2851": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5868,
        5875
      ],
      "op": "MUL",
      "path": "22"
    },
    "2852": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5868,
        5875
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2854": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5868,
        5875
      ],
      "op": "ADD",
      "path": "22"
    },
    "2855": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5868,
        5875
      ],
      "op": "ADD",
      "path": "22"
    },
    "2856": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5868,
        5881
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2857": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2861": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2863": {
      "op": "SHL"
    },
    "2864": {
      "op": "SUB"
    },
    "2865": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5868,
        5881
      ],
      "op": "AND",
      "path": "22"
    },
    "2866": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5868,
        5881
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2867": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5868,
        5881
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2868": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2870": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2872": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2874": {
      "op": "SHL"
    },
    "2875": {
      "op": "SUB"
    },
    "2876": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5868,
        5881
      ],
      "op": "AND",
      "path": "22"
    },
    "2877": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5868,
        5881
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2878": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5868,
        5881
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2879": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5868,
        5881
      ],
      "op": "POP",
      "path": "22"
    },
    "2880": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5868,
        5881
      ],
      "op": "POP",
      "path": "22"
    },
    "2881": {
      "offset": [
        1041,
        1083
      ],
      "op": "PUSH20",
      "path": "22",
      "value": "0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2"
    },
    "2902": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5895,
        5899
      ],
      "op": "DUP2",
      "path": "22",
      "statement": 15
    },
    "2903": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5900,
        5901
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "2905": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5895,
        5902
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2906": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5895,
        5902
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2907": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5895,
        5902
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2908": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5895,
        5902
      ],
      "op": "LT",
      "path": "22"
    },
    "2909": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5895,
        5902
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB62"
    },
    "2912": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5895,
        5902
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2913": {
      "dev": "Index out of range",
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5895,
        5902
      ],
      "op": "INVALID",
      "path": "22"
    },
    "2914": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5895,
        5902
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2915": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5895,
        5902
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2917": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5895,
        5902
      ],
      "op": "MUL",
      "path": "22"
    },
    "2918": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5895,
        5902
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2920": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5895,
        5902
      ],
      "op": "ADD",
      "path": "22"
    },
    "2921": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5895,
        5902
      ],
      "op": "ADD",
      "path": "22"
    },
    "2922": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5895,
        5909
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2927": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2929": {
      "op": "SHL"
    },
    "2930": {
      "op": "SUB"
    },
    "2931": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5895,
        5909
      ],
      "op": "AND",
      "path": "22"
    },
    "2932": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5895,
        5909
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2933": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5895,
        5909
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2938": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2940": {
      "op": "SHL"
    },
    "2941": {
      "op": "SUB"
    },
    "2942": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5895,
        5909
      ],
      "op": "AND",
      "path": "22"
    },
    "2943": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5895,
        5909
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2944": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5895,
        5909
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2945": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5895,
        5909
      ],
      "op": "POP",
      "path": "22"
    },
    "2946": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5895,
        5909
      ],
      "op": "POP",
      "path": "22"
    },
    "2947": {
      "offset": [
        1166,
        1208
      ],
      "op": "PUSH20",
      "path": "22",
      "value": "0x6B175474E89094C44DA98B954EEDEAC495271D0F"
    },
    "2968": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5923,
        5927
      ],
      "op": "DUP2",
      "path": "22",
      "statement": 16
    },
    "2969": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5928,
        5929
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "2971": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5923,
        5930
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2972": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5923,
        5930
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2973": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5923,
        5930
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2974": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5923,
        5930
      ],
      "op": "LT",
      "path": "22"
    },
    "2975": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5923,
        5930
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xBA4"
    },
    "2978": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5923,
        5930
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2979": {
      "dev": "Index out of range",
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5923,
        5930
      ],
      "op": "INVALID",
      "path": "22"
    },
    "2980": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5923,
        5930
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2985": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2987": {
      "op": "SHL"
    },
    "2988": {
      "op": "SUB"
    },
    "2989": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5923,
        5936
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2990": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5923,
        5936
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "2991": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5923,
        5936
      ],
      "op": "AND",
      "path": "22"
    },
    "2992": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5923,
        5930
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2994": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5923,
        5930
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "2995": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5923,
        5930
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2996": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5923,
        5930
      ],
      "op": "MUL",
      "path": "22"
    },
    "2997": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5923,
        5930
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2998": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5923,
        5930
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2999": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5923,
        5930
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3000": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5923,
        5930
      ],
      "op": "ADD",
      "path": "22"
    },
    "3001": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5923,
        5930
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3002": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5923,
        5930
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3003": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5923,
        5930
      ],
      "op": "ADD",
      "path": "22"
    },
    "3004": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5923,
        5936
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3005": {
      "offset": [
        953,
        995
      ],
      "op": "PUSH20",
      "path": "22",
      "value": "0x7A250D5630B4CF539739DF2C5DACB4C659F2488D"
    },
    "3026": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        5984
      ],
      "op": "PUSH4",
      "path": "22",
      "statement": 17,
      "value": "0x38ED1739"
    },
    "3031": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5985,
        5989
      ],
      "op": "DUP5",
      "path": "22"
    },
    "3032": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5999,
        6000
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3034": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6003,
        6007
      ],
      "op": "DUP5",
      "path": "22"
    },
    "3035": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6017,
        6021
      ],
      "op": "ADDRESS",
      "path": "22"
    },
    "3036": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6024,
        6037
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xBED"
    },
    "3039": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6024,
        6027
      ],
      "op": "TIMESTAMP",
      "path": "22"
    },
    "3040": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6032,
        6036
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x708"
    },
    "3043": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6024,
        6037
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "3048": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6024,
        6031
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1BDE"
    },
    "3051": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6024,
        6037
      ],
      "op": "AND",
      "path": "22"
    },
    "3052": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "jump": "i",
      "offset": [
        6024,
        6037
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3053": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6024,
        6037
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3054": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3056": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3057": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "DUP7",
      "path": "22"
    },
    "3058": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "3063": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "AND",
      "path": "22"
    },
    "3064": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE0"
    },
    "3066": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "SHL",
      "path": "22"
    },
    "3067": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3068": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3069": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "3071": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "ADD",
      "path": "22"
    },
    "3072": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3073": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "DUP7",
      "path": "22"
    },
    "3074": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3075": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3076": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3078": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "ADD",
      "path": "22"
    },
    "3079": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "DUP6",
      "path": "22"
    },
    "3080": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3081": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3082": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3084": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "ADD",
      "path": "22"
    },
    "3085": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3086": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3088": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "ADD",
      "path": "22"
    },
    "3089": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "DUP5",
      "path": "22"
    },
    "3090": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3092": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3094": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3096": {
      "op": "SHL"
    },
    "3097": {
      "op": "SUB"
    },
    "3098": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "AND",
      "path": "22"
    },
    "3099": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3103": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3105": {
      "op": "SHL"
    },
    "3106": {
      "op": "SUB"
    },
    "3107": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "AND",
      "path": "22"
    },
    "3108": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3109": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3110": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3112": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "ADD",
      "path": "22"
    },
    "3113": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3114": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3115": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3116": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3118": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "ADD",
      "path": "22"
    },
    "3119": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3120": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3121": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "SUB",
      "path": "22"
    },
    "3122": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3123": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3124": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "DUP6",
      "path": "22"
    },
    "3125": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3126": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3127": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3128": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3129": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3130": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3132": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "ADD",
      "path": "22"
    },
    "3133": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3134": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "POP",
      "path": "22"
    },
    "3135": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3136": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3137": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3138": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3140": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "ADD",
      "path": "22"
    },
    "3141": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3142": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3144": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "MUL",
      "path": "22"
    },
    "3145": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3146": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3147": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3148": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3150": {
      "op": "JUMPDEST"
    },
    "3151": {
      "op": "DUP4"
    },
    "3152": {
      "op": "DUP2"
    },
    "3153": {
      "op": "LT"
    },
    "3154": {
      "op": "ISZERO"
    },
    "3155": {
      "op": "PUSH2",
      "value": "0xC66"
    },
    "3158": {
      "op": "JUMPI"
    },
    "3159": {
      "op": "DUP2"
    },
    "3160": {
      "op": "DUP2"
    },
    "3161": {
      "op": "ADD"
    },
    "3162": {
      "op": "MLOAD"
    },
    "3163": {
      "op": "DUP4"
    },
    "3164": {
      "op": "DUP3"
    },
    "3165": {
      "op": "ADD"
    },
    "3166": {
      "op": "MSTORE"
    },
    "3167": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3169": {
      "op": "ADD"
    },
    "3170": {
      "op": "PUSH2",
      "value": "0xC4E"
    },
    "3173": {
      "op": "JUMP"
    },
    "3174": {
      "op": "JUMPDEST"
    },
    "3175": {
      "op": "POP"
    },
    "3176": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "POP",
      "path": "22"
    },
    "3177": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "POP",
      "path": "22"
    },
    "3178": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "POP",
      "path": "22"
    },
    "3179": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3180": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "POP",
      "path": "22"
    },
    "3181": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "ADD",
      "path": "22"
    },
    "3182": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "SWAP7",
      "path": "22"
    },
    "3183": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "POP",
      "path": "22"
    },
    "3184": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "POP",
      "path": "22"
    },
    "3185": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "POP",
      "path": "22"
    },
    "3186": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "POP",
      "path": "22"
    },
    "3187": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "POP",
      "path": "22"
    },
    "3188": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "POP",
      "path": "22"
    },
    "3189": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "POP",
      "path": "22"
    },
    "3190": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3192": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3194": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3195": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3196": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3197": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "SUB",
      "path": "22"
    },
    "3198": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3199": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3201": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "DUP8",
      "path": "22"
    },
    "3202": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3203": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "EXTCODESIZE",
      "path": "22"
    },
    "3204": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3205": {
      "op": "DUP1"
    },
    "3206": {
      "op": "ISZERO"
    },
    "3207": {
      "op": "PUSH2",
      "value": "0xC8F"
    },
    "3210": {
      "op": "JUMPI"
    },
    "3211": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3213": {
      "op": "DUP1"
    },
    "3214": {
      "op": "REVERT"
    },
    "3215": {
      "op": "JUMPDEST"
    },
    "3216": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "POP",
      "path": "22"
    },
    "3217": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "GAS",
      "path": "22"
    },
    "3218": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "CALL",
      "path": "22"
    },
    "3219": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3220": {
      "op": "DUP1"
    },
    "3221": {
      "op": "ISZERO"
    },
    "3222": {
      "op": "PUSH2",
      "value": "0xCA3"
    },
    "3225": {
      "op": "JUMPI"
    },
    "3226": {
      "op": "RETURNDATASIZE"
    },
    "3227": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3229": {
      "op": "DUP1"
    },
    "3230": {
      "op": "RETURNDATACOPY"
    },
    "3231": {
      "op": "RETURNDATASIZE"
    },
    "3232": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3234": {
      "op": "REVERT"
    },
    "3235": {
      "op": "JUMPDEST"
    },
    "3236": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "POP",
      "path": "22"
    },
    "3237": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "POP",
      "path": "22"
    },
    "3238": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "POP",
      "path": "22"
    },
    "3239": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5951,
        6038
      ],
      "op": "POP",
      "path": "22"
    },
    "3240": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5531,
        6049
      ],
      "op": "POP",
      "path": "22"
    },
    "3241": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5531,
        6049
      ],
      "op": "POP",
      "path": "22"
    },
    "3242": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5531,
        6049
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3243": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6073,
        6109
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3245": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6073,
        6109
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3246": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6073,
        6109
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3247": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "3252": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3254": {
      "op": "SHL"
    },
    "3255": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6073,
        6109
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3256": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6073,
        6109
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3257": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6103,
        6107
      ],
      "op": "ADDRESS",
      "path": "22"
    },
    "3258": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6073,
        6109
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "3260": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6073,
        6109
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3261": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6073,
        6109
      ],
      "op": "ADD",
      "path": "22"
    },
    "3262": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6073,
        6109
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3263": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6073,
        6109
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3264": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6073,
        6109
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3265": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6058,
        6070
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3267": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6058,
        6070
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3268": {
      "offset": [
        1166,
        1208
      ],
      "op": "PUSH20",
      "path": "22",
      "value": "0x6B175474E89094C44DA98B954EEDEAC495271D0F"
    },
    "3289": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        1166,
        1208
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3290": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6073,
        6094
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x70A08231"
    },
    "3295": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6073,
        6094
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3296": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6073,
        6109
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "3298": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6073,
        6109
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3299": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6073,
        6109
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3300": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6073,
        6109
      ],
      "op": "ADD",
      "path": "22"
    },
    "3301": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6073,
        6109
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "3302": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6073,
        6109
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3304": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6073,
        6109
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "3305": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6073,
        6109
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3306": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6073,
        6109
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3307": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6073,
        6109
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3308": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6073,
        6109
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3309": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6073,
        6109
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3310": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6073,
        6109
      ],
      "op": "SUB",
      "path": "22"
    },
    "3311": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6073,
        6109
      ],
      "op": "ADD",
      "path": "22"
    },
    "3312": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6073,
        6109
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3313": {
      "offset": [
        1166,
        1208
      ],
      "op": "DUP7",
      "path": "22"
    },
    "3314": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6073,
        6109
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3315": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6073,
        6109
      ],
      "op": "EXTCODESIZE",
      "path": "22"
    },
    "3316": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6073,
        6109
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3317": {
      "op": "DUP1"
    },
    "3318": {
      "op": "ISZERO"
    },
    "3319": {
      "op": "PUSH2",
      "value": "0xCFF"
    },
    "3322": {
      "op": "JUMPI"
    },
    "3323": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3325": {
      "op": "DUP1"
    },
    "3326": {
      "op": "REVERT"
    },
    "3327": {
      "op": "JUMPDEST"
    },
    "3328": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6073,
        6109
      ],
      "op": "POP",
      "path": "22"
    },
    "3329": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6073,
        6109
      ],
      "op": "GAS",
      "path": "22"
    },
    "3330": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6073,
        6109
      ],
      "op": "STATICCALL",
      "path": "22"
    },
    "3331": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6073,
        6109
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3332": {
      "op": "DUP1"
    },
    "3333": {
      "op": "ISZERO"
    },
    "3334": {
      "op": "PUSH2",
      "value": "0xD13"
    },
    "3337": {
      "op": "JUMPI"
    },
    "3338": {
      "op": "RETURNDATASIZE"
    },
    "3339": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3341": {
      "op": "DUP1"
    },
    "3342": {
      "op": "RETURNDATACOPY"
    },
    "3343": {
      "op": "RETURNDATASIZE"
    },
    "3344": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3346": {
      "op": "REVERT"
    },
    "3347": {
      "op": "JUMPDEST"
    },
    "3348": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6073,
        6109
      ],
      "op": "POP",
      "path": "22"
    },
    "3349": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6073,
        6109
      ],
      "op": "POP",
      "path": "22"
    },
    "3350": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6073,
        6109
      ],
      "op": "POP",
      "path": "22"
    },
    "3351": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6073,
        6109
      ],
      "op": "POP",
      "path": "22"
    },
    "3352": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6073,
        6109
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3354": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6073,
        6109
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3355": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6073,
        6109
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "3356": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3358": {
      "op": "DUP2"
    },
    "3359": {
      "op": "LT"
    },
    "3360": {
      "op": "ISZERO"
    },
    "3361": {
      "op": "PUSH2",
      "value": "0xD29"
    },
    "3364": {
      "op": "JUMPI"
    },
    "3365": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3367": {
      "op": "DUP1"
    },
    "3368": {
      "op": "REVERT"
    },
    "3369": {
      "op": "JUMPDEST"
    },
    "3370": {
      "op": "POP"
    },
    "3371": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6073,
        6109
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3372": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6073,
        6109
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3373": {
      "op": "POP"
    },
    "3374": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6123,
        6131
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3375": {
      "branch": 81,
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6123,
        6131
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3376": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6119,
        6279
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xE19"
    },
    "3379": {
      "branch": 81,
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6119,
        6279
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3380": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6147,
        6179
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 18,
      "value": "0xD6D"
    },
    "3383": {
      "offset": [
        1166,
        1208
      ],
      "op": "PUSH20",
      "path": "22",
      "value": "0x6B175474E89094C44DA98B954EEDEAC495271D0F"
    },
    "3404": {
      "offset": [
        1254,
        1296
      ],
      "op": "PUSH20",
      "path": "22",
      "value": "0x16DE59092DAE5CCF4A1E6439D611FD0653F0BD01"
    },
    "3425": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6177,
        6178
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3427": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6147,
        6179
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "3432": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6147,
        6170
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1D2A"
    },
    "3435": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6147,
        6179
      ],
      "op": "AND",
      "path": "22"
    },
    "3436": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "jump": "i",
      "offset": [
        6147,
        6179
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3437": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6147,
        6179
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3438": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6193,
        6228
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 19,
      "value": "0xDA6"
    },
    "3441": {
      "offset": [
        1166,
        1208
      ],
      "op": "PUSH20",
      "path": "22",
      "value": "0x6B175474E89094C44DA98B954EEDEAC495271D0F"
    },
    "3462": {
      "offset": [
        1254,
        1296
      ],
      "op": "PUSH20",
      "path": "22",
      "value": "0x16DE59092DAE5CCF4A1E6439D611FD0653F0BD01"
    },
    "3483": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6223,
        6227
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3484": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6193,
        6228
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "3489": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6193,
        6216
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1D2A"
    },
    "3492": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6193,
        6228
      ],
      "op": "AND",
      "path": "22"
    },
    "3493": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "jump": "i",
      "offset": [
        6193,
        6228
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3494": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6193,
        6228
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3495": {
      "offset": [
        1254,
        1296
      ],
      "op": "PUSH20",
      "path": "22",
      "value": "0x16DE59092DAE5CCF4A1E6439D611FD0653F0BD01"
    },
    "3516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3518": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3520": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3522": {
      "op": "SHL"
    },
    "3523": {
      "op": "SUB"
    },
    "3524": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6242,
        6262
      ],
      "op": "AND",
      "path": "22",
      "statement": 20
    },
    "3525": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6242,
        6262
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xB6B55F25"
    },
    "3530": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6263,
        6267
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3531": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6242,
        6268
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3533": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6242,
        6268
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3534": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6242,
        6268
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3535": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6242,
        6268
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "3540": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6242,
        6268
      ],
      "op": "AND",
      "path": "22"
    },
    "3541": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6242,
        6268
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE0"
    },
    "3543": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6242,
        6268
      ],
      "op": "SHL",
      "path": "22"
    },
    "3544": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6242,
        6268
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3545": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6242,
        6268
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3546": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6242,
        6268
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "3548": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6242,
        6268
      ],
      "op": "ADD",
      "path": "22"
    },
    "3549": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6242,
        6268
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3550": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6242,
        6268
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3551": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6242,
        6268
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3552": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6242,
        6268
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3553": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6242,
        6268
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3555": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6242,
        6268
      ],
      "op": "ADD",
      "path": "22"
    },
    "3556": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6242,
        6268
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3557": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6242,
        6268
      ],
      "op": "POP",
      "path": "22"
    },
    "3558": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6242,
        6268
      ],
      "op": "POP",
      "path": "22"
    },
    "3559": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6242,
        6268
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3561": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6242,
        6268
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3563": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6242,
        6268
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3564": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6242,
        6268
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3565": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6242,
        6268
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3566": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6242,
        6268
      ],
      "op": "SUB",
      "path": "22"
    },
    "3567": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6242,
        6268
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3568": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6242,
        6268
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3570": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6242,
        6268
      ],
      "op": "DUP8",
      "path": "22"
    },
    "3571": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6242,
        6268
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3572": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6242,
        6268
      ],
      "op": "EXTCODESIZE",
      "path": "22"
    },
    "3573": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6242,
        6268
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3574": {
      "op": "DUP1"
    },
    "3575": {
      "op": "ISZERO"
    },
    "3576": {
      "op": "PUSH2",
      "value": "0xE00"
    },
    "3579": {
      "op": "JUMPI"
    },
    "3580": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3582": {
      "op": "DUP1"
    },
    "3583": {
      "op": "REVERT"
    },
    "3584": {
      "op": "JUMPDEST"
    },
    "3585": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6242,
        6268
      ],
      "op": "POP",
      "path": "22"
    },
    "3586": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6242,
        6268
      ],
      "op": "GAS",
      "path": "22"
    },
    "3587": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6242,
        6268
      ],
      "op": "CALL",
      "path": "22"
    },
    "3588": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6242,
        6268
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3589": {
      "op": "DUP1"
    },
    "3590": {
      "op": "ISZERO"
    },
    "3591": {
      "op": "PUSH2",
      "value": "0xE14"
    },
    "3594": {
      "op": "JUMPI"
    },
    "3595": {
      "op": "RETURNDATASIZE"
    },
    "3596": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3598": {
      "op": "DUP1"
    },
    "3599": {
      "op": "RETURNDATACOPY"
    },
    "3600": {
      "op": "RETURNDATASIZE"
    },
    "3601": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3603": {
      "op": "REVERT"
    },
    "3604": {
      "op": "JUMPDEST"
    },
    "3605": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6242,
        6268
      ],
      "op": "POP",
      "path": "22"
    },
    "3606": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6242,
        6268
      ],
      "op": "POP",
      "path": "22"
    },
    "3607": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6242,
        6268
      ],
      "op": "POP",
      "path": "22"
    },
    "3608": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6242,
        6268
      ],
      "op": "POP",
      "path": "22"
    },
    "3609": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6119,
        6279
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3610": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6304,
        6341
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3612": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6304,
        6341
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3613": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6304,
        6341
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3614": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "3619": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3621": {
      "op": "SHL"
    },
    "3622": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6304,
        6341
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3623": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6304,
        6341
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3624": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6335,
        6339
      ],
      "op": "ADDRESS",
      "path": "22"
    },
    "3625": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6304,
        6341
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "3627": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6304,
        6341
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3628": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6304,
        6341
      ],
      "op": "ADD",
      "path": "22"
    },
    "3629": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6304,
        6341
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3630": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6304,
        6341
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3631": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6304,
        6341
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3632": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6288,
        6301
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3634": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6288,
        6301
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3635": {
      "offset": [
        1254,
        1296
      ],
      "op": "PUSH20",
      "path": "22",
      "value": "0x16DE59092DAE5CCF4A1E6439D611FD0653F0BD01"
    },
    "3656": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        1254,
        1296
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3657": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6304,
        6326
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x70A08231"
    },
    "3662": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6304,
        6326
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3663": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6304,
        6341
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "3665": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6304,
        6341
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3666": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6304,
        6341
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3667": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6304,
        6341
      ],
      "op": "ADD",
      "path": "22"
    },
    "3668": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6304,
        6341
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "3669": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6304,
        6341
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3671": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6304,
        6341
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "3672": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6304,
        6341
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3673": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6304,
        6341
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3674": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6304,
        6341
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3675": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6304,
        6341
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3676": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6304,
        6341
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3677": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6304,
        6341
      ],
      "op": "SUB",
      "path": "22"
    },
    "3678": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6304,
        6341
      ],
      "op": "ADD",
      "path": "22"
    },
    "3679": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6304,
        6341
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3680": {
      "offset": [
        1254,
        1296
      ],
      "op": "DUP7",
      "path": "22"
    },
    "3681": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6304,
        6341
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3682": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6304,
        6341
      ],
      "op": "EXTCODESIZE",
      "path": "22"
    },
    "3683": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6304,
        6341
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3684": {
      "op": "DUP1"
    },
    "3685": {
      "op": "ISZERO"
    },
    "3686": {
      "op": "PUSH2",
      "value": "0xE6E"
    },
    "3689": {
      "op": "JUMPI"
    },
    "3690": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3692": {
      "op": "DUP1"
    },
    "3693": {
      "op": "REVERT"
    },
    "3694": {
      "op": "JUMPDEST"
    },
    "3695": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6304,
        6341
      ],
      "op": "POP",
      "path": "22"
    },
    "3696": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6304,
        6341
      ],
      "op": "GAS",
      "path": "22"
    },
    "3697": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6304,
        6341
      ],
      "op": "STATICCALL",
      "path": "22"
    },
    "3698": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6304,
        6341
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3699": {
      "op": "DUP1"
    },
    "3700": {
      "op": "ISZERO"
    },
    "3701": {
      "op": "PUSH2",
      "value": "0xE82"
    },
    "3704": {
      "op": "JUMPI"
    },
    "3705": {
      "op": "RETURNDATASIZE"
    },
    "3706": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3708": {
      "op": "DUP1"
    },
    "3709": {
      "op": "RETURNDATACOPY"
    },
    "3710": {
      "op": "RETURNDATASIZE"
    },
    "3711": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3713": {
      "op": "REVERT"
    },
    "3714": {
      "op": "JUMPDEST"
    },
    "3715": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6304,
        6341
      ],
      "op": "POP",
      "path": "22"
    },
    "3716": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6304,
        6341
      ],
      "op": "POP",
      "path": "22"
    },
    "3717": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6304,
        6341
      ],
      "op": "POP",
      "path": "22"
    },
    "3718": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6304,
        6341
      ],
      "op": "POP",
      "path": "22"
    },
    "3719": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6304,
        6341
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3721": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6304,
        6341
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3722": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6304,
        6341
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "3723": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3725": {
      "op": "DUP2"
    },
    "3726": {
      "op": "LT"
    },
    "3727": {
      "op": "ISZERO"
    },
    "3728": {
      "op": "PUSH2",
      "value": "0xE98"
    },
    "3731": {
      "op": "JUMPI"
    },
    "3732": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3734": {
      "op": "DUP1"
    },
    "3735": {
      "op": "REVERT"
    },
    "3736": {
      "op": "JUMPDEST"
    },
    "3737": {
      "op": "POP"
    },
    "3738": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6304,
        6341
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3739": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6304,
        6341
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3740": {
      "op": "POP"
    },
    "3741": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6355,
        6364
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3742": {
      "branch": 82,
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6355,
        6364
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3743": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6351,
        6541
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xFD9"
    },
    "3746": {
      "branch": 82,
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6351,
        6541
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3747": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6380,
        6414
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 21,
      "value": "0xEDC"
    },
    "3750": {
      "offset": [
        1254,
        1296
      ],
      "op": "PUSH20",
      "path": "22",
      "value": "0x16DE59092DAE5CCF4A1E6439D611FD0653F0BD01"
    },
    "3771": {
      "offset": [
        1343,
        1385
      ],
      "op": "PUSH20",
      "path": "22",
      "value": "0x45F783CCE6B7FF23B2AB2D70E416CDB7D6055F51"
    },
    "3792": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6412,
        6413
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3794": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6380,
        6414
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "3799": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6380,
        6404
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1D2A"
    },
    "3802": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6380,
        6414
      ],
      "op": "AND",
      "path": "22"
    },
    "3803": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "jump": "i",
      "offset": [
        6380,
        6414
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3804": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6380,
        6414
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3805": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6428,
        6466
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 22,
      "value": "0xF15"
    },
    "3808": {
      "offset": [
        1254,
        1296
      ],
      "op": "PUSH20",
      "path": "22",
      "value": "0x16DE59092DAE5CCF4A1E6439D611FD0653F0BD01"
    },
    "3829": {
      "offset": [
        1343,
        1385
      ],
      "op": "PUSH20",
      "path": "22",
      "value": "0x45F783CCE6B7FF23B2AB2D70E416CDB7D6055F51"
    },
    "3850": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6460,
        6465
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3851": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6428,
        6466
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "3856": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6428,
        6452
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1D2A"
    },
    "3859": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6428,
        6466
      ],
      "op": "AND",
      "path": "22"
    },
    "3860": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "jump": "i",
      "offset": [
        6428,
        6466
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3861": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6428,
        6466
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3862": {
      "offset": [
        1343,
        1385
      ],
      "op": "PUSH20",
      "path": "22",
      "value": "0x45F783CCE6B7FF23B2AB2D70E416CDB7D6055F51"
    },
    "3883": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3885": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3887": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3889": {
      "op": "SHL"
    },
    "3890": {
      "op": "SUB"
    },
    "3891": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6509
      ],
      "op": "AND",
      "path": "22",
      "statement": 23
    },
    "3892": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6509
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x29B2F34"
    },
    "3897": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3899": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3900": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3901": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x80"
    },
    "3903": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "ADD",
      "path": "22"
    },
    "3904": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3906": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3907": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3908": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6511,
        6516
      ],
      "op": "DUP5",
      "path": "22"
    },
    "3909": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3910": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3911": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3913": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "ADD",
      "path": "22"
    },
    "3914": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6518,
        6519
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3916": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3917": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3918": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3920": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "ADD",
      "path": "22"
    },
    "3921": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6521,
        6522
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3923": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3924": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3925": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3927": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "ADD",
      "path": "22"
    },
    "3928": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6524,
        6525
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3930": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3931": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3932": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "POP",
      "path": "22"
    },
    "3933": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6528,
        6529
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3935": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3937": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3938": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3939": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "3944": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "AND",
      "path": "22"
    },
    "3945": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE0"
    },
    "3947": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "SHL",
      "path": "22"
    },
    "3948": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3949": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3950": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "3952": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "ADD",
      "path": "22"
    },
    "3953": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3954": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3955": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "3957": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3959": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "MUL",
      "path": "22"
    },
    "3960": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3961": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3962": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3963": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3965": {
      "op": "JUMPDEST"
    },
    "3966": {
      "op": "DUP4"
    },
    "3967": {
      "op": "DUP2"
    },
    "3968": {
      "op": "LT"
    },
    "3969": {
      "op": "ISZERO"
    },
    "3970": {
      "op": "PUSH2",
      "value": "0xF95"
    },
    "3973": {
      "op": "JUMPI"
    },
    "3974": {
      "op": "DUP2"
    },
    "3975": {
      "op": "DUP2"
    },
    "3976": {
      "op": "ADD"
    },
    "3977": {
      "op": "MLOAD"
    },
    "3978": {
      "op": "DUP4"
    },
    "3979": {
      "op": "DUP3"
    },
    "3980": {
      "op": "ADD"
    },
    "3981": {
      "op": "MSTORE"
    },
    "3982": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3984": {
      "op": "ADD"
    },
    "3985": {
      "op": "PUSH2",
      "value": "0xF7D"
    },
    "3988": {
      "op": "JUMP"
    },
    "3989": {
      "op": "JUMPDEST"
    },
    "3990": {
      "op": "POP"
    },
    "3991": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "POP",
      "path": "22"
    },
    "3992": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "POP",
      "path": "22"
    },
    "3993": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "POP",
      "path": "22"
    },
    "3994": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3995": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "POP",
      "path": "22"
    },
    "3996": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "ADD",
      "path": "22"
    },
    "3997": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3998": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3999": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4000": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4002": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "ADD",
      "path": "22"
    },
    "4003": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "4004": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "POP",
      "path": "22"
    },
    "4005": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "POP",
      "path": "22"
    },
    "4006": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "POP",
      "path": "22"
    },
    "4007": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "4009": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4011": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4012": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4013": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "DUP4",
      "path": "22"
    },
    "4014": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "SUB",
      "path": "22"
    },
    "4015": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4016": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "4018": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "DUP8",
      "path": "22"
    },
    "4019": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4020": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "EXTCODESIZE",
      "path": "22"
    },
    "4021": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "4022": {
      "op": "DUP1"
    },
    "4023": {
      "op": "ISZERO"
    },
    "4024": {
      "op": "PUSH2",
      "value": "0xFC0"
    },
    "4027": {
      "op": "JUMPI"
    },
    "4028": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4030": {
      "op": "DUP1"
    },
    "4031": {
      "op": "REVERT"
    },
    "4032": {
      "op": "JUMPDEST"
    },
    "4033": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "POP",
      "path": "22"
    },
    "4034": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "GAS",
      "path": "22"
    },
    "4035": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "CALL",
      "path": "22"
    },
    "4036": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "4037": {
      "op": "DUP1"
    },
    "4038": {
      "op": "ISZERO"
    },
    "4039": {
      "op": "PUSH2",
      "value": "0xFD4"
    },
    "4042": {
      "op": "JUMPI"
    },
    "4043": {
      "op": "RETURNDATASIZE"
    },
    "4044": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4046": {
      "op": "DUP1"
    },
    "4047": {
      "op": "RETURNDATACOPY"
    },
    "4048": {
      "op": "RETURNDATASIZE"
    },
    "4049": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4051": {
      "op": "REVERT"
    },
    "4052": {
      "op": "JUMPDEST"
    },
    "4053": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "POP",
      "path": "22"
    },
    "4054": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "POP",
      "path": "22"
    },
    "4055": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "POP",
      "path": "22"
    },
    "4056": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6480,
        6530
      ],
      "op": "POP",
      "path": "22"
    },
    "4057": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6351,
        6541
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4058": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6566,
        6603
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4060": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6566,
        6603
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4061": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6566,
        6603
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4062": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "4067": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4069": {
      "op": "SHL"
    },
    "4070": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6566,
        6603
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4071": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6566,
        6603
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4072": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6597,
        6601
      ],
      "op": "ADDRESS",
      "path": "22"
    },
    "4073": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6566,
        6603
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "4075": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6566,
        6603
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4076": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6566,
        6603
      ],
      "op": "ADD",
      "path": "22"
    },
    "4077": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6566,
        6603
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4078": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6566,
        6603
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4079": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6566,
        6603
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4080": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6550,
        6563
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "4082": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6550,
        6563
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4083": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4085": {
      "op": "DUP1"
    },
    "4086": {
      "op": "MLOAD"
    },
    "4087": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4089": {
      "op": "PUSH2",
      "value": "0x21D1"
    },
    "4092": {
      "op": "DUP4"
    },
    "4093": {
      "op": "CODECOPY"
    },
    "4094": {
      "op": "DUP2"
    },
    "4095": {
      "op": "MLOAD"
    },
    "4096": {
      "op": "SWAP2"
    },
    "4097": {
      "op": "MSTORE"
    },
    "4098": {
      "offset": [
        779,
        821
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4099": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6566,
        6588
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x70A08231"
    },
    "4104": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6566,
        6588
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4105": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6566,
        6603
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "4107": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6566,
        6603
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4108": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6566,
        6603
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4109": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6566,
        6603
      ],
      "op": "ADD",
      "path": "22"
    },
    "4110": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6566,
        6603
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "4111": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6566,
        6603
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4113": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6566,
        6603
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "4114": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6566,
        6603
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4115": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6566,
        6603
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4116": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6566,
        6603
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4117": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6566,
        6603
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4118": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6566,
        6603
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4119": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6566,
        6603
      ],
      "op": "SUB",
      "path": "22"
    },
    "4120": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6566,
        6603
      ],
      "op": "ADD",
      "path": "22"
    },
    "4121": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6566,
        6603
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4122": {
      "offset": [
        779,
        821
      ],
      "op": "DUP7",
      "path": "22"
    },
    "4123": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6566,
        6603
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4124": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6566,
        6603
      ],
      "op": "EXTCODESIZE",
      "path": "22"
    },
    "4125": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6566,
        6603
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "4126": {
      "op": "DUP1"
    },
    "4127": {
      "op": "ISZERO"
    },
    "4128": {
      "op": "PUSH2",
      "value": "0x1028"
    },
    "4131": {
      "op": "JUMPI"
    },
    "4132": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4134": {
      "op": "DUP1"
    },
    "4135": {
      "op": "REVERT"
    },
    "4136": {
      "op": "JUMPDEST"
    },
    "4137": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6566,
        6603
      ],
      "op": "POP",
      "path": "22"
    },
    "4138": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6566,
        6603
      ],
      "op": "GAS",
      "path": "22"
    },
    "4139": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6566,
        6603
      ],
      "op": "STATICCALL",
      "path": "22"
    },
    "4140": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6566,
        6603
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "4141": {
      "op": "DUP1"
    },
    "4142": {
      "op": "ISZERO"
    },
    "4143": {
      "op": "PUSH2",
      "value": "0x103C"
    },
    "4146": {
      "op": "JUMPI"
    },
    "4147": {
      "op": "RETURNDATASIZE"
    },
    "4148": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4150": {
      "op": "DUP1"
    },
    "4151": {
      "op": "RETURNDATACOPY"
    },
    "4152": {
      "op": "RETURNDATASIZE"
    },
    "4153": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4155": {
      "op": "REVERT"
    },
    "4156": {
      "op": "JUMPDEST"
    },
    "4157": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6566,
        6603
      ],
      "op": "POP",
      "path": "22"
    },
    "4158": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6566,
        6603
      ],
      "op": "POP",
      "path": "22"
    },
    "4159": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6566,
        6603
      ],
      "op": "POP",
      "path": "22"
    },
    "4160": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6566,
        6603
      ],
      "op": "POP",
      "path": "22"
    },
    "4161": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6566,
        6603
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4163": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6566,
        6603
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4164": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6566,
        6603
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "4165": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4167": {
      "op": "DUP2"
    },
    "4168": {
      "op": "LT"
    },
    "4169": {
      "op": "ISZERO"
    },
    "4170": {
      "op": "PUSH2",
      "value": "0x1052"
    },
    "4173": {
      "op": "JUMPI"
    },
    "4174": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4176": {
      "op": "DUP1"
    },
    "4177": {
      "op": "REVERT"
    },
    "4178": {
      "op": "JUMPDEST"
    },
    "4179": {
      "op": "POP"
    },
    "4180": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6566,
        6603
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4181": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6566,
        6603
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4182": {
      "op": "POP"
    },
    "4183": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6617,
        6626
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4184": {
      "branch": 83,
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6617,
        6626
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "4185": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6613,
        6816
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x10D6"
    },
    "4188": {
      "branch": 83,
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6613,
        6816
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4189": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6642,
        6654
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "4191": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6657,
        6702
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1079"
    },
    "4194": {
      "offset": [
        1738,
        1743
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2710"
    },
    "4197": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6657,
        6682
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x6C4"
    },
    "4200": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6667,
        6681
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "4202": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6667,
        6681
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4203": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6657,
        6662
      ],
      "op": "DUP6",
      "path": "22"
    },
    "4204": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6657,
        6666
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1C38"
    },
    "4207": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6657,
        6666
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4208": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6657,
        6682
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4209": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6657,
        6682
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4210": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6657,
        6682
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "4215": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6657,
        6682
      ],
      "op": "AND",
      "path": "22"
    },
    "4216": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "jump": "i",
      "offset": [
        6657,
        6682
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4217": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6657,
        6702
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4218": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6642,
        6702
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4219": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6642,
        6702
      ],
      "op": "POP",
      "path": "22"
    },
    "4220": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6716,
        6782
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 24,
      "value": "0x10CC"
    },
    "4223": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6754,
        6764
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x5"
    },
    "4225": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6754,
        6764
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "4227": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6754,
        6764
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4228": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6754,
        6764
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4229": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6754,
        6764
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4230": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6754,
        6764
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x100"
    },
    "4233": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6754,
        6764
      ],
      "op": "EXP",
      "path": "22"
    },
    "4234": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6754,
        6764
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4235": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6754,
        6764
      ],
      "op": "DIV",
      "path": "22"
    },
    "4236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4240": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4242": {
      "op": "SHL"
    },
    "4243": {
      "op": "SUB"
    },
    "4244": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6754,
        6764
      ],
      "op": "AND",
      "path": "22"
    },
    "4245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4247": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4249": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4251": {
      "op": "SHL"
    },
    "4252": {
      "op": "SUB"
    },
    "4253": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6742,
        6773
      ],
      "op": "AND",
      "path": "22"
    },
    "4254": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6742,
        6773
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x9EC5A894"
    },
    "4259": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6742,
        6775
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4261": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6742,
        6775
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4262": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6742,
        6775
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4263": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6742,
        6775
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "4268": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6742,
        6775
      ],
      "op": "AND",
      "path": "22"
    },
    "4269": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6742,
        6775
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE0"
    },
    "4271": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6742,
        6775
      ],
      "op": "SHL",
      "path": "22"
    },
    "4272": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6742,
        6775
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4273": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6742,
        6775
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4274": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6742,
        6775
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "4276": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6742,
        6775
      ],
      "op": "ADD",
      "path": "22"
    },
    "4277": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6742,
        6775
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4279": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6742,
        6775
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4281": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6742,
        6775
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4282": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6742,
        6775
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4283": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6742,
        6775
      ],
      "op": "DUP4",
      "path": "22"
    },
    "4284": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6742,
        6775
      ],
      "op": "SUB",
      "path": "22"
    },
    "4285": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6742,
        6775
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4286": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6742,
        6775
      ],
      "op": "DUP7",
      "path": "22"
    },
    "4287": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6742,
        6775
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4288": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6742,
        6775
      ],
      "op": "EXTCODESIZE",
      "path": "22"
    },
    "4289": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6742,
        6775
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "4290": {
      "op": "DUP1"
    },
    "4291": {
      "op": "ISZERO"
    },
    "4292": {
      "op": "PUSH2",
      "value": "0x723"
    },
    "4295": {
      "op": "JUMPI"
    },
    "4296": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4298": {
      "op": "DUP1"
    },
    "4299": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6716,
        6782
      ],
      "op": "REVERT",
      "path": "22"
    },
    "4300": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6716,
        6782
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4301": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6796,
        6805
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 25,
      "value": "0x10D4"
    },
    "4304": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6796,
        6803
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1953"
    },
    "4307": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "jump": "i",
      "offset": [
        6796,
        6805
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4308": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6796,
        6805
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4309": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6613,
        6816
      ],
      "op": "POP",
      "path": "22"
    },
    "4310": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6613,
        6816
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4311": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6837,
        6842
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 26,
      "value": "0x3"
    },
    "4313": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6837,
        6842
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "4315": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6837,
        6842
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4316": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6837,
        6842
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4317": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6837,
        6842
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4318": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6837,
        6842
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x100"
    },
    "4321": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6837,
        6842
      ],
      "op": "EXP",
      "path": "22"
    },
    "4322": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6837,
        6842
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4323": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6837,
        6842
      ],
      "op": "DIV",
      "path": "22"
    },
    "4324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4328": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4330": {
      "op": "SHL"
    },
    "4331": {
      "op": "SUB"
    },
    "4332": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6837,
        6842
      ],
      "op": "AND",
      "path": "22"
    },
    "4333": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4337": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4339": {
      "op": "SHL"
    },
    "4340": {
      "op": "SUB"
    },
    "4341": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6825,
        6848
      ],
      "op": "AND",
      "path": "22"
    },
    "4342": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6825,
        6848
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xF83D08BA"
    },
    "4347": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6825,
        6850
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4349": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6825,
        6850
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4350": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6825,
        6850
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4351": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6825,
        6850
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "4356": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6825,
        6850
      ],
      "op": "AND",
      "path": "22"
    },
    "4357": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6825,
        6850
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE0"
    },
    "4359": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6825,
        6850
      ],
      "op": "SHL",
      "path": "22"
    },
    "4360": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6825,
        6850
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4361": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6825,
        6850
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4362": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6825,
        6850
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "4364": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6825,
        6850
      ],
      "op": "ADD",
      "path": "22"
    },
    "4365": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6825,
        6850
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "4367": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6825,
        6850
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4369": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6825,
        6850
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4370": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6825,
        6850
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4371": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6825,
        6850
      ],
      "op": "DUP4",
      "path": "22"
    },
    "4372": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6825,
        6850
      ],
      "op": "SUB",
      "path": "22"
    },
    "4373": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6825,
        6850
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4374": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6825,
        6850
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "4376": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6825,
        6850
      ],
      "op": "DUP8",
      "path": "22"
    },
    "4377": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6825,
        6850
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4378": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6825,
        6850
      ],
      "op": "EXTCODESIZE",
      "path": "22"
    },
    "4379": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6825,
        6850
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "4380": {
      "op": "DUP1"
    },
    "4381": {
      "op": "ISZERO"
    },
    "4382": {
      "op": "PUSH2",
      "value": "0x1126"
    },
    "4385": {
      "op": "JUMPI"
    },
    "4386": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4388": {
      "op": "DUP1"
    },
    "4389": {
      "op": "REVERT"
    },
    "4390": {
      "op": "JUMPDEST"
    },
    "4391": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6825,
        6850
      ],
      "op": "POP",
      "path": "22"
    },
    "4392": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6825,
        6850
      ],
      "op": "GAS",
      "path": "22"
    },
    "4393": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6825,
        6850
      ],
      "op": "CALL",
      "path": "22"
    },
    "4394": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6825,
        6850
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "4395": {
      "op": "DUP1"
    },
    "4396": {
      "op": "ISZERO"
    },
    "4397": {
      "op": "PUSH2",
      "value": "0x113A"
    },
    "4400": {
      "op": "JUMPI"
    },
    "4401": {
      "op": "RETURNDATASIZE"
    },
    "4402": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4404": {
      "op": "DUP1"
    },
    "4405": {
      "op": "RETURNDATACOPY"
    },
    "4406": {
      "op": "RETURNDATASIZE"
    },
    "4407": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4409": {
      "op": "REVERT"
    },
    "4410": {
      "op": "JUMPDEST"
    },
    "4411": {
      "op": "POP"
    },
    "4412": {
      "op": "POP"
    },
    "4413": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6869,
        6875
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 27,
      "value": "0x7"
    },
    "4415": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6869,
        6875
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4416": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6869,
        6886
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1152"
    },
    "4419": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6869,
        6886
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "4420": {
      "op": "POP"
    },
    "4421": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6869,
        6875
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4422": {
      "op": "POP"
    },
    "4423": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6880,
        6885
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4424": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6869,
        6886
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "4429": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6869,
        6879
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1BDE"
    },
    "4432": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6869,
        6886
      ],
      "op": "AND",
      "path": "22"
    },
    "4433": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "jump": "i",
      "offset": [
        6869,
        6886
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4434": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6869,
        6886
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4435": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6860,
        6866
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x7"
    },
    "4437": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6860,
        6886
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4438": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6860,
        6886
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4439": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6860,
        6886
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "4440": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6901,
        6925
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 28,
      "value": "0x40"
    },
    "4442": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6901,
        6925
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4443": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6901,
        6925
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4444": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6901,
        6925
      ],
      "op": "DUP4",
      "path": "22"
    },
    "4445": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6901,
        6925
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4446": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6901,
        6925
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4447": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6901,
        6925
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4449": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6901,
        6925
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4450": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6901,
        6925
      ],
      "op": "ADD",
      "path": "22"
    },
    "4451": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6901,
        6925
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "4452": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6901,
        6925
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4453": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6901,
        6925
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "4454": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6901,
        6925
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4455": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6901,
        6925
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4456": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6901,
        6925
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4457": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6901,
        6925
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0xFA07446FAD45314351EB89109A154880278451332BB87F1824D435FE58DA5939"
    },
    "4490": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6901,
        6925
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "4491": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6901,
        6925
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4492": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6901,
        6925
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4493": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6901,
        6925
      ],
      "op": "SUB",
      "path": "22"
    },
    "4494": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6901,
        6925
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4495": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6901,
        6925
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4496": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6901,
        6925
      ],
      "op": "ADD",
      "path": "22"
    },
    "4497": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6901,
        6925
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4498": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6901,
        6925
      ],
      "op": "LOG1",
      "path": "22"
    },
    "4499": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5305,
        6932
      ],
      "op": "POP",
      "path": "22"
    },
    "4500": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5305,
        6932
      ],
      "op": "POP",
      "path": "22"
    },
    "4501": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5305,
        6932
      ],
      "op": "POP",
      "path": "22"
    },
    "4502": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5305,
        6932
      ],
      "op": "POP",
      "path": "22"
    },
    "4503": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "jump": "o",
      "offset": [
        5305,
        6932
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4504": {
      "offset": [
        1482,
        1565
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4505": {
      "offset": [
        1522,
        1564
      ],
      "op": "PUSH20",
      "path": "22",
      "value": "0xF147B8125D2EF93FB6965DB97D6746952A133934"
    },
    "4526": {
      "offset": [
        1482,
        1565
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4527": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "jump": "o",
      "offset": [
        1482,
        1565
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4528": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3483,
        3913
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4529": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3583,
        3593
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 29,
      "value": "0x5"
    },
    "4531": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3583,
        3593
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4532": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3534,
        3549
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "4534": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3534,
        3549
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4539": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4541": {
      "op": "SHL"
    },
    "4542": {
      "op": "SUB"
    },
    "4543": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3583,
        3593
      ],
      "op": "AND",
      "path": "22"
    },
    "4544": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3569,
        3579
      ],
      "op": "CALLER",
      "path": "22"
    },
    "4545": {
      "branch": 84,
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3569,
        3593
      ],
      "op": "EQ",
      "path": "22"
    },
    "4546": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3561,
        3609
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1200"
    },
    "4549": {
      "branch": 84,
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3561,
        3609
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4550": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3561,
        3609
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4552": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3561,
        3609
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4553": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3561,
        3609
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4554": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4558": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4560": {
      "op": "SHL"
    },
    "4561": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3561,
        3609
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4562": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3561,
        3609
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4563": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3561,
        3609
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4565": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3561,
        3609
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "4567": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3561,
        3609
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4568": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3561,
        3609
      ],
      "op": "ADD",
      "path": "22"
    },
    "4569": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3561,
        3609
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4570": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3561,
        3609
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "4572": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3561,
        3609
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "4574": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3561,
        3609
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4575": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3561,
        3609
      ],
      "op": "ADD",
      "path": "22"
    },
    "4576": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3561,
        3609
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4577": {
      "op": "PUSH11",
      "value": "0x10B1B7B73A3937B63632B9"
    },
    "4589": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "4591": {
      "op": "SHL"
    },
    "4592": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3561,
        3609
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "4594": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3561,
        3609
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4595": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3561,
        3609
      ],
      "op": "ADD",
      "path": "22"
    },
    "4596": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3561,
        3609
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4597": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3561,
        3609
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4598": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3561,
        3609
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4599": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3561,
        3609
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4600": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3561,
        3609
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4601": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3561,
        3609
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4602": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3561,
        3609
      ],
      "op": "SUB",
      "path": "22"
    },
    "4603": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3561,
        3609
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "4605": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3561,
        3609
      ],
      "op": "ADD",
      "path": "22"
    },
    "4606": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3561,
        3609
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4607": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3561,
        3609
      ],
      "op": "REVERT",
      "path": "22"
    },
    "4608": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3561,
        3609
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4609": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4611": {
      "op": "DUP1"
    },
    "4612": {
      "op": "MLOAD"
    },
    "4613": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4615": {
      "op": "PUSH2",
      "value": "0x21D1"
    },
    "4618": {
      "op": "DUP4"
    },
    "4619": {
      "op": "CODECOPY"
    },
    "4620": {
      "op": "DUP2"
    },
    "4621": {
      "op": "MLOAD"
    },
    "4622": {
      "op": "SWAP2"
    },
    "4623": {
      "op": "MSTORE"
    },
    "4624": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4626": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4628": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4630": {
      "op": "SHL"
    },
    "4631": {
      "op": "SUB"
    },
    "4632": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3627,
        3650
      ],
      "op": "DUP4",
      "path": "22",
      "statement": 30
    },
    "4633": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3627,
        3650
      ],
      "op": "AND",
      "path": "22"
    },
    "4634": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3627,
        3650
      ],
      "op": "EQ",
      "path": "22"
    },
    "4635": {
      "branch": 85,
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3627,
        3650
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "4636": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3619,
        3659
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1255"
    },
    "4639": {
      "branch": 85,
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3619,
        3659
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4640": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3619,
        3659
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4642": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3619,
        3659
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4643": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3619,
        3659
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4644": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4648": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4650": {
      "op": "SHL"
    },
    "4651": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3619,
        3659
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4652": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3619,
        3659
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4653": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3619,
        3659
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4655": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3619,
        3659
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "4657": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3619,
        3659
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4658": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3619,
        3659
      ],
      "op": "DUP4",
      "path": "22"
    },
    "4659": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3619,
        3659
      ],
      "op": "ADD",
      "path": "22"
    },
    "4660": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3619,
        3659
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4661": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3619,
        3659
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4662": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3619,
        3659
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4663": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3619,
        3659
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4664": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3619,
        3659
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "4666": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3619,
        3659
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4667": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3619,
        3659
      ],
      "op": "ADD",
      "path": "22"
    },
    "4668": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3619,
        3659
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4669": {
      "op": "PUSH4",
      "value": "0x1DD85B9D"
    },
    "4674": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "4676": {
      "op": "SHL"
    },
    "4677": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3619,
        3659
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "4679": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3619,
        3659
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4680": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3619,
        3659
      ],
      "op": "ADD",
      "path": "22"
    },
    "4681": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3619,
        3659
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4682": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3619,
        3659
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4683": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3619,
        3659
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4684": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3619,
        3659
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4685": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3619,
        3659
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4686": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3619,
        3659
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4687": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3619,
        3659
      ],
      "op": "SUB",
      "path": "22"
    },
    "4688": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3619,
        3659
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "4690": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3619,
        3659
      ],
      "op": "ADD",
      "path": "22"
    },
    "4691": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3619,
        3659
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4692": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3619,
        3659
      ],
      "op": "REVERT",
      "path": "22"
    },
    "4693": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3619,
        3659
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4694": {
      "offset": [
        866,
        908
      ],
      "op": "PUSH20",
      "path": "22",
      "value": "0xD533A949740BB3306D119CC777FA900BA034CD52"
    },
    "4715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4719": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4721": {
      "op": "SHL"
    },
    "4722": {
      "op": "SUB"
    },
    "4723": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3677,
        3699
      ],
      "op": "DUP4",
      "path": "22",
      "statement": 31
    },
    "4724": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3677,
        3699
      ],
      "op": "AND",
      "path": "22"
    },
    "4725": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3677,
        3699
      ],
      "op": "EQ",
      "path": "22"
    },
    "4726": {
      "branch": 86,
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3677,
        3699
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "4727": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3669,
        3707
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x12AD"
    },
    "4730": {
      "branch": 86,
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3669,
        3707
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4731": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3669,
        3707
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4733": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3669,
        3707
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4734": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3669,
        3707
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4735": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4739": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4741": {
      "op": "SHL"
    },
    "4742": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3669,
        3707
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4743": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3669,
        3707
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4744": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3669,
        3707
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4746": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3669,
        3707
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "4748": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3669,
        3707
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4749": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3669,
        3707
      ],
      "op": "ADD",
      "path": "22"
    },
    "4750": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3669,
        3707
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4751": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3669,
        3707
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x3"
    },
    "4753": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3669,
        3707
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "4755": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3669,
        3707
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4756": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3669,
        3707
      ],
      "op": "ADD",
      "path": "22"
    },
    "4757": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3669,
        3707
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4758": {
      "op": "PUSH3",
      "value": "0x31B93B"
    },
    "4762": {
      "op": "PUSH1",
      "value": "0xE9"
    },
    "4764": {
      "op": "SHL"
    },
    "4765": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3669,
        3707
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "4767": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3669,
        3707
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4768": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3669,
        3707
      ],
      "op": "ADD",
      "path": "22"
    },
    "4769": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3669,
        3707
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4770": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3669,
        3707
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4771": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3669,
        3707
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4772": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3669,
        3707
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4773": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3669,
        3707
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4774": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3669,
        3707
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4775": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3669,
        3707
      ],
      "op": "SUB",
      "path": "22"
    },
    "4776": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3669,
        3707
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "4778": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3669,
        3707
      ],
      "op": "ADD",
      "path": "22"
    },
    "4779": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3669,
        3707
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4780": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3669,
        3707
      ],
      "op": "REVERT",
      "path": "22"
    },
    "4781": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3669,
        3707
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4782": {
      "offset": [
        1254,
        1296
      ],
      "op": "PUSH20",
      "path": "22",
      "value": "0x16DE59092DAE5CCF4A1E6439D611FD0653F0BD01"
    },
    "4803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4805": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4807": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4809": {
      "op": "SHL"
    },
    "4810": {
      "op": "SUB"
    },
    "4811": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3725,
        3748
      ],
      "op": "DUP4",
      "path": "22",
      "statement": 32
    },
    "4812": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3725,
        3748
      ],
      "op": "AND",
      "path": "22"
    },
    "4813": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3725,
        3748
      ],
      "op": "EQ",
      "path": "22"
    },
    "4814": {
      "branch": 87,
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3725,
        3748
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "4815": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3717,
        3757
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1308"
    },
    "4818": {
      "branch": 87,
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3717,
        3757
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4819": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3717,
        3757
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4821": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3717,
        3757
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4822": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3717,
        3757
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4823": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4827": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4829": {
      "op": "SHL"
    },
    "4830": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3717,
        3757
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4831": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3717,
        3757
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4832": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3717,
        3757
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4834": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3717,
        3757
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "4836": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3717,
        3757
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4837": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3717,
        3757
      ],
      "op": "DUP4",
      "path": "22"
    },
    "4838": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3717,
        3757
      ],
      "op": "ADD",
      "path": "22"
    },
    "4839": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3717,
        3757
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4840": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3717,
        3757
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4841": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3717,
        3757
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4842": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3717,
        3757
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4843": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3717,
        3757
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "4845": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3717,
        3757
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4846": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3717,
        3757
      ],
      "op": "ADD",
      "path": "22"
    },
    "4847": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3717,
        3757
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4848": {
      "op": "PUSH4",
      "value": "0x79646169"
    },
    "4853": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4855": {
      "op": "SHL"
    },
    "4856": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3717,
        3757
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "4858": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3717,
        3757
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4859": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3717,
        3757
      ],
      "op": "ADD",
      "path": "22"
    },
    "4860": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3717,
        3757
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4861": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3717,
        3757
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4862": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3717,
        3757
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4863": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3717,
        3757
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4864": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3717,
        3757
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4865": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3717,
        3757
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4866": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3717,
        3757
      ],
      "op": "SUB",
      "path": "22"
    },
    "4867": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3717,
        3757
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "4869": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3717,
        3757
      ],
      "op": "ADD",
      "path": "22"
    },
    "4870": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3717,
        3757
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4871": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3717,
        3757
      ],
      "op": "REVERT",
      "path": "22"
    },
    "4872": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3717,
        3757
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4873": {
      "offset": [
        1166,
        1208
      ],
      "op": "PUSH20",
      "path": "22",
      "value": "0x6B175474E89094C44DA98B954EEDEAC495271D0F"
    },
    "4894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4898": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4900": {
      "op": "SHL"
    },
    "4901": {
      "op": "SUB"
    },
    "4902": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3775,
        3797
      ],
      "op": "DUP4",
      "path": "22",
      "statement": 33
    },
    "4903": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3775,
        3797
      ],
      "op": "AND",
      "path": "22"
    },
    "4904": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3775,
        3797
      ],
      "op": "EQ",
      "path": "22"
    },
    "4905": {
      "branch": 88,
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3775,
        3797
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "4906": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3767,
        3805
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1360"
    },
    "4909": {
      "branch": 88,
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3767,
        3805
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4910": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3767,
        3805
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4912": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3767,
        3805
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4913": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3767,
        3805
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4914": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4918": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4920": {
      "op": "SHL"
    },
    "4921": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3767,
        3805
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4922": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3767,
        3805
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4923": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3767,
        3805
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4925": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3767,
        3805
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "4927": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3767,
        3805
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4928": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3767,
        3805
      ],
      "op": "ADD",
      "path": "22"
    },
    "4929": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3767,
        3805
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4930": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3767,
        3805
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x3"
    },
    "4932": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3767,
        3805
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "4934": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3767,
        3805
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4935": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3767,
        3805
      ],
      "op": "ADD",
      "path": "22"
    },
    "4936": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3767,
        3805
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4937": {
      "op": "PUSH3",
      "value": "0x646169"
    },
    "4941": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "4943": {
      "op": "SHL"
    },
    "4944": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3767,
        3805
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "4946": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3767,
        3805
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4947": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3767,
        3805
      ],
      "op": "ADD",
      "path": "22"
    },
    "4948": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3767,
        3805
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4949": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3767,
        3805
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4950": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3767,
        3805
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4951": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3767,
        3805
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4952": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3767,
        3805
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4953": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3767,
        3805
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4954": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3767,
        3805
      ],
      "op": "SUB",
      "path": "22"
    },
    "4955": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3767,
        3805
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "4957": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3767,
        3805
      ],
      "op": "ADD",
      "path": "22"
    },
    "4958": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3767,
        3805
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4959": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3767,
        3805
      ],
      "op": "REVERT",
      "path": "22"
    },
    "4960": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3767,
        3805
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4961": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3825,
        3856
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 34,
      "value": "0x40"
    },
    "4963": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3825,
        3856
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4964": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3825,
        3856
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4965": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "4970": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4972": {
      "op": "SHL"
    },
    "4973": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3825,
        3856
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4974": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3825,
        3856
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4975": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3850,
        3854
      ],
      "op": "ADDRESS",
      "path": "22"
    },
    "4976": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3825,
        3856
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "4978": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3825,
        3856
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4979": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3825,
        3856
      ],
      "op": "ADD",
      "path": "22"
    },
    "4980": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3825,
        3856
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4981": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3825,
        3856
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4982": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3825,
        3856
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4987": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4989": {
      "op": "SHL"
    },
    "4990": {
      "op": "SUB"
    },
    "4991": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3825,
        3841
      ],
      "op": "DUP5",
      "path": "22"
    },
    "4992": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3825,
        3841
      ],
      "op": "AND",
      "path": "22"
    },
    "4993": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3825,
        3841
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4994": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3825,
        3841
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x70A08231"
    },
    "4999": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3825,
        3841
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5000": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3825,
        3856
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "5002": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3825,
        3856
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5003": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3825,
        3856
      ],
      "op": "DUP4",
      "path": "22"
    },
    "5004": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3825,
        3856
      ],
      "op": "ADD",
      "path": "22"
    },
    "5005": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3825,
        3856
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "5006": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3825,
        3856
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5008": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3825,
        3856
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "5009": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3825,
        3856
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5010": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3825,
        3856
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5011": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3825,
        3856
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5012": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3825,
        3856
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5013": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3825,
        3856
      ],
      "op": "SUB",
      "path": "22"
    },
    "5014": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3825,
        3856
      ],
      "op": "ADD",
      "path": "22"
    },
    "5015": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3825,
        3856
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5016": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3825,
        3841
      ],
      "op": "DUP7",
      "path": "22"
    },
    "5017": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3825,
        3856
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5018": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3825,
        3856
      ],
      "op": "EXTCODESIZE",
      "path": "22"
    },
    "5019": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3825,
        3856
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "5020": {
      "op": "DUP1"
    },
    "5021": {
      "op": "ISZERO"
    },
    "5022": {
      "op": "PUSH2",
      "value": "0x13A6"
    },
    "5025": {
      "op": "JUMPI"
    },
    "5026": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5028": {
      "op": "DUP1"
    },
    "5029": {
      "op": "REVERT"
    },
    "5030": {
      "op": "JUMPDEST"
    },
    "5031": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3825,
        3856
      ],
      "op": "POP",
      "path": "22"
    },
    "5032": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3825,
        3856
      ],
      "op": "GAS",
      "path": "22"
    },
    "5033": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3825,
        3856
      ],
      "op": "STATICCALL",
      "path": "22"
    },
    "5034": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3825,
        3856
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "5035": {
      "op": "DUP1"
    },
    "5036": {
      "op": "ISZERO"
    },
    "5037": {
      "op": "PUSH2",
      "value": "0x13BA"
    },
    "5040": {
      "op": "JUMPI"
    },
    "5041": {
      "op": "RETURNDATASIZE"
    },
    "5042": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5044": {
      "op": "DUP1"
    },
    "5045": {
      "op": "RETURNDATACOPY"
    },
    "5046": {
      "op": "RETURNDATASIZE"
    },
    "5047": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5049": {
      "op": "REVERT"
    },
    "5050": {
      "op": "JUMPDEST"
    },
    "5051": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3825,
        3856
      ],
      "op": "POP",
      "path": "22"
    },
    "5052": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3825,
        3856
      ],
      "op": "POP",
      "path": "22"
    },
    "5053": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3825,
        3856
      ],
      "op": "POP",
      "path": "22"
    },
    "5054": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3825,
        3856
      ],
      "op": "POP",
      "path": "22"
    },
    "5055": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3825,
        3856
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "5057": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3825,
        3856
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5058": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3825,
        3856
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "5059": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5061": {
      "op": "DUP2"
    },
    "5062": {
      "op": "LT"
    },
    "5063": {
      "op": "ISZERO"
    },
    "5064": {
      "op": "PUSH2",
      "value": "0x13D0"
    },
    "5067": {
      "op": "JUMPI"
    },
    "5068": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5070": {
      "op": "DUP1"
    },
    "5071": {
      "op": "REVERT"
    },
    "5072": {
      "op": "JUMPDEST"
    },
    "5073": {
      "op": "POP"
    },
    "5074": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3825,
        3856
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5075": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3886,
        3896
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 35,
      "value": "0x5"
    },
    "5077": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3886,
        3896
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5078": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3825,
        3856
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5079": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3825,
        3856
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5080": {
      "op": "POP"
    },
    "5081": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3866,
        3906
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x13F5"
    },
    "5084": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3866,
        3906
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5089": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5091": {
      "op": "SHL"
    },
    "5092": {
      "op": "SUB"
    },
    "5093": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3866,
        3885
      ],
      "op": "DUP5",
      "path": "22"
    },
    "5094": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3866,
        3885
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5095": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3866,
        3885
      ],
      "op": "AND",
      "path": "22"
    },
    "5096": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3866,
        3885
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5097": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3886,
        3896
      ],
      "op": "AND",
      "path": "22"
    },
    "5098": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3825,
        3856
      ],
      "op": "DUP4",
      "path": "22"
    },
    "5099": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3866,
        3906
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "5104": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3866,
        3885
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1CD3"
    },
    "5107": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3866,
        3906
      ],
      "op": "AND",
      "path": "22"
    },
    "5108": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        3866,
        3906
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5109": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3866,
        3906
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5110": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3483,
        3913
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5111": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3483,
        3913
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5112": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3483,
        3913
      ],
      "op": "POP",
      "path": "22"
    },
    "5113": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "jump": "o",
      "offset": [
        3483,
        3913
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5114": {
      "offset": [
        1868,
        1893
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5115": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        1868,
        1893
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "5117": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        1868,
        1893
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5118": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5120": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5122": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5124": {
      "op": "SHL"
    },
    "5125": {
      "op": "SUB"
    },
    "5126": {
      "offset": [
        1868,
        1893
      ],
      "op": "AND",
      "path": "22"
    },
    "5127": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        1868,
        1893
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5128": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "jump": "o",
      "offset": [
        1868,
        1893
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5129": {
      "offset": [
        828,
        909
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5130": {
      "offset": [
        866,
        908
      ],
      "op": "PUSH20",
      "path": "22",
      "value": "0xD533A949740BB3306D119CC777FA900BA034CD52"
    },
    "5151": {
      "offset": [
        828,
        909
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5152": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "jump": "o",
      "offset": [
        828,
        909
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5153": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2854,
        3022
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5154": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2947,
        2957
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 36,
      "value": "0x4"
    },
    "5156": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2947,
        2957
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5157": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5161": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5163": {
      "op": "SHL"
    },
    "5164": {
      "op": "SUB"
    },
    "5165": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2947,
        2957
      ],
      "op": "AND",
      "path": "22"
    },
    "5166": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2933,
        2943
      ],
      "op": "CALLER",
      "path": "22"
    },
    "5167": {
      "branch": 89,
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2933,
        2957
      ],
      "op": "EQ",
      "path": "22"
    },
    "5168": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2925,
        2973
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x146E"
    },
    "5171": {
      "branch": 89,
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2925,
        2973
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "5172": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2925,
        2973
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "5174": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2925,
        2973
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5175": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2925,
        2973
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5176": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5180": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5182": {
      "op": "SHL"
    },
    "5183": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2925,
        2973
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5184": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2925,
        2973
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5185": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2925,
        2973
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5187": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2925,
        2973
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "5189": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2925,
        2973
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5190": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2925,
        2973
      ],
      "op": "ADD",
      "path": "22"
    },
    "5191": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2925,
        2973
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5192": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2925,
        2973
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "5194": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2925,
        2973
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "5196": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2925,
        2973
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5197": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2925,
        2973
      ],
      "op": "ADD",
      "path": "22"
    },
    "5198": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2925,
        2973
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5199": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "5211": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "5213": {
      "op": "SHL"
    },
    "5214": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2925,
        2973
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "5216": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2925,
        2973
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5217": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2925,
        2973
      ],
      "op": "ADD",
      "path": "22"
    },
    "5218": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2925,
        2973
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5219": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2925,
        2973
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5220": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2925,
        2973
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5221": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2925,
        2973
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5222": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2925,
        2973
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5223": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2925,
        2973
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5224": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2925,
        2973
      ],
      "op": "SUB",
      "path": "22"
    },
    "5225": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2925,
        2973
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "5227": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2925,
        2973
      ],
      "op": "ADD",
      "path": "22"
    },
    "5228": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2925,
        2973
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5229": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2925,
        2973
      ],
      "op": "REVERT",
      "path": "22"
    },
    "5230": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2925,
        2973
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5231": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2983,
        2997
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 37,
      "value": "0x1"
    },
    "5233": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2983,
        3015
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "5234": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "jump": "o",
      "offset": [
        2854,
        3022
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5235": {
      "offset": [
        1303,
        1386
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5236": {
      "offset": [
        1343,
        1385
      ],
      "op": "PUSH20",
      "path": "22",
      "value": "0x45F783CCE6B7FF23B2AB2D70E416CDB7D6055F51"
    },
    "5257": {
      "offset": [
        1303,
        1386
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5258": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "jump": "o",
      "offset": [
        1303,
        1386
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5259": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "offset": [
        7326,
        7437
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5260": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "offset": [
        7368,
        7375
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "5262": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "offset": [
        7394,
        7430
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 38,
      "value": "0x14AC"
    },
    "5265": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "offset": [
        7414,
        7429
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1498"
    },
    "5268": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "offset": [
        7414,
        7427
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4C0"
    },
    "5271": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "jump": "i",
      "offset": [
        7414,
        7429
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5272": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "offset": [
        7414,
        7429
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5273": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "offset": [
        7394,
        7409
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x14A0"
    },
    "5276": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "offset": [
        7394,
        7407
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1895"
    },
    "5279": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "jump": "i",
      "offset": [
        7394,
        7409
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5280": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "offset": [
        7394,
        7409
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5281": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "offset": [
        7394,
        7413
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5282": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "offset": [
        7394,
        7430
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "5287": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "offset": [
        7394,
        7413
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1BDE"
    },
    "5290": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "offset": [
        7394,
        7430
      ],
      "op": "AND",
      "path": "22"
    },
    "5291": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "jump": "i",
      "offset": [
        7394,
        7430
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5292": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "offset": [
        7394,
        7430
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5293": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "offset": [
        7387,
        7430
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5294": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "offset": [
        7387,
        7430
      ],
      "op": "POP",
      "path": "22"
    },
    "5295": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "offset": [
        7326,
        7437
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5296": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "jump": "o",
      "offset": [
        7326,
        7437
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5297": {
      "offset": [
        1697,
        1743
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5298": {
      "offset": [
        1738,
        1743
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2710"
    },
    "5301": {
      "offset": [
        1697,
        1743
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5302": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "jump": "o",
      "offset": [
        1697,
        1743
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5303": {
      "offset": [
        1572,
        1601
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5304": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "offset": [
        1572,
        1601
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "5306": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "offset": [
        1572,
        1601
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5307": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "offset": [
        1572,
        1601
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5308": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "jump": "o",
      "offset": [
        1572,
        1601
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5309": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4769,
        5200
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5310": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4859,
        4869
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 39,
      "value": "0x5"
    },
    "5312": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4859,
        4869
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5313": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4810,
        4825
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "5315": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4810,
        4825
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5316": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5320": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5322": {
      "op": "SHL"
    },
    "5323": {
      "op": "SUB"
    },
    "5324": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4859,
        4869
      ],
      "op": "AND",
      "path": "22"
    },
    "5325": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4845,
        4855
      ],
      "op": "CALLER",
      "path": "22"
    },
    "5326": {
      "branch": 90,
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4845,
        4869
      ],
      "op": "EQ",
      "path": "22"
    },
    "5327": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4837,
        4885
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x150D"
    },
    "5330": {
      "branch": 90,
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4837,
        4885
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "5331": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4837,
        4885
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "5333": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4837,
        4885
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5334": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4837,
        4885
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5335": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5339": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5341": {
      "op": "SHL"
    },
    "5342": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4837,
        4885
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5343": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4837,
        4885
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5344": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4837,
        4885
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5346": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4837,
        4885
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "5348": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4837,
        4885
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5349": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4837,
        4885
      ],
      "op": "ADD",
      "path": "22"
    },
    "5350": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4837,
        4885
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5351": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4837,
        4885
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "5353": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4837,
        4885
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "5355": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4837,
        4885
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5356": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4837,
        4885
      ],
      "op": "ADD",
      "path": "22"
    },
    "5357": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4837,
        4885
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5358": {
      "op": "PUSH11",
      "value": "0x10B1B7B73A3937B63632B9"
    },
    "5370": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "5372": {
      "op": "SHL"
    },
    "5373": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4837,
        4885
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "5375": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4837,
        4885
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5376": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4837,
        4885
      ],
      "op": "ADD",
      "path": "22"
    },
    "5377": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4837,
        4885
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5378": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4837,
        4885
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5379": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4837,
        4885
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5380": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4837,
        4885
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5381": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4837,
        4885
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5382": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4837,
        4885
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5383": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4837,
        4885
      ],
      "op": "SUB",
      "path": "22"
    },
    "5384": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4837,
        4885
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "5386": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4837,
        4885
      ],
      "op": "ADD",
      "path": "22"
    },
    "5387": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4837,
        4885
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5388": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4837,
        4885
      ],
      "op": "REVERT",
      "path": "22"
    },
    "5389": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4837,
        4885
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5390": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4895,
        4909
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 40,
      "value": "0x1515"
    },
    "5393": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4895,
        4907
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1E3D"
    },
    "5396": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "jump": "i",
      "offset": [
        4895,
        4909
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5397": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4895,
        4909
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5398": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4930,
        4967
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 41,
      "value": "0x40"
    },
    "5400": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4930,
        4967
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5401": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4930,
        4967
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5402": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "5407": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5409": {
      "op": "SHL"
    },
    "5410": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4930,
        4967
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5411": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4930,
        4967
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5412": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4961,
        4965
      ],
      "op": "ADDRESS",
      "path": "22"
    },
    "5413": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4930,
        4967
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "5415": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4930,
        4967
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5416": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4930,
        4967
      ],
      "op": "ADD",
      "path": "22"
    },
    "5417": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4930,
        4967
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5418": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4930,
        4967
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5419": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4930,
        4967
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5420": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5422": {
      "op": "DUP1"
    },
    "5423": {
      "op": "MLOAD"
    },
    "5424": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5426": {
      "op": "PUSH2",
      "value": "0x21D1"
    },
    "5429": {
      "op": "DUP4"
    },
    "5430": {
      "op": "CODECOPY"
    },
    "5431": {
      "op": "DUP2"
    },
    "5432": {
      "op": "MLOAD"
    },
    "5433": {
      "op": "SWAP2"
    },
    "5434": {
      "op": "MSTORE"
    },
    "5435": {
      "offset": [
        779,
        821
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5436": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4930,
        4952
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x70A08231"
    },
    "5441": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4930,
        4952
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5442": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4930,
        4967
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "5444": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4930,
        4967
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5445": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4930,
        4967
      ],
      "op": "DUP4",
      "path": "22"
    },
    "5446": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4930,
        4967
      ],
      "op": "ADD",
      "path": "22"
    },
    "5447": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4930,
        4967
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "5448": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4930,
        4967
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5450": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4930,
        4967
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "5451": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4930,
        4967
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5452": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4930,
        4967
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5453": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4930,
        4967
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5454": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4930,
        4967
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5455": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4930,
        4967
      ],
      "op": "SUB",
      "path": "22"
    },
    "5456": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4930,
        4967
      ],
      "op": "ADD",
      "path": "22"
    },
    "5457": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4930,
        4967
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5458": {
      "offset": [
        779,
        821
      ],
      "op": "DUP7",
      "path": "22"
    },
    "5459": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4930,
        4967
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5460": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4930,
        4967
      ],
      "op": "EXTCODESIZE",
      "path": "22"
    },
    "5461": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4930,
        4967
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "5462": {
      "op": "DUP1"
    },
    "5463": {
      "op": "ISZERO"
    },
    "5464": {
      "op": "PUSH2",
      "value": "0x1560"
    },
    "5467": {
      "op": "JUMPI"
    },
    "5468": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5470": {
      "op": "DUP1"
    },
    "5471": {
      "op": "REVERT"
    },
    "5472": {
      "op": "JUMPDEST"
    },
    "5473": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4930,
        4967
      ],
      "op": "POP",
      "path": "22"
    },
    "5474": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4930,
        4967
      ],
      "op": "GAS",
      "path": "22"
    },
    "5475": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4930,
        4967
      ],
      "op": "STATICCALL",
      "path": "22"
    },
    "5476": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4930,
        4967
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "5477": {
      "op": "DUP1"
    },
    "5478": {
      "op": "ISZERO"
    },
    "5479": {
      "op": "PUSH2",
      "value": "0x1574"
    },
    "5482": {
      "op": "JUMPI"
    },
    "5483": {
      "op": "RETURNDATASIZE"
    },
    "5484": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5486": {
      "op": "DUP1"
    },
    "5487": {
      "op": "RETURNDATACOPY"
    },
    "5488": {
      "op": "RETURNDATASIZE"
    },
    "5489": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5491": {
      "op": "REVERT"
    },
    "5492": {
      "op": "JUMPDEST"
    },
    "5493": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4930,
        4967
      ],
      "op": "POP",
      "path": "22"
    },
    "5494": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4930,
        4967
      ],
      "op": "POP",
      "path": "22"
    },
    "5495": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4930,
        4967
      ],
      "op": "POP",
      "path": "22"
    },
    "5496": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4930,
        4967
      ],
      "op": "POP",
      "path": "22"
    },
    "5497": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4930,
        4967
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "5499": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4930,
        4967
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5500": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4930,
        4967
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "5501": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5503": {
      "op": "DUP2"
    },
    "5504": {
      "op": "LT"
    },
    "5505": {
      "op": "ISZERO"
    },
    "5506": {
      "op": "PUSH2",
      "value": "0x158A"
    },
    "5509": {
      "op": "JUMPI"
    },
    "5510": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5512": {
      "op": "DUP1"
    },
    "5513": {
      "op": "REVERT"
    },
    "5514": {
      "op": "JUMPDEST"
    },
    "5515": {
      "op": "POP"
    },
    "5516": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4930,
        4967
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5517": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        5007,
        5017
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x5"
    },
    "5519": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        5007,
        5017
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5520": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4995,
        5040
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "5522": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4995,
        5040
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5523": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4995,
        5040
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5524": {
      "op": "PUSH4",
      "value": "0x2988BB9F"
    },
    "5529": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "5531": {
      "op": "SHL"
    },
    "5532": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4995,
        5040
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5533": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4995,
        5040
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5534": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5536": {
      "op": "DUP1"
    },
    "5537": {
      "op": "MLOAD"
    },
    "5538": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5540": {
      "op": "PUSH2",
      "value": "0x21D1"
    },
    "5543": {
      "op": "DUP4"
    },
    "5544": {
      "op": "CODECOPY"
    },
    "5545": {
      "op": "DUP2"
    },
    "5546": {
      "op": "MLOAD"
    },
    "5547": {
      "op": "SWAP2"
    },
    "5548": {
      "op": "MSTORE"
    },
    "5549": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4995,
        5040
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "5551": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4995,
        5040
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5552": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4995,
        5040
      ],
      "op": "ADD",
      "path": "22"
    },
    "5553": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4995,
        5040
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5554": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4995,
        5040
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5555": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4995,
        5040
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5556": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4930,
        4967
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "5557": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4930,
        4967
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "5558": {
      "op": "POP"
    },
    "5559": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4978,
        4992
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "5561": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4978,
        4992
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "5562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5566": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5568": {
      "op": "SHL"
    },
    "5569": {
      "op": "SUB"
    },
    "5570": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        5007,
        5017
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5571": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        5007,
        5017
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "5572": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        5007,
        5017
      ],
      "op": "AND",
      "path": "22"
    },
    "5573": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        5007,
        5017
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5574": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4995,
        5025
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xA622EE7C"
    },
    "5579": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4995,
        5025
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5580": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4995,
        5040
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "5582": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4995,
        5040
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5583": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4995,
        5040
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5584": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4995,
        5040
      ],
      "op": "ADD",
      "path": "22"
    },
    "5585": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4995,
        5040
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "5586": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4930,
        4967
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5588": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4930,
        4967
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "5589": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4995,
        5040
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5590": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4995,
        5040
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5591": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4995,
        5040
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5592": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4995,
        5040
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5593": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4995,
        5040
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5594": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4995,
        5040
      ],
      "op": "SUB",
      "path": "22"
    },
    "5595": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4995,
        5040
      ],
      "op": "ADD",
      "path": "22"
    },
    "5596": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4995,
        5040
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5597": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        5007,
        5017
      ],
      "op": "DUP7",
      "path": "22"
    },
    "5598": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4995,
        5040
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5599": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4995,
        5040
      ],
      "op": "EXTCODESIZE",
      "path": "22"
    },
    "5600": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4995,
        5040
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "5601": {
      "op": "DUP1"
    },
    "5602": {
      "op": "ISZERO"
    },
    "5603": {
      "op": "PUSH2",
      "value": "0x15EB"
    },
    "5606": {
      "op": "JUMPI"
    },
    "5607": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5609": {
      "op": "DUP1"
    },
    "5610": {
      "op": "REVERT"
    },
    "5611": {
      "op": "JUMPDEST"
    },
    "5612": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4995,
        5040
      ],
      "op": "POP",
      "path": "22"
    },
    "5613": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4995,
        5040
      ],
      "op": "GAS",
      "path": "22"
    },
    "5614": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4995,
        5040
      ],
      "op": "STATICCALL",
      "path": "22"
    },
    "5615": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4995,
        5040
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "5616": {
      "op": "DUP1"
    },
    "5617": {
      "op": "ISZERO"
    },
    "5618": {
      "op": "PUSH2",
      "value": "0x15FF"
    },
    "5621": {
      "op": "JUMPI"
    },
    "5622": {
      "op": "RETURNDATASIZE"
    },
    "5623": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5625": {
      "op": "DUP1"
    },
    "5626": {
      "op": "RETURNDATACOPY"
    },
    "5627": {
      "op": "RETURNDATASIZE"
    },
    "5628": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5630": {
      "op": "REVERT"
    },
    "5631": {
      "op": "JUMPDEST"
    },
    "5632": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4995,
        5040
      ],
      "op": "POP",
      "path": "22"
    },
    "5633": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4995,
        5040
      ],
      "op": "POP",
      "path": "22"
    },
    "5634": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4995,
        5040
      ],
      "op": "POP",
      "path": "22"
    },
    "5635": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4995,
        5040
      ],
      "op": "POP",
      "path": "22"
    },
    "5636": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4995,
        5040
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "5638": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4995,
        5040
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5639": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4995,
        5040
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "5640": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5642": {
      "op": "DUP2"
    },
    "5643": {
      "op": "LT"
    },
    "5644": {
      "op": "ISZERO"
    },
    "5645": {
      "op": "PUSH2",
      "value": "0x1615"
    },
    "5648": {
      "op": "JUMPI"
    },
    "5649": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5651": {
      "op": "DUP1"
    },
    "5652": {
      "op": "REVERT"
    },
    "5653": {
      "op": "JUMPDEST"
    },
    "5654": {
      "op": "POP"
    },
    "5655": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4995,
        5040
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5656": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4995,
        5040
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5657": {
      "op": "POP"
    },
    "5658": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5660": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5662": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5664": {
      "op": "SHL"
    },
    "5665": {
      "op": "SUB"
    },
    "5666": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        5058,
        5078
      ],
      "op": "DUP2",
      "path": "22",
      "statement": 42
    },
    "5667": {
      "branch": 91,
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        5058,
        5078
      ],
      "op": "AND",
      "path": "22"
    },
    "5668": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        5050,
        5089
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x165D"
    },
    "5671": {
      "branch": 91,
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        5050,
        5089
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "5672": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        5050,
        5089
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "5674": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        5050,
        5089
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5675": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        5050,
        5089
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5676": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5680": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5682": {
      "op": "SHL"
    },
    "5683": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        5050,
        5089
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5684": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        5050,
        5089
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5685": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        5050,
        5089
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5687": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        5050,
        5089
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "5689": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        5050,
        5089
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5690": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        5050,
        5089
      ],
      "op": "ADD",
      "path": "22"
    },
    "5691": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        5050,
        5089
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5692": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        5050,
        5089
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x6"
    },
    "5694": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        5050,
        5089
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "5696": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        5050,
        5089
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5697": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        5050,
        5089
      ],
      "op": "ADD",
      "path": "22"
    },
    "5698": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        5050,
        5089
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5699": {
      "op": "PUSH6",
      "value": "0x85D985D5B1D"
    },
    "5706": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "5708": {
      "op": "SHL"
    },
    "5709": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        5050,
        5089
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "5711": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        5050,
        5089
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5712": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        5050,
        5089
      ],
      "op": "ADD",
      "path": "22"
    },
    "5713": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        5050,
        5089
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5714": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        5050,
        5089
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5715": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        5050,
        5089
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5716": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        5050,
        5089
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5717": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        5050,
        5089
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5718": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        5050,
        5089
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5719": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        5050,
        5089
      ],
      "op": "SUB",
      "path": "22"
    },
    "5720": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        5050,
        5089
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "5722": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        5050,
        5089
      ],
      "op": "ADD",
      "path": "22"
    },
    "5723": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        5050,
        5089
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5724": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        5050,
        5089
      ],
      "op": "REVERT",
      "path": "22"
    },
    "5725": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        5050,
        5089
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5726": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        5151,
        5193
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 43,
      "value": "0x167C"
    },
    "5729": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5731": {
      "op": "DUP1"
    },
    "5732": {
      "op": "MLOAD"
    },
    "5733": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5735": {
      "op": "PUSH2",
      "value": "0x21D1"
    },
    "5738": {
      "op": "DUP4"
    },
    "5739": {
      "op": "CODECOPY"
    },
    "5740": {
      "op": "DUP2"
    },
    "5741": {
      "op": "MLOAD"
    },
    "5742": {
      "op": "SWAP2"
    },
    "5743": {
      "op": "MSTORE"
    },
    "5744": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        5177,
        5183
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5745": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        5185,
        5192
      ],
      "op": "DUP5",
      "path": "22"
    },
    "5746": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        5151,
        5193
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "5751": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        5151,
        5176
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1CD3"
    },
    "5754": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        5151,
        5193
      ],
      "op": "AND",
      "path": "22"
    },
    "5755": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "jump": "i",
      "offset": [
        5151,
        5193
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5756": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        5151,
        5193
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5757": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4769,
        5200
      ],
      "op": "POP",
      "path": "22"
    },
    "5758": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4769,
        5200
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5759": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "jump": "o",
      "offset": [
        4769,
        5200
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5760": {
      "offset": [
        1656,
        1691
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5761": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        1656,
        1691
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "5763": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        1656,
        1691
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5764": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        1656,
        1691
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5765": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "jump": "o",
      "offset": [
        1656,
        1691
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5766": {
      "offset": [
        1750,
        1783
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5767": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        1750,
        1783
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "5769": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        1750,
        1783
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5770": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        1750,
        1783
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5771": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "jump": "o",
      "offset": [
        1750,
        1783
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5772": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7601,
        7753
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5773": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7686,
        7696
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 44,
      "value": "0x4"
    },
    "5775": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7686,
        7696
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5780": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5782": {
      "op": "SHL"
    },
    "5783": {
      "op": "SUB"
    },
    "5784": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7686,
        7696
      ],
      "op": "AND",
      "path": "22"
    },
    "5785": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7672,
        7682
      ],
      "op": "CALLER",
      "path": "22"
    },
    "5786": {
      "branch": 92,
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7672,
        7696
      ],
      "op": "EQ",
      "path": "22"
    },
    "5787": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7664,
        7712
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x16D9"
    },
    "5790": {
      "branch": 92,
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7664,
        7712
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "5791": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7664,
        7712
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "5793": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7664,
        7712
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5794": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7664,
        7712
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5795": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5799": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5801": {
      "op": "SHL"
    },
    "5802": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7664,
        7712
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5803": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7664,
        7712
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5804": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7664,
        7712
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5806": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7664,
        7712
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "5808": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7664,
        7712
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5809": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7664,
        7712
      ],
      "op": "ADD",
      "path": "22"
    },
    "5810": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7664,
        7712
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5811": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7664,
        7712
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "5813": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7664,
        7712
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "5815": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7664,
        7712
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5816": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7664,
        7712
      ],
      "op": "ADD",
      "path": "22"
    },
    "5817": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7664,
        7712
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5818": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "5830": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "5832": {
      "op": "SHL"
    },
    "5833": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7664,
        7712
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "5835": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7664,
        7712
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5836": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7664,
        7712
      ],
      "op": "ADD",
      "path": "22"
    },
    "5837": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7664,
        7712
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5838": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7664,
        7712
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5839": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7664,
        7712
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5840": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7664,
        7712
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5841": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7664,
        7712
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5842": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7664,
        7712
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5843": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7664,
        7712
      ],
      "op": "SUB",
      "path": "22"
    },
    "5844": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7664,
        7712
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "5846": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7664,
        7712
      ],
      "op": "ADD",
      "path": "22"
    },
    "5847": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7664,
        7712
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5848": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7664,
        7712
      ],
      "op": "REVERT",
      "path": "22"
    },
    "5849": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7664,
        7712
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5850": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7722,
        7732
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 45,
      "value": "0x5"
    },
    "5852": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7722,
        7746
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5853": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7722,
        7746
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5858": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5860": {
      "op": "SHL"
    },
    "5861": {
      "op": "SUB"
    },
    "5862": {
      "op": "NOT"
    },
    "5863": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7722,
        7746
      ],
      "op": "AND",
      "path": "22"
    },
    "5864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5866": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5868": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5870": {
      "op": "SHL"
    },
    "5871": {
      "op": "SUB"
    },
    "5872": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7722,
        7746
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "5873": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7722,
        7746
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5874": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7722,
        7746
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "5875": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7722,
        7746
      ],
      "op": "AND",
      "path": "22"
    },
    "5876": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7722,
        7746
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5877": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7722,
        7746
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5878": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7722,
        7746
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5879": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7722,
        7746
      ],
      "op": "OR",
      "path": "22"
    },
    "5880": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7722,
        7746
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5881": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7722,
        7746
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "5882": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "jump": "o",
      "offset": [
        7601,
        7753
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5883": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2538,
        2678
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5884": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2617,
        2627
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 46,
      "value": "0x4"
    },
    "5886": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2617,
        2627
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5887": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5889": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5891": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5893": {
      "op": "SHL"
    },
    "5894": {
      "op": "SUB"
    },
    "5895": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2617,
        2627
      ],
      "op": "AND",
      "path": "22"
    },
    "5896": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2603,
        2613
      ],
      "op": "CALLER",
      "path": "22"
    },
    "5897": {
      "branch": 93,
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2603,
        2627
      ],
      "op": "EQ",
      "path": "22"
    },
    "5898": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2595,
        2643
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1748"
    },
    "5901": {
      "branch": 93,
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2595,
        2643
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "5902": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2595,
        2643
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "5904": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2595,
        2643
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5905": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2595,
        2643
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5906": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5910": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5912": {
      "op": "SHL"
    },
    "5913": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2595,
        2643
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5914": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2595,
        2643
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5915": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2595,
        2643
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5917": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2595,
        2643
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "5919": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2595,
        2643
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5920": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2595,
        2643
      ],
      "op": "ADD",
      "path": "22"
    },
    "5921": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2595,
        2643
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5922": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2595,
        2643
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "5924": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2595,
        2643
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "5926": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2595,
        2643
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5927": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2595,
        2643
      ],
      "op": "ADD",
      "path": "22"
    },
    "5928": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2595,
        2643
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5929": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "5941": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "5943": {
      "op": "SHL"
    },
    "5944": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2595,
        2643
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "5946": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2595,
        2643
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5947": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2595,
        2643
      ],
      "op": "ADD",
      "path": "22"
    },
    "5948": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2595,
        2643
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5949": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2595,
        2643
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5950": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2595,
        2643
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5951": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2595,
        2643
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5952": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2595,
        2643
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5953": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2595,
        2643
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5954": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2595,
        2643
      ],
      "op": "SUB",
      "path": "22"
    },
    "5955": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2595,
        2643
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "5957": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2595,
        2643
      ],
      "op": "ADD",
      "path": "22"
    },
    "5958": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2595,
        2643
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5959": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2595,
        2643
      ],
      "op": "REVERT",
      "path": "22"
    },
    "5960": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2595,
        2643
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5961": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2653,
        2660
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 47,
      "value": "0x0"
    },
    "5963": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2653,
        2671
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "5964": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "jump": "o",
      "offset": [
        2538,
        2678
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5965": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3028,
        3160
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5966": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3103,
        3113
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 48,
      "value": "0x4"
    },
    "5968": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3103,
        3113
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5969": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5973": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5975": {
      "op": "SHL"
    },
    "5976": {
      "op": "SUB"
    },
    "5977": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3103,
        3113
      ],
      "op": "AND",
      "path": "22"
    },
    "5978": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3089,
        3099
      ],
      "op": "CALLER",
      "path": "22"
    },
    "5979": {
      "branch": 94,
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3089,
        3113
      ],
      "op": "EQ",
      "path": "22"
    },
    "5980": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3081,
        3129
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x179A"
    },
    "5983": {
      "branch": 94,
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3081,
        3129
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "5984": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3081,
        3129
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "5986": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3081,
        3129
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5987": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3081,
        3129
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5988": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5992": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5994": {
      "op": "SHL"
    },
    "5995": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3081,
        3129
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5996": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3081,
        3129
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5997": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3081,
        3129
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5999": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3081,
        3129
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "6001": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3081,
        3129
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6002": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3081,
        3129
      ],
      "op": "ADD",
      "path": "22"
    },
    "6003": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3081,
        3129
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6004": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3081,
        3129
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "6006": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3081,
        3129
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "6008": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3081,
        3129
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6009": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3081,
        3129
      ],
      "op": "ADD",
      "path": "22"
    },
    "6010": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3081,
        3129
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6011": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "6023": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "6025": {
      "op": "SHL"
    },
    "6026": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3081,
        3129
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "6028": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3081,
        3129
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6029": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3081,
        3129
      ],
      "op": "ADD",
      "path": "22"
    },
    "6030": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3081,
        3129
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6031": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3081,
        3129
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6032": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3081,
        3129
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "6033": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3081,
        3129
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6034": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3081,
        3129
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6035": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3081,
        3129
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6036": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3081,
        3129
      ],
      "op": "SUB",
      "path": "22"
    },
    "6037": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3081,
        3129
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "6039": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3081,
        3129
      ],
      "op": "ADD",
      "path": "22"
    },
    "6040": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3081,
        3129
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6041": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3081,
        3129
      ],
      "op": "REVERT",
      "path": "22"
    },
    "6042": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3081,
        3129
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6043": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3139,
        3144
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 49,
      "value": "0x3"
    },
    "6045": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3139,
        3153
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6046": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3139,
        3153
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "6047": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6049": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6051": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6053": {
      "op": "SHL"
    },
    "6054": {
      "op": "SUB"
    },
    "6055": {
      "op": "NOT"
    },
    "6056": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3139,
        3153
      ],
      "op": "AND",
      "path": "22"
    },
    "6057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6061": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6063": {
      "op": "SHL"
    },
    "6064": {
      "op": "SUB"
    },
    "6065": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3139,
        3153
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "6066": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3139,
        3153
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6067": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3139,
        3153
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "6068": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3139,
        3153
      ],
      "op": "AND",
      "path": "22"
    },
    "6069": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3139,
        3153
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "6070": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3139,
        3153
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6071": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3139,
        3153
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "6072": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3139,
        3153
      ],
      "op": "OR",
      "path": "22"
    },
    "6073": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3139,
        3153
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6074": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "offset": [
        3139,
        3153
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "6075": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "jump": "o",
      "offset": [
        3028,
        3160
      ],
      "op": "JUMP",
      "path": "22"
    },
    "6076": {
      "offset": [
        1393,
        1476
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6077": {
      "offset": [
        1433,
        1475
      ],
      "op": "PUSH20",
      "path": "22",
      "value": "0xFA712EE4788C042E2B7BB55E6CB8EC569C4530C1"
    },
    "6098": {
      "offset": [
        1393,
        1476
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6099": {
      "fn": "StrategyCurveYVoterProxy.setProxy",
      "jump": "o",
      "offset": [
        1393,
        1476
      ],
      "op": "JUMP",
      "path": "22"
    },
    "6100": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7443,
        7595
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6101": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7528,
        7538
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 50,
      "value": "0x4"
    },
    "6103": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7528,
        7538
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "6104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6108": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6110": {
      "op": "SHL"
    },
    "6111": {
      "op": "SUB"
    },
    "6112": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7528,
        7538
      ],
      "op": "AND",
      "path": "22"
    },
    "6113": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7514,
        7524
      ],
      "op": "CALLER",
      "path": "22"
    },
    "6114": {
      "branch": 95,
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7514,
        7538
      ],
      "op": "EQ",
      "path": "22"
    },
    "6115": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7506,
        7554
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1821"
    },
    "6118": {
      "branch": 95,
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7506,
        7554
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "6119": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7506,
        7554
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "6121": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7506,
        7554
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6122": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7506,
        7554
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "6123": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6127": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6129": {
      "op": "SHL"
    },
    "6130": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7506,
        7554
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6131": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7506,
        7554
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6132": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7506,
        7554
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "6134": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7506,
        7554
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "6136": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7506,
        7554
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6137": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7506,
        7554
      ],
      "op": "ADD",
      "path": "22"
    },
    "6138": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7506,
        7554
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6139": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7506,
        7554
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "6141": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7506,
        7554
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "6143": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7506,
        7554
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6144": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7506,
        7554
      ],
      "op": "ADD",
      "path": "22"
    },
    "6145": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7506,
        7554
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6146": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "6158": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "6160": {
      "op": "SHL"
    },
    "6161": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7506,
        7554
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "6163": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7506,
        7554
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6164": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7506,
        7554
      ],
      "op": "ADD",
      "path": "22"
    },
    "6165": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7506,
        7554
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6166": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7506,
        7554
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6167": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7506,
        7554
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "6168": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7506,
        7554
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6169": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7506,
        7554
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6170": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7506,
        7554
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6171": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7506,
        7554
      ],
      "op": "SUB",
      "path": "22"
    },
    "6172": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7506,
        7554
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "6174": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7506,
        7554
      ],
      "op": "ADD",
      "path": "22"
    },
    "6175": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7506,
        7554
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6176": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7506,
        7554
      ],
      "op": "REVERT",
      "path": "22"
    },
    "6177": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7506,
        7554
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6178": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7564,
        7574
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 51,
      "value": "0x4"
    },
    "6180": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7564,
        7588
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6181": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7564,
        7588
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "6182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6184": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6186": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6188": {
      "op": "SHL"
    },
    "6189": {
      "op": "SUB"
    },
    "6190": {
      "op": "NOT"
    },
    "6191": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7564,
        7588
      ],
      "op": "AND",
      "path": "22"
    },
    "6192": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6194": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6196": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6198": {
      "op": "SHL"
    },
    "6199": {
      "op": "SUB"
    },
    "6200": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7564,
        7588
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "6201": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7564,
        7588
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6202": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7564,
        7588
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "6203": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7564,
        7588
      ],
      "op": "AND",
      "path": "22"
    },
    "6204": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7564,
        7588
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "6205": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7564,
        7588
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6206": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7564,
        7588
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "6207": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7564,
        7588
      ],
      "op": "OR",
      "path": "22"
    },
    "6208": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7564,
        7588
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6209": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7564,
        7588
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "6210": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "jump": "o",
      "offset": [
        7443,
        7595
      ],
      "op": "JUMP",
      "path": "22"
    },
    "6211": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2684,
        2848
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6212": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2775,
        2785
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 52,
      "value": "0x4"
    },
    "6214": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2775,
        2785
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "6215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6217": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6219": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6221": {
      "op": "SHL"
    },
    "6222": {
      "op": "SUB"
    },
    "6223": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2775,
        2785
      ],
      "op": "AND",
      "path": "22"
    },
    "6224": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2761,
        2771
      ],
      "op": "CALLER",
      "path": "22"
    },
    "6225": {
      "branch": 96,
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2761,
        2785
      ],
      "op": "EQ",
      "path": "22"
    },
    "6226": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2753,
        2801
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1890"
    },
    "6229": {
      "branch": 96,
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2753,
        2801
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "6230": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2753,
        2801
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "6232": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2753,
        2801
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6233": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2753,
        2801
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "6234": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6238": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6240": {
      "op": "SHL"
    },
    "6241": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2753,
        2801
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6242": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2753,
        2801
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6243": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2753,
        2801
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "6245": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2753,
        2801
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "6247": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2753,
        2801
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6248": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2753,
        2801
      ],
      "op": "ADD",
      "path": "22"
    },
    "6249": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2753,
        2801
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6250": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2753,
        2801
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "6252": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2753,
        2801
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "6254": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2753,
        2801
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6255": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2753,
        2801
      ],
      "op": "ADD",
      "path": "22"
    },
    "6256": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2753,
        2801
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6257": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "6269": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "6271": {
      "op": "SHL"
    },
    "6272": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2753,
        2801
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "6274": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2753,
        2801
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6275": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2753,
        2801
      ],
      "op": "ADD",
      "path": "22"
    },
    "6276": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2753,
        2801
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6277": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2753,
        2801
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6278": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2753,
        2801
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "6279": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2753,
        2801
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6280": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2753,
        2801
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6281": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2753,
        2801
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6282": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2753,
        2801
      ],
      "op": "SUB",
      "path": "22"
    },
    "6283": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2753,
        2801
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "6285": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2753,
        2801
      ],
      "op": "ADD",
      "path": "22"
    },
    "6286": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2753,
        2801
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6287": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2753,
        2801
      ],
      "op": "REVERT",
      "path": "22"
    },
    "6288": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2753,
        2801
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6289": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2811,
        2824
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 53,
      "value": "0x2"
    },
    "6291": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2811,
        2841
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "6292": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "jump": "o",
      "offset": [
        2684,
        2848
      ],
      "op": "JUMP",
      "path": "22"
    },
    "6293": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        7084,
        7200
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6294": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        7156,
        7193
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 54,
      "value": "0x40"
    },
    "6296": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        7156,
        7193
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6297": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        7156,
        7193
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "6298": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "6303": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6305": {
      "op": "SHL"
    },
    "6306": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        7156,
        7193
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6307": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        7156,
        7193
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6308": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        7187,
        7191
      ],
      "op": "ADDRESS",
      "path": "22"
    },
    "6309": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        7156,
        7193
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "6311": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        7156,
        7193
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6312": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        7156,
        7193
      ],
      "op": "ADD",
      "path": "22"
    },
    "6313": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        7156,
        7193
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6314": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        7156,
        7193
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6315": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        7156,
        7193
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "6316": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        7130,
        7137
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "6318": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        7130,
        7137
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "6319": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6321": {
      "op": "DUP1"
    },
    "6322": {
      "op": "MLOAD"
    },
    "6323": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6325": {
      "op": "PUSH2",
      "value": "0x21D1"
    },
    "6328": {
      "op": "DUP4"
    },
    "6329": {
      "op": "CODECOPY"
    },
    "6330": {
      "op": "DUP2"
    },
    "6331": {
      "op": "MLOAD"
    },
    "6332": {
      "op": "SWAP2"
    },
    "6333": {
      "op": "MSTORE"
    },
    "6334": {
      "offset": [
        779,
        821
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "6335": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        7156,
        7178
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x70A08231"
    },
    "6340": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        7156,
        7178
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "6341": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        7156,
        7193
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "6343": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        7156,
        7193
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6344": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        7156,
        7193
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6345": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        7156,
        7193
      ],
      "op": "ADD",
      "path": "22"
    },
    "6346": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        7156,
        7193
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "6347": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        7156,
        7193
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "6349": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        7156,
        7193
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "6350": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        7156,
        7193
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6351": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        7156,
        7193
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "6352": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        7156,
        7193
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6353": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        7156,
        7193
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6354": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        7156,
        7193
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6355": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        7156,
        7193
      ],
      "op": "SUB",
      "path": "22"
    },
    "6356": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        7156,
        7193
      ],
      "op": "ADD",
      "path": "22"
    },
    "6357": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        7156,
        7193
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6358": {
      "offset": [
        779,
        821
      ],
      "op": "DUP7",
      "path": "22"
    },
    "6359": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        7156,
        7193
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6360": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        7156,
        7193
      ],
      "op": "EXTCODESIZE",
      "path": "22"
    },
    "6361": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        7156,
        7193
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "6362": {
      "op": "DUP1"
    },
    "6363": {
      "op": "ISZERO"
    },
    "6364": {
      "op": "PUSH2",
      "value": "0x51F"
    },
    "6367": {
      "op": "JUMPI"
    },
    "6368": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6370": {
      "op": "DUP1"
    },
    "6371": {
      "op": "REVERT"
    },
    "6372": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2380,
        2532
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6373": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2465,
        2475
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 55,
      "value": "0x4"
    },
    "6375": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2465,
        2475
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "6376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6380": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6382": {
      "op": "SHL"
    },
    "6383": {
      "op": "SUB"
    },
    "6384": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2465,
        2475
      ],
      "op": "AND",
      "path": "22"
    },
    "6385": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2451,
        2461
      ],
      "op": "CALLER",
      "path": "22"
    },
    "6386": {
      "branch": 97,
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2451,
        2475
      ],
      "op": "EQ",
      "path": "22"
    },
    "6387": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2443,
        2491
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1931"
    },
    "6390": {
      "branch": 97,
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2443,
        2491
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "6391": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2443,
        2491
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "6393": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2443,
        2491
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6394": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2443,
        2491
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "6395": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6399": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6401": {
      "op": "SHL"
    },
    "6402": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2443,
        2491
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6403": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2443,
        2491
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6404": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2443,
        2491
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "6406": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2443,
        2491
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "6408": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2443,
        2491
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6409": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2443,
        2491
      ],
      "op": "ADD",
      "path": "22"
    },
    "6410": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2443,
        2491
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6411": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2443,
        2491
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "6413": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2443,
        2491
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "6415": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2443,
        2491
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6416": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2443,
        2491
      ],
      "op": "ADD",
      "path": "22"
    },
    "6417": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2443,
        2491
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6418": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "6430": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "6432": {
      "op": "SHL"
    },
    "6433": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2443,
        2491
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "6435": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2443,
        2491
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6436": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2443,
        2491
      ],
      "op": "ADD",
      "path": "22"
    },
    "6437": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2443,
        2491
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6438": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2443,
        2491
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6439": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2443,
        2491
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "6440": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2443,
        2491
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6441": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2443,
        2491
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6442": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2443,
        2491
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6443": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2443,
        2491
      ],
      "op": "SUB",
      "path": "22"
    },
    "6444": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2443,
        2491
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "6446": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2443,
        2491
      ],
      "op": "ADD",
      "path": "22"
    },
    "6447": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2443,
        2491
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6448": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2443,
        2491
      ],
      "op": "REVERT",
      "path": "22"
    },
    "6449": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2443,
        2491
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6450": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2501,
        2511
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 56,
      "value": "0x6"
    },
    "6452": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2501,
        2525
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6453": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2501,
        2525
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "6454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6458": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6460": {
      "op": "SHL"
    },
    "6461": {
      "op": "SUB"
    },
    "6462": {
      "op": "NOT"
    },
    "6463": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2501,
        2525
      ],
      "op": "AND",
      "path": "22"
    },
    "6464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6468": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6470": {
      "op": "SHL"
    },
    "6471": {
      "op": "SUB"
    },
    "6472": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2501,
        2525
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "6473": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2501,
        2525
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6474": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2501,
        2525
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "6475": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2501,
        2525
      ],
      "op": "AND",
      "path": "22"
    },
    "6476": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2501,
        2525
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "6477": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2501,
        2525
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6478": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2501,
        2525
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "6479": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2501,
        2525
      ],
      "op": "OR",
      "path": "22"
    },
    "6480": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2501,
        2525
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6481": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2501,
        2525
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "6482": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "jump": "o",
      "offset": [
        2380,
        2532
      ],
      "op": "JUMP",
      "path": "22"
    },
    "6483": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3166,
        3403
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6484": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3218,
        3255
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "6486": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3218,
        3255
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6487": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3218,
        3255
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "6488": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "6493": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6495": {
      "op": "SHL"
    },
    "6496": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3218,
        3255
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6497": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3218,
        3255
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6498": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3249,
        3253
      ],
      "op": "ADDRESS",
      "path": "22"
    },
    "6499": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3218,
        3255
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "6501": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3218,
        3255
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6502": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3218,
        3255
      ],
      "op": "ADD",
      "path": "22"
    },
    "6503": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3218,
        3255
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6504": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3218,
        3255
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6505": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3218,
        3255
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "6506": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3202,
        3215
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "6508": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3202,
        3215
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "6509": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6511": {
      "op": "DUP1"
    },
    "6512": {
      "op": "MLOAD"
    },
    "6513": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6515": {
      "op": "PUSH2",
      "value": "0x21D1"
    },
    "6518": {
      "op": "DUP4"
    },
    "6519": {
      "op": "CODECOPY"
    },
    "6520": {
      "op": "DUP2"
    },
    "6521": {
      "op": "MLOAD"
    },
    "6522": {
      "op": "SWAP2"
    },
    "6523": {
      "op": "MSTORE"
    },
    "6524": {
      "offset": [
        779,
        821
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "6525": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3218,
        3240
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x70A08231"
    },
    "6530": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3218,
        3240
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "6531": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3218,
        3255
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "6533": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3218,
        3255
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6534": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3218,
        3255
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6535": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3218,
        3255
      ],
      "op": "ADD",
      "path": "22"
    },
    "6536": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3218,
        3255
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "6537": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3218,
        3255
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "6539": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3218,
        3255
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "6540": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3218,
        3255
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6541": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3218,
        3255
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "6542": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3218,
        3255
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6543": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3218,
        3255
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6544": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3218,
        3255
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6545": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3218,
        3255
      ],
      "op": "SUB",
      "path": "22"
    },
    "6546": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3218,
        3255
      ],
      "op": "ADD",
      "path": "22"
    },
    "6547": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3218,
        3255
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6548": {
      "offset": [
        779,
        821
      ],
      "op": "DUP7",
      "path": "22"
    },
    "6549": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3218,
        3255
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6550": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3218,
        3255
      ],
      "op": "EXTCODESIZE",
      "path": "22"
    },
    "6551": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3218,
        3255
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "6552": {
      "op": "DUP1"
    },
    "6553": {
      "op": "ISZERO"
    },
    "6554": {
      "op": "PUSH2",
      "value": "0x19A2"
    },
    "6557": {
      "op": "JUMPI"
    },
    "6558": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6560": {
      "op": "DUP1"
    },
    "6561": {
      "op": "REVERT"
    },
    "6562": {
      "op": "JUMPDEST"
    },
    "6563": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3218,
        3255
      ],
      "op": "POP",
      "path": "22"
    },
    "6564": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3218,
        3255
      ],
      "op": "GAS",
      "path": "22"
    },
    "6565": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3218,
        3255
      ],
      "op": "STATICCALL",
      "path": "22"
    },
    "6566": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3218,
        3255
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "6567": {
      "op": "DUP1"
    },
    "6568": {
      "op": "ISZERO"
    },
    "6569": {
      "op": "PUSH2",
      "value": "0x19B6"
    },
    "6572": {
      "op": "JUMPI"
    },
    "6573": {
      "op": "RETURNDATASIZE"
    },
    "6574": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6576": {
      "op": "DUP1"
    },
    "6577": {
      "op": "RETURNDATACOPY"
    },
    "6578": {
      "op": "RETURNDATASIZE"
    },
    "6579": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6581": {
      "op": "REVERT"
    },
    "6582": {
      "op": "JUMPDEST"
    },
    "6583": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3218,
        3255
      ],
      "op": "POP",
      "path": "22"
    },
    "6584": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3218,
        3255
      ],
      "op": "POP",
      "path": "22"
    },
    "6585": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3218,
        3255
      ],
      "op": "POP",
      "path": "22"
    },
    "6586": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3218,
        3255
      ],
      "op": "POP",
      "path": "22"
    },
    "6587": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3218,
        3255
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "6589": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3218,
        3255
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "6590": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3218,
        3255
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "6591": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6593": {
      "op": "DUP2"
    },
    "6594": {
      "op": "LT"
    },
    "6595": {
      "op": "ISZERO"
    },
    "6596": {
      "op": "PUSH2",
      "value": "0x19CC"
    },
    "6599": {
      "op": "JUMPI"
    },
    "6600": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6602": {
      "op": "DUP1"
    },
    "6603": {
      "op": "REVERT"
    },
    "6604": {
      "op": "JUMPDEST"
    },
    "6605": {
      "op": "POP"
    },
    "6606": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3218,
        3255
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "6607": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3218,
        3255
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6608": {
      "op": "POP"
    },
    "6609": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3269,
        3278
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6610": {
      "branch": 98,
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3269,
        3278
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "6611": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3265,
        3397
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1A8F"
    },
    "6614": {
      "branch": 98,
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3265,
        3397
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "6615": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3320,
        3325
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 57,
      "value": "0x3"
    },
    "6617": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3320,
        3325
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "6618": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3294,
        3333
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1A02"
    },
    "6621": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3294,
        3333
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6622": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6624": {
      "op": "DUP1"
    },
    "6625": {
      "op": "MLOAD"
    },
    "6626": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6628": {
      "op": "PUSH2",
      "value": "0x21D1"
    },
    "6631": {
      "op": "DUP4"
    },
    "6632": {
      "op": "CODECOPY"
    },
    "6633": {
      "op": "DUP2"
    },
    "6634": {
      "op": "MLOAD"
    },
    "6635": {
      "op": "SWAP2"
    },
    "6636": {
      "op": "MSTORE"
    },
    "6637": {
      "offset": [
        779,
        821
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6642": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6644": {
      "op": "SHL"
    },
    "6645": {
      "op": "SUB"
    },
    "6646": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3320,
        3325
      ],
      "op": "AND",
      "path": "22"
    },
    "6647": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3327,
        3332
      ],
      "op": "DUP4",
      "path": "22"
    },
    "6648": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3294,
        3333
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "6653": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3294,
        3319
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1CD3"
    },
    "6656": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3294,
        3333
      ],
      "op": "AND",
      "path": "22"
    },
    "6657": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "jump": "i",
      "offset": [
        3294,
        3333
      ],
      "op": "JUMP",
      "path": "22"
    },
    "6658": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3294,
        3333
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6659": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3359,
        3364
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 58,
      "value": "0x3"
    },
    "6661": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3359,
        3364
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "6662": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3347,
        3386
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "6664": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3347,
        3386
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6665": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3347,
        3386
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "6666": {
      "op": "PUSH4",
      "value": "0x1F2C13E1"
    },
    "6671": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "6673": {
      "op": "SHL"
    },
    "6674": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3347,
        3386
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6675": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3347,
        3386
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6676": {
      "offset": [
        1433,
        1475
      ],
      "op": "PUSH20",
      "path": "22",
      "value": "0xFA712EE4788C042E2B7BB55E6CB8EC569C4530C1"
    },
    "6697": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3347,
        3386
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "6699": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3347,
        3386
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6700": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3347,
        3386
      ],
      "op": "ADD",
      "path": "22"
    },
    "6701": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3347,
        3386
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6702": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6704": {
      "op": "DUP1"
    },
    "6705": {
      "op": "MLOAD"
    },
    "6706": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6708": {
      "op": "PUSH2",
      "value": "0x21D1"
    },
    "6711": {
      "op": "DUP4"
    },
    "6712": {
      "op": "CODECOPY"
    },
    "6713": {
      "op": "DUP2"
    },
    "6714": {
      "op": "MLOAD"
    },
    "6715": {
      "op": "SWAP2"
    },
    "6716": {
      "op": "MSTORE"
    },
    "6717": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3347,
        3386
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "6719": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3347,
        3386
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6720": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3347,
        3386
      ],
      "op": "ADD",
      "path": "22"
    },
    "6721": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3347,
        3386
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6722": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3347,
        3386
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6723": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3347,
        3386
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "6724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6726": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6728": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6730": {
      "op": "SHL"
    },
    "6731": {
      "op": "SUB"
    },
    "6732": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3359,
        3364
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6733": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3359,
        3364
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "6734": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3359,
        3364
      ],
      "op": "AND",
      "path": "22"
    },
    "6735": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3359,
        3364
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "6736": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3347,
        3373
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xF9609F08"
    },
    "6741": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3347,
        3373
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "6742": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3347,
        3386
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "6744": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3347,
        3386
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6745": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3347,
        3386
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6746": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3347,
        3386
      ],
      "op": "ADD",
      "path": "22"
    },
    "6747": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3347,
        3386
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "6748": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3359,
        3364
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "6750": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3359,
        3364
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "6751": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3347,
        3386
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6752": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3347,
        3386
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "6753": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3347,
        3386
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6754": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3347,
        3386
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6755": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3347,
        3386
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6756": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3347,
        3386
      ],
      "op": "SUB",
      "path": "22"
    },
    "6757": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3347,
        3386
      ],
      "op": "ADD",
      "path": "22"
    },
    "6758": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3347,
        3386
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6759": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3359,
        3364
      ],
      "op": "DUP4",
      "path": "22"
    },
    "6760": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3359,
        3364
      ],
      "op": "DUP8",
      "path": "22"
    },
    "6761": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3347,
        3386
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6762": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3347,
        3386
      ],
      "op": "EXTCODESIZE",
      "path": "22"
    },
    "6763": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3347,
        3386
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "6764": {
      "op": "DUP1"
    },
    "6765": {
      "op": "ISZERO"
    },
    "6766": {
      "op": "PUSH2",
      "value": "0x1A76"
    },
    "6769": {
      "op": "JUMPI"
    },
    "6770": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6772": {
      "op": "DUP1"
    },
    "6773": {
      "op": "REVERT"
    },
    "6774": {
      "op": "JUMPDEST"
    },
    "6775": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3347,
        3386
      ],
      "op": "POP",
      "path": "22"
    },
    "6776": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3347,
        3386
      ],
      "op": "GAS",
      "path": "22"
    },
    "6777": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3347,
        3386
      ],
      "op": "CALL",
      "path": "22"
    },
    "6778": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3347,
        3386
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "6779": {
      "op": "DUP1"
    },
    "6780": {
      "op": "ISZERO"
    },
    "6781": {
      "op": "PUSH2",
      "value": "0x1A8A"
    },
    "6784": {
      "op": "JUMPI"
    },
    "6785": {
      "op": "RETURNDATASIZE"
    },
    "6786": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6788": {
      "op": "DUP1"
    },
    "6789": {
      "op": "RETURNDATACOPY"
    },
    "6790": {
      "op": "RETURNDATASIZE"
    },
    "6791": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6793": {
      "op": "REVERT"
    },
    "6794": {
      "op": "JUMPDEST"
    },
    "6795": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3347,
        3386
      ],
      "op": "POP",
      "path": "22"
    },
    "6796": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3347,
        3386
      ],
      "op": "POP",
      "path": "22"
    },
    "6797": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3347,
        3386
      ],
      "op": "POP",
      "path": "22"
    },
    "6798": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3347,
        3386
      ],
      "op": "POP",
      "path": "22"
    },
    "6799": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3265,
        3397
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6800": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3166,
        3403
      ],
      "op": "POP",
      "path": "22"
    },
    "6801": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "jump": "o",
      "offset": [
        3166,
        3403
      ],
      "op": "JUMP",
      "path": "22"
    },
    "6802": {
      "offset": [
        1962,
        1983
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6803": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        1962,
        1983
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x7"
    },
    "6805": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        1962,
        1983
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "6806": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        1962,
        1983
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6807": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "jump": "o",
      "offset": [
        1962,
        1983
      ],
      "op": "JUMP",
      "path": "22"
    },
    "6808": {
      "offset": [
        1841,
        1861
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6809": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        1841,
        1861
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x3"
    },
    "6811": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        1841,
        1861
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "6812": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6814": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6816": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6818": {
      "op": "SHL"
    },
    "6819": {
      "op": "SUB"
    },
    "6820": {
      "offset": [
        1841,
        1861
      ],
      "op": "AND",
      "path": "22"
    },
    "6821": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        1841,
        1861
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6822": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "jump": "o",
      "offset": [
        1841,
        1861
      ],
      "op": "JUMP",
      "path": "22"
    },
    "6823": {
      "offset": [
        915,
        996
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6824": {
      "offset": [
        953,
        995
      ],
      "op": "PUSH20",
      "path": "22",
      "value": "0x7A250D5630B4CF539739DF2C5DACB4C659F2488D"
    },
    "6845": {
      "offset": [
        915,
        996
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6846": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "jump": "o",
      "offset": [
        915,
        996
      ],
      "op": "JUMP",
      "path": "22"
    },
    "6847": {
      "offset": [
        1128,
        1209
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6848": {
      "offset": [
        1166,
        1208
      ],
      "op": "PUSH20",
      "path": "22",
      "value": "0x6B175474E89094C44DA98B954EEDEAC495271D0F"
    },
    "6869": {
      "offset": [
        1128,
        1209
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6870": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "jump": "o",
      "offset": [
        1128,
        1209
      ],
      "op": "JUMP",
      "path": "22"
    },
    "6871": {
      "offset": [
        1899,
        1924
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6872": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        1899,
        1924
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x5"
    },
    "6874": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        1899,
        1924
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "6875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6877": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6879": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6881": {
      "op": "SHL"
    },
    "6882": {
      "op": "SUB"
    },
    "6883": {
      "offset": [
        1899,
        1924
      ],
      "op": "AND",
      "path": "22"
    },
    "6884": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        1899,
        1924
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6885": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "jump": "o",
      "offset": [
        1899,
        1924
      ],
      "op": "JUMP",
      "path": "22"
    },
    "6886": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6887": {
      "fn": "SafeMath.sub",
      "offset": [
        1332,
        1339
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6889": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 59,
      "value": "0x1B28"
    },
    "6892": {
      "fn": "SafeMath.sub",
      "offset": [
        1362,
        1363
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6893": {
      "fn": "SafeMath.sub",
      "offset": [
        1365,
        1366
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6894": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6896": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6897": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6898": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6900": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "ADD",
      "path": "1"
    },
    "6901": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6903": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6904": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6905": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1E"
    },
    "6907": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6908": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6909": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6911": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "ADD",
      "path": "1"
    },
    "6912": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "6945": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6946": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6947": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "POP",
      "path": "1"
    },
    "6948": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1361
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1EE0"
    },
    "6951": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        1358,
        1401
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6952": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6953": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1401
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6954": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1401
      ],
      "op": "POP",
      "path": "1"
    },
    "6955": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6956": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "6957": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6958": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "POP",
      "path": "1"
    },
    "6959": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "POP",
      "path": "1"
    },
    "6960": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1274,
        1408
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6961": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6938,
        7078
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6962": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        7034,
        7039
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 60,
      "value": "0x3"
    },
    "6964": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        7034,
        7039
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "6965": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        7022,
        7071
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "6967": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        7022,
        7071
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6968": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        7022,
        7071
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "6969": {
      "op": "PUSH4",
      "value": "0x6CE57689"
    },
    "6974": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "6976": {
      "op": "SHL"
    },
    "6977": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        7022,
        7071
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6978": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        7022,
        7071
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6979": {
      "offset": [
        1433,
        1475
      ],
      "op": "PUSH20",
      "path": "22",
      "value": "0xFA712EE4788C042E2B7BB55E6CB8EC569C4530C1"
    },
    "7000": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        7022,
        7071
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "7002": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        7022,
        7071
      ],
      "op": "DUP3",
      "path": "22"
    },
    "7003": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        7022,
        7071
      ],
      "op": "ADD",
      "path": "22"
    },
    "7004": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        7022,
        7071
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "7005": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7007": {
      "op": "DUP1"
    },
    "7008": {
      "op": "MLOAD"
    },
    "7009": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7011": {
      "op": "PUSH2",
      "value": "0x21D1"
    },
    "7014": {
      "op": "DUP4"
    },
    "7015": {
      "op": "CODECOPY"
    },
    "7016": {
      "op": "DUP2"
    },
    "7017": {
      "op": "MLOAD"
    },
    "7018": {
      "op": "SWAP2"
    },
    "7019": {
      "op": "MSTORE"
    },
    "7020": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        7022,
        7071
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "7022": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        7022,
        7071
      ],
      "op": "DUP3",
      "path": "22"
    },
    "7023": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        7022,
        7071
      ],
      "op": "ADD",
      "path": "22"
    },
    "7024": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        7022,
        7071
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "7025": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        7022,
        7071
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "7027": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        7022,
        7071
      ],
      "op": "DUP2",
      "path": "22"
    },
    "7028": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        7022,
        7071
      ],
      "op": "ADD",
      "path": "22"
    },
    "7029": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        7022,
        7071
      ],
      "op": "DUP5",
      "path": "22"
    },
    "7030": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        7022,
        7071
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7031": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        7022,
        7071
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "7032": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        7022,
        7071
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7033": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        7022,
        7071
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "7034": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6996,
        7003
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "7036": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6996,
        7003
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "7037": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7039": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7041": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7043": {
      "op": "SHL"
    },
    "7044": {
      "op": "SUB"
    },
    "7045": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        7034,
        7039
      ],
      "op": "AND",
      "path": "22"
    },
    "7046": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        7034,
        7039
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "7047": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        7022,
        7049
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xD9CAED12"
    },
    "7052": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        7022,
        7049
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "7053": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        7022,
        7071
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "7055": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        7022,
        7071
      ],
      "op": "DUP1",
      "path": "22"
    },
    "7056": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        7022,
        7071
      ],
      "op": "DUP4",
      "path": "22"
    },
    "7057": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        7022,
        7071
      ],
      "op": "ADD",
      "path": "22"
    },
    "7058": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        7022,
        7071
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "7059": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        7022,
        7071
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "7061": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        7022,
        7071
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "7062": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        7022,
        7071
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "7063": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        7022,
        7071
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7064": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        7022,
        7071
      ],
      "op": "DUP3",
      "path": "22"
    },
    "7065": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        7022,
        7071
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7066": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        7022,
        7071
      ],
      "op": "SUB",
      "path": "22"
    },
    "7067": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        7022,
        7071
      ],
      "op": "ADD",
      "path": "22"
    },
    "7068": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        7022,
        7071
      ],
      "op": "DUP2",
      "path": "22"
    },
    "7069": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6996,
        7003
      ],
      "op": "DUP8",
      "path": "22"
    },
    "7070": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        7034,
        7039
      ],
      "op": "DUP8",
      "path": "22"
    },
    "7071": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        7022,
        7071
      ],
      "op": "DUP1",
      "path": "22"
    },
    "7072": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        7022,
        7071
      ],
      "op": "EXTCODESIZE",
      "path": "22"
    },
    "7073": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        7022,
        7071
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "7074": {
      "op": "DUP1"
    },
    "7075": {
      "op": "ISZERO"
    },
    "7076": {
      "op": "PUSH2",
      "value": "0x1BAC"
    },
    "7079": {
      "op": "JUMPI"
    },
    "7080": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7082": {
      "op": "DUP1"
    },
    "7083": {
      "op": "REVERT"
    },
    "7084": {
      "op": "JUMPDEST"
    },
    "7085": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        7022,
        7071
      ],
      "op": "POP",
      "path": "22"
    },
    "7086": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        7022,
        7071
      ],
      "op": "GAS",
      "path": "22"
    },
    "7087": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        7022,
        7071
      ],
      "op": "CALL",
      "path": "22"
    },
    "7088": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        7022,
        7071
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "7089": {
      "op": "DUP1"
    },
    "7090": {
      "op": "ISZERO"
    },
    "7091": {
      "op": "PUSH2",
      "value": "0x1BC0"
    },
    "7094": {
      "op": "JUMPI"
    },
    "7095": {
      "op": "RETURNDATASIZE"
    },
    "7096": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7098": {
      "op": "DUP1"
    },
    "7099": {
      "op": "RETURNDATACOPY"
    },
    "7100": {
      "op": "RETURNDATASIZE"
    },
    "7101": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7103": {
      "op": "REVERT"
    },
    "7104": {
      "op": "JUMPDEST"
    },
    "7105": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        7022,
        7071
      ],
      "op": "POP",
      "path": "22"
    },
    "7106": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        7022,
        7071
      ],
      "op": "POP",
      "path": "22"
    },
    "7107": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        7022,
        7071
      ],
      "op": "POP",
      "path": "22"
    },
    "7108": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        7022,
        7071
      ],
      "op": "POP",
      "path": "22"
    },
    "7109": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        7022,
        7071
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "7111": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        7022,
        7071
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "7112": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        7022,
        7071
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "7113": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7115": {
      "op": "DUP2"
    },
    "7116": {
      "op": "LT"
    },
    "7117": {
      "op": "ISZERO"
    },
    "7118": {
      "op": "PUSH2",
      "value": "0x1BD6"
    },
    "7121": {
      "op": "JUMPI"
    },
    "7122": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7124": {
      "op": "DUP1"
    },
    "7125": {
      "op": "REVERT"
    },
    "7126": {
      "op": "JUMPDEST"
    },
    "7127": {
      "op": "POP"
    },
    "7128": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        7022,
        7071
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "7129": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        7022,
        7071
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "7130": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6938,
        7078
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "7131": {
      "op": "POP"
    },
    "7132": {
      "op": "POP"
    },
    "7133": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "jump": "o",
      "offset": [
        6938,
        7078
      ],
      "op": "JUMP",
      "path": "22"
    },
    "7134": {
      "fn": "SafeMath.add",
      "offset": [
        834,
        1010
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7135": {
      "fn": "SafeMath.add",
      "offset": [
        892,
        899
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7137": {
      "fn": "SafeMath.add",
      "offset": [
        923,
        928
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7138": {
      "fn": "SafeMath.add",
      "offset": [
        923,
        928
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7139": {
      "fn": "SafeMath.add",
      "offset": [
        923,
        928
      ],
      "op": "ADD",
      "path": "1"
    },
    "7140": {
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 61
    },
    "7141": {
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7142": {
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "LT",
      "path": "1"
    },
    "7143": {
      "branch": 103,
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "7144": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B28"
    },
    "7147": {
      "branch": 103,
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7148": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7150": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7151": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7152": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7156": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7158": {
      "op": "SHL"
    },
    "7159": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7160": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7161": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7163": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7165": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7166": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "1"
    },
    "7167": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7168": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1B"
    },
    "7170": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "7172": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7173": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "1"
    },
    "7174": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7175": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "7208": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "7210": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7211": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "1"
    },
    "7212": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7213": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7214": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7215": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7216": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7217": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7218": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SUB",
      "path": "1"
    },
    "7219": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "7221": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "1"
    },
    "7222": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7223": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "REVERT",
      "path": "1"
    },
    "7224": {
      "fn": "SafeMath.mul",
      "offset": [
        2159,
        2618
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7225": {
      "fn": "SafeMath.mul",
      "offset": [
        2217,
        2224
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7227": {
      "branch": 104,
      "fn": "SafeMath.mul",
      "offset": [
        2458,
        2464
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7228": {
      "fn": "SafeMath.mul",
      "offset": [
        2454,
        2499
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C47"
    },
    "7231": {
      "branch": 104,
      "fn": "SafeMath.mul",
      "offset": [
        2454,
        2499
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7232": {
      "op": "POP"
    },
    "7233": {
      "fn": "SafeMath.mul",
      "offset": [
        2487,
        2488
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 62,
      "value": "0x0"
    },
    "7235": {
      "fn": "SafeMath.mul",
      "offset": [
        2480,
        2488
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B2B"
    },
    "7238": {
      "fn": "SafeMath.mul",
      "offset": [
        2480,
        2488
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7239": {
      "fn": "SafeMath.mul",
      "offset": [
        2454,
        2499
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7240": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2526
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7241": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2526
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7242": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2526
      ],
      "op": "MUL",
      "path": "1"
    },
    "7243": {
      "fn": "SafeMath.mul",
      "offset": [
        2525,
        2526
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7244": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2522
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7245": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2526
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7246": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2522
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7247": {
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 63,
      "value": "0x1C54"
    },
    "7250": {
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7251": {
      "dev": "Division by zero",
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "INVALID",
      "path": "1"
    },
    "7252": {
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7253": {
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "DIV",
      "path": "1"
    },
    "7254": {
      "branch": 105,
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2554
      ],
      "op": "EQ",
      "path": "1"
    },
    "7255": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B28"
    },
    "7258": {
      "branch": 105,
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7259": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7261": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7262": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7266": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7268": {
      "op": "SHL"
    },
    "7269": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7270": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7271": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7273": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "ADD",
      "path": "1"
    },
    "7274": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7275": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7276": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7278": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "ADD",
      "path": "1"
    },
    "7279": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7280": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7281": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SUB",
      "path": "1"
    },
    "7282": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7283": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7284": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x21"
    },
    "7286": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7287": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7288": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7290": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "ADD",
      "path": "1"
    },
    "7291": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7292": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x21F1"
    },
    "7295": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x21"
    },
    "7297": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7298": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "CODECOPY",
      "path": "1"
    },
    "7299": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7301": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "ADD",
      "path": "1"
    },
    "7302": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7303": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "POP",
      "path": "1"
    },
    "7304": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "POP",
      "path": "1"
    },
    "7305": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7307": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7308": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7309": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7310": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SUB",
      "path": "1"
    },
    "7311": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7312": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "REVERT",
      "path": "1"
    },
    "7313": {
      "fn": "SafeMath.div",
      "offset": [
        3073,
        3203
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7314": {
      "fn": "SafeMath.div",
      "offset": [
        3131,
        3138
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7316": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 64,
      "value": "0x1B28"
    },
    "7319": {
      "fn": "SafeMath.div",
      "offset": [
        3161,
        3162
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7320": {
      "fn": "SafeMath.div",
      "offset": [
        3164,
        3165
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7321": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7323": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7324": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7325": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7327": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "ADD",
      "path": "1"
    },
    "7328": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7330": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7331": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7332": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1A"
    },
    "7334": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7335": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7336": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7338": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "ADD",
      "path": "1"
    },
    "7339": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x536166654D6174683A206469766973696F6E206279207A65726F000000000000"
    },
    "7372": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7373": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7374": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "POP",
      "path": "1"
    },
    "7375": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3160
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F77"
    },
    "7378": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        3157,
        3196
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7379": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        662,
        836
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7380": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 65,
      "value": "0x40"
    },
    "7382": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7383": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7386": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7388": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7390": {
      "op": "SHL"
    },
    "7391": {
      "op": "SUB"
    },
    "7392": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7393": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "AND",
      "path": "6"
    },
    "7394": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "7396": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7397": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "ADD",
      "path": "6"
    },
    "7398": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7399": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "7401": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7402": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7403": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "ADD",
      "path": "6"
    },
    "7404": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7405": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7406": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7407": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7408": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7409": {
      "op": "DUP1"
    },
    "7410": {
      "op": "DUP4"
    },
    "7411": {
      "op": "SUB"
    },
    "7412": {
      "op": "SWAP1"
    },
    "7413": {
      "op": "SWAP2"
    },
    "7414": {
      "op": "ADD"
    },
    "7415": {
      "op": "DUP2"
    },
    "7416": {
      "op": "MSTORE"
    },
    "7417": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "7419": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7420": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7421": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "ADD",
      "path": "6"
    },
    "7422": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7423": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7424": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7425": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7427": {
      "op": "DUP2"
    },
    "7428": {
      "op": "ADD"
    },
    "7429": {
      "op": "DUP1"
    },
    "7430": {
      "op": "MLOAD"
    },
    "7431": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7433": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7435": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7437": {
      "op": "SHL"
    },
    "7438": {
      "op": "SUB"
    },
    "7439": {
      "op": "AND"
    },
    "7440": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "7445": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7447": {
      "op": "SHL"
    },
    "7448": {
      "op": "OR"
    },
    "7449": {
      "op": "SWAP1"
    },
    "7450": {
      "op": "MSTORE"
    },
    "7451": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        744,
        829
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1D25"
    },
    "7454": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        744,
        829
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7455": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        763,
        768
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7456": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        763,
        768
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7457": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        744,
        762
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1FDC"
    },
    "7460": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [
        744,
        829
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7461": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        744,
        829
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7462": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        662,
        836
      ],
      "op": "POP",
      "path": "6"
    },
    "7463": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        662,
        836
      ],
      "op": "POP",
      "path": "6"
    },
    "7464": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        662,
        836
      ],
      "op": "POP",
      "path": "6"
    },
    "7465": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "o",
      "offset": [
        662,
        836
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7466": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1050,
        1662
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7467": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1415,
        1425
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 66
    },
    "7468": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1415,
        1425
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "7469": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1415,
        1425
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7470": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1414,
        1476
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1DB0"
    },
    "7473": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1414,
        1476
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7474": {
      "op": "POP"
    },
    "7475": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7477": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7478": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7479": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "7484": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "7486": {
      "op": "SHL"
    },
    "7487": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7488": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7489": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1455,
        1459
      ],
      "op": "ADDRESS",
      "path": "6"
    },
    "7490": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "7492": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7493": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "ADD",
      "path": "6"
    },
    "7494": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7495": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7499": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7501": {
      "op": "SHL"
    },
    "7502": {
      "op": "SUB"
    },
    "7503": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7504": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7505": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "AND",
      "path": "6"
    },
    "7506": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "7508": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7509": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "ADD",
      "path": "6"
    },
    "7510": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7511": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7512": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7513": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1446
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7514": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1446
      ],
      "op": "DUP6",
      "path": "6"
    },
    "7515": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1446
      ],
      "op": "AND",
      "path": "6"
    },
    "7516": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1446
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7517": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1446
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xDD62ED3E"
    },
    "7522": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1446
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7523": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "7525": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7526": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7527": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "ADD",
      "path": "6"
    },
    "7528": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "7529": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7531": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "7532": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7533": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7534": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7535": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7536": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7537": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SUB",
      "path": "6"
    },
    "7538": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "ADD",
      "path": "6"
    },
    "7539": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7540": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1446
      ],
      "op": "DUP7",
      "path": "6"
    },
    "7541": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7542": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "7543": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "7544": {
      "op": "DUP1"
    },
    "7545": {
      "op": "ISZERO"
    },
    "7546": {
      "op": "PUSH2",
      "value": "0x1D82"
    },
    "7549": {
      "op": "JUMPI"
    },
    "7550": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7552": {
      "op": "DUP1"
    },
    "7553": {
      "op": "REVERT"
    },
    "7554": {
      "op": "JUMPDEST"
    },
    "7555": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "POP",
      "path": "6"
    },
    "7556": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "GAS",
      "path": "6"
    },
    "7557": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "STATICCALL",
      "path": "6"
    },
    "7558": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "7559": {
      "op": "DUP1"
    },
    "7560": {
      "op": "ISZERO"
    },
    "7561": {
      "op": "PUSH2",
      "value": "0x1D96"
    },
    "7564": {
      "op": "JUMPI"
    },
    "7565": {
      "op": "RETURNDATASIZE"
    },
    "7566": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7568": {
      "op": "DUP1"
    },
    "7569": {
      "op": "RETURNDATACOPY"
    },
    "7570": {
      "op": "RETURNDATASIZE"
    },
    "7571": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7573": {
      "op": "REVERT"
    },
    "7574": {
      "op": "JUMPDEST"
    },
    "7575": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "POP",
      "path": "6"
    },
    "7576": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "POP",
      "path": "6"
    },
    "7577": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "POP",
      "path": "6"
    },
    "7578": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "POP",
      "path": "6"
    },
    "7579": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7581": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7582": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "7583": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7585": {
      "op": "DUP2"
    },
    "7586": {
      "op": "LT"
    },
    "7587": {
      "op": "ISZERO"
    },
    "7588": {
      "op": "PUSH2",
      "value": "0x1DAC"
    },
    "7591": {
      "op": "JUMPI"
    },
    "7592": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7594": {
      "op": "DUP1"
    },
    "7595": {
      "op": "REVERT"
    },
    "7596": {
      "op": "JUMPDEST"
    },
    "7597": {
      "op": "POP"
    },
    "7598": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7599": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1475
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "7600": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1414,
        1476
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7601": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1DEB"
    },
    "7604": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7605": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7607": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7608": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7612": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7614": {
      "op": "SHL"
    },
    "7615": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7616": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7617": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "7619": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "ADD",
      "path": "6"
    },
    "7620": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7621": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7622": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7624": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "ADD",
      "path": "6"
    },
    "7625": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7626": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7627": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "SUB",
      "path": "6"
    },
    "7628": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7629": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7630": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x36"
    },
    "7632": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7633": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7634": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7636": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "ADD",
      "path": "6"
    },
    "7637": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7638": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x223C"
    },
    "7641": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x36"
    },
    "7643": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7644": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "CODECOPY",
      "path": "6"
    },
    "7645": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7647": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "ADD",
      "path": "6"
    },
    "7648": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7649": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "POP",
      "path": "6"
    },
    "7650": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "POP",
      "path": "6"
    },
    "7651": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7653": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7654": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7655": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7656": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "SUB",
      "path": "6"
    },
    "7657": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7658": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "REVERT",
      "path": "6"
    },
    "7659": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7660": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 67,
      "value": "0x40"
    },
    "7662": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7663": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7664": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7668": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7670": {
      "op": "SHL"
    },
    "7671": {
      "op": "SUB"
    },
    "7672": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7673": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "AND",
      "path": "6"
    },
    "7674": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "7676": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7677": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "ADD",
      "path": "6"
    },
    "7678": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7679": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "7681": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7682": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7683": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "ADD",
      "path": "6"
    },
    "7684": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7685": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7686": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7687": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7688": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7689": {
      "op": "DUP1"
    },
    "7690": {
      "op": "DUP4"
    },
    "7691": {
      "op": "SUB"
    },
    "7692": {
      "op": "SWAP1"
    },
    "7693": {
      "op": "SWAP2"
    },
    "7694": {
      "op": "ADD"
    },
    "7695": {
      "op": "DUP2"
    },
    "7696": {
      "op": "MSTORE"
    },
    "7697": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "7699": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7700": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7701": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "ADD",
      "path": "6"
    },
    "7702": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7703": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7704": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7705": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7707": {
      "op": "DUP2"
    },
    "7708": {
      "op": "ADD"
    },
    "7709": {
      "op": "DUP1"
    },
    "7710": {
      "op": "MLOAD"
    },
    "7711": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7715": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7717": {
      "op": "SHL"
    },
    "7718": {
      "op": "SUB"
    },
    "7719": {
      "op": "AND"
    },
    "7720": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "7725": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7727": {
      "op": "SHL"
    },
    "7728": {
      "op": "OR"
    },
    "7729": {
      "op": "SWAP1"
    },
    "7730": {
      "op": "MSTORE"
    },
    "7731": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1566,
        1655
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1D25"
    },
    "7734": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1566,
        1655
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7735": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1585,
        1590
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7736": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1585,
        1590
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7737": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1566,
        1584
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1FDC"
    },
    "7740": {
      "fn": "SafeERC20.safeApprove",
      "jump": "i",
      "offset": [
        1566,
        1655
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7741": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5206,
        5299
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "7742": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5261,
        5266
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 68,
      "value": "0x3"
    },
    "7744": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5261,
        5266
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "7745": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5249,
        5292
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "7747": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5249,
        5292
      ],
      "op": "DUP1",
      "path": "22"
    },
    "7748": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5249,
        5292
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "7749": {
      "op": "PUSH4",
      "value": "0x1395C59"
    },
    "7754": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "7756": {
      "op": "SHL"
    },
    "7757": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5249,
        5292
      ],
      "op": "DUP2",
      "path": "22"
    },
    "7758": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5249,
        5292
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "7759": {
      "offset": [
        1433,
        1475
      ],
      "op": "PUSH20",
      "path": "22",
      "value": "0xFA712EE4788C042E2B7BB55E6CB8EC569C4530C1"
    },
    "7780": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5249,
        5292
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "7782": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5249,
        5292
      ],
      "op": "DUP3",
      "path": "22"
    },
    "7783": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5249,
        5292
      ],
      "op": "ADD",
      "path": "22"
    },
    "7784": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5249,
        5292
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "7785": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7787": {
      "op": "DUP1"
    },
    "7788": {
      "op": "MLOAD"
    },
    "7789": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7791": {
      "op": "PUSH2",
      "value": "0x21D1"
    },
    "7794": {
      "op": "DUP4"
    },
    "7795": {
      "op": "CODECOPY"
    },
    "7796": {
      "op": "DUP2"
    },
    "7797": {
      "op": "MLOAD"
    },
    "7798": {
      "op": "SWAP2"
    },
    "7799": {
      "op": "MSTORE"
    },
    "7800": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5249,
        5292
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "7802": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5249,
        5292
      ],
      "op": "DUP3",
      "path": "22"
    },
    "7803": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5249,
        5292
      ],
      "op": "ADD",
      "path": "22"
    },
    "7804": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5249,
        5292
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "7805": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5249,
        5292
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7806": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5249,
        5292
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "7807": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7809": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7811": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7813": {
      "op": "SHL"
    },
    "7814": {
      "op": "SUB"
    },
    "7815": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5261,
        5266
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7816": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5261,
        5266
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "7817": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5261,
        5266
      ],
      "op": "AND",
      "path": "22"
    },
    "7818": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5261,
        5266
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "7819": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5249,
        5279
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x9CAE2C8"
    },
    "7824": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5249,
        5279
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "7825": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5249,
        5292
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "7827": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5249,
        5292
      ],
      "op": "DUP1",
      "path": "22"
    },
    "7828": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5249,
        5292
      ],
      "op": "DUP3",
      "path": "22"
    },
    "7829": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5249,
        5292
      ],
      "op": "ADD",
      "path": "22"
    },
    "7830": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5249,
        5292
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "7831": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5249,
        5292
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "7833": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5249,
        5292
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "7834": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5249,
        5292
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7835": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5249,
        5292
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "7836": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5249,
        5292
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7837": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5249,
        5292
      ],
      "op": "DUP3",
      "path": "22"
    },
    "7838": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5249,
        5292
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7839": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5249,
        5292
      ],
      "op": "SUB",
      "path": "22"
    },
    "7840": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5249,
        5292
      ],
      "op": "ADD",
      "path": "22"
    },
    "7841": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5249,
        5292
      ],
      "op": "DUP2",
      "path": "22"
    },
    "7842": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5261,
        5266
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "7844": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5261,
        5266
      ],
      "op": "DUP8",
      "path": "22"
    },
    "7845": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5249,
        5292
      ],
      "op": "DUP1",
      "path": "22"
    },
    "7846": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5249,
        5292
      ],
      "op": "EXTCODESIZE",
      "path": "22"
    },
    "7847": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5249,
        5292
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "7848": {
      "op": "DUP1"
    },
    "7849": {
      "op": "ISZERO"
    },
    "7850": {
      "op": "PUSH2",
      "value": "0x1EB2"
    },
    "7853": {
      "op": "JUMPI"
    },
    "7854": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7856": {
      "op": "DUP1"
    },
    "7857": {
      "op": "REVERT"
    },
    "7858": {
      "op": "JUMPDEST"
    },
    "7859": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5249,
        5292
      ],
      "op": "POP",
      "path": "22"
    },
    "7860": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5249,
        5292
      ],
      "op": "GAS",
      "path": "22"
    },
    "7861": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5249,
        5292
      ],
      "op": "CALL",
      "path": "22"
    },
    "7862": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5249,
        5292
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "7863": {
      "op": "DUP1"
    },
    "7864": {
      "op": "ISZERO"
    },
    "7865": {
      "op": "PUSH2",
      "value": "0x1EC6"
    },
    "7868": {
      "op": "JUMPI"
    },
    "7869": {
      "op": "RETURNDATASIZE"
    },
    "7870": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7872": {
      "op": "DUP1"
    },
    "7873": {
      "op": "RETURNDATACOPY"
    },
    "7874": {
      "op": "RETURNDATASIZE"
    },
    "7875": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7877": {
      "op": "REVERT"
    },
    "7878": {
      "op": "JUMPDEST"
    },
    "7879": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5249,
        5292
      ],
      "op": "POP",
      "path": "22"
    },
    "7880": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5249,
        5292
      ],
      "op": "POP",
      "path": "22"
    },
    "7881": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5249,
        5292
      ],
      "op": "POP",
      "path": "22"
    },
    "7882": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5249,
        5292
      ],
      "op": "POP",
      "path": "22"
    },
    "7883": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5249,
        5292
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "7885": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5249,
        5292
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "7886": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5249,
        5292
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "7887": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7889": {
      "op": "DUP2"
    },
    "7890": {
      "op": "LT"
    },
    "7891": {
      "op": "ISZERO"
    },
    "7892": {
      "op": "PUSH2",
      "value": "0x1EDC"
    },
    "7895": {
      "op": "JUMPI"
    },
    "7896": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7898": {
      "op": "DUP1"
    },
    "7899": {
      "op": "REVERT"
    },
    "7900": {
      "op": "JUMPDEST"
    },
    "7901": {
      "op": "POP"
    },
    "7902": {
      "op": "POP"
    },
    "7903": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "jump": "o",
      "offset": [
        5206,
        5299
      ],
      "op": "JUMP",
      "path": "22"
    },
    "7904": {
      "fn": "SafeMath.sub",
      "offset": [
        1732,
        1919
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7905": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1825
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7907": {
      "fn": "SafeMath.sub",
      "offset": [
        1853,
        1865
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 69
    },
    "7908": {
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7909": {
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7910": {
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "GT",
      "path": "1"
    },
    "7911": {
      "branch": 106,
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "7912": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F6F"
    },
    "7915": {
      "branch": 106,
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7916": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7918": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7919": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7923": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7925": {
      "op": "SHL"
    },
    "7926": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7927": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7928": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7930": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "7931": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7932": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7933": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7935": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "7936": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7937": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7938": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "1"
    },
    "7939": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7940": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7941": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7942": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7943": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7944": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7945": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7946": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7947": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7949": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "7950": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7951": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "7952": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7953": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7954": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7955": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7957": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "7958": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7959": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7960": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7961": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7962": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7964": {
      "op": "JUMPDEST"
    },
    "7965": {
      "op": "DUP4"
    },
    "7966": {
      "op": "DUP2"
    },
    "7967": {
      "op": "LT"
    },
    "7968": {
      "op": "ISZERO"
    },
    "7969": {
      "op": "PUSH2",
      "value": "0x1F34"
    },
    "7972": {
      "op": "JUMPI"
    },
    "7973": {
      "op": "DUP2"
    },
    "7974": {
      "op": "DUP2"
    },
    "7975": {
      "op": "ADD"
    },
    "7976": {
      "op": "MLOAD"
    },
    "7977": {
      "op": "DUP4"
    },
    "7978": {
      "op": "DUP3"
    },
    "7979": {
      "op": "ADD"
    },
    "7980": {
      "op": "MSTORE"
    },
    "7981": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7983": {
      "op": "ADD"
    },
    "7984": {
      "op": "PUSH2",
      "value": "0x1F1C"
    },
    "7987": {
      "op": "JUMP"
    },
    "7988": {
      "op": "JUMPDEST"
    },
    "7989": {
      "op": "POP"
    },
    "7990": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "7991": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "7992": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "7993": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7994": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "7995": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7996": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7997": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "7998": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7999": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "8001": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "AND",
      "path": "1"
    },
    "8002": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8003": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8004": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F61"
    },
    "8007": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8008": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8009": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8010": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "1"
    },
    "8011": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8012": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8013": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "8015": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8016": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8018": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "1"
    },
    "8019": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "8022": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "EXP",
      "path": "1"
    },
    "8023": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "1"
    },
    "8024": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "NOT",
      "path": "1"
    },
    "8025": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "AND",
      "path": "1"
    },
    "8026": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8027": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8028": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8030": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "8031": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8032": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "8033": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8034": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "8035": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "8036": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "8037": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "8038": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "8039": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8041": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8042": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8043": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8044": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "1"
    },
    "8045": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8046": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "REVERT",
      "path": "1"
    },
    "8047": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8048": {
      "op": "POP"
    },
    "8049": {
      "op": "POP"
    },
    "8050": {
      "op": "POP"
    },
    "8051": {
      "fn": "SafeMath.sub",
      "offset": [
        1888,
        1893
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8052": {
      "fn": "SafeMath.sub",
      "offset": [
        1888,
        1893
      ],
      "op": "SUB",
      "path": "1"
    },
    "8053": {
      "fn": "SafeMath.sub",
      "offset": [
        1888,
        1893
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8054": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1732,
        1919
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8055": {
      "fn": "SafeMath.div",
      "offset": [
        3718,
        4056
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8056": {
      "fn": "SafeMath.div",
      "offset": [
        3804,
        3811
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8058": {
      "fn": "SafeMath.div",
      "offset": [
        3904,
        3916
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 70
    },
    "8059": {
      "branch": 107,
      "fn": "SafeMath.div",
      "offset": [
        3897,
        3902
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8060": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1FC6"
    },
    "8063": {
      "branch": 107,
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8064": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8066": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8067": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8071": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8073": {
      "op": "SHL"
    },
    "8074": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8075": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8076": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8078": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8080": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8081": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "ADD",
      "path": "1"
    },
    "8082": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8083": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8084": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8085": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8086": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8087": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "8089": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP5",
      "path": "1"
    },
    "8090": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "ADD",
      "path": "1"
    },
    "8091": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8092": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8093": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8094": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8095": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "8096": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8097": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "8098": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "8100": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8101": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8102": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "ADD",
      "path": "1"
    },
    "8103": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8104": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8105": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP6",
      "path": "1"
    },
    "8106": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "ADD",
      "path": "1"
    },
    "8107": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8108": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8109": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8110": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8111": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8113": {
      "op": "DUP4"
    },
    "8114": {
      "op": "ISZERO"
    },
    "8115": {
      "op": "PUSH2",
      "value": "0x1F34"
    },
    "8118": {
      "op": "JUMPI"
    },
    "8119": {
      "op": "DUP2"
    },
    "8120": {
      "op": "DUP2"
    },
    "8121": {
      "op": "ADD"
    },
    "8122": {
      "op": "MLOAD"
    },
    "8123": {
      "op": "DUP4"
    },
    "8124": {
      "op": "DUP3"
    },
    "8125": {
      "op": "ADD"
    },
    "8126": {
      "op": "MSTORE"
    },
    "8127": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8129": {
      "op": "ADD"
    },
    "8130": {
      "op": "PUSH2",
      "value": "0x1F1C"
    },
    "8133": {
      "op": "JUMP"
    },
    "8134": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8135": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "POP",
      "path": "1"
    },
    "8136": {
      "fn": "SafeMath.div",
      "offset": [
        3927,
        3936
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8138": {
      "fn": "SafeMath.div",
      "offset": [
        3943,
        3944
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8139": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3940
      ],
      "op": "DUP6",
      "path": "1"
    },
    "8140": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8141": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1FD2"
    },
    "8144": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8145": {
      "dev": "Division by zero",
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "INVALID",
      "path": "1"
    },
    "8146": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8147": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "DIV",
      "path": "1"
    },
    "8148": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "8149": {
      "fn": "SafeMath.div",
      "offset": [
        3718,
        4056
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "8150": {
      "op": "POP"
    },
    "8151": {
      "op": "POP"
    },
    "8152": {
      "op": "POP"
    },
    "8153": {
      "op": "POP"
    },
    "8154": {
      "op": "POP"
    },
    "8155": {
      "fn": "SafeMath.div",
      "jump": "o",
      "offset": [
        3718,
        4056
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8156": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        2666,
        3761
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8157": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3261,
        3288
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 71,
      "value": "0x1FEE"
    },
    "8160": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3269,
        3274
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8161": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8165": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8167": {
      "op": "SHL"
    },
    "8168": {
      "op": "SUB"
    },
    "8169": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3261,
        3286
      ],
      "op": "AND",
      "path": "6"
    },
    "8170": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3261,
        3286
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2194"
    },
    "8173": {
      "fn": "SafeERC20.callOptionalReturn",
      "jump": "i",
      "offset": [
        3261,
        3288
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8174": {
      "branch": 99,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3261,
        3288
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8175": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x203F"
    },
    "8178": {
      "branch": 99,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "8179": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8181": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8182": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8183": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8187": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8189": {
      "op": "SHL"
    },
    "8190": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8191": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8192": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8194": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "8196": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8197": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "ADD",
      "path": "6"
    },
    "8198": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8199": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "8201": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "8203": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8204": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "ADD",
      "path": "6"
    },
    "8205": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8206": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400"
    },
    "8239": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "8241": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8242": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "ADD",
      "path": "6"
    },
    "8243": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8244": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8245": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8246": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8247": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8248": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8249": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "SUB",
      "path": "6"
    },
    "8250": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "8252": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "ADD",
      "path": "6"
    },
    "8253": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8254": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "REVERT",
      "path": "6"
    },
    "8255": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8256": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3395,
        3407
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8258": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3409,
        3432
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "8260": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3444,
        3449
      ],
      "op": "DUP4",
      "path": "6"
    },
    "8261": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8265": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8267": {
      "op": "SHL"
    },
    "8268": {
      "op": "SUB"
    },
    "8269": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3455
      ],
      "op": "AND",
      "path": "6"
    },
    "8270": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3456,
        3460
      ],
      "op": "DUP4",
      "path": "6"
    },
    "8271": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8273": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8274": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8275": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8276": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8277": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8278": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8279": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8281": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "ADD",
      "path": "6"
    },
    "8282": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8283": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8284": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP4",
      "path": "6"
    },
    "8285": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP4",
      "path": "6"
    },
    "8286": {
      "op": "JUMPDEST"
    },
    "8287": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8289": {
      "op": "DUP4"
    },
    "8290": {
      "op": "LT"
    },
    "8291": {
      "op": "PUSH2",
      "value": "0x207D"
    },
    "8294": {
      "op": "JUMPI"
    },
    "8295": {
      "op": "DUP1"
    },
    "8296": {
      "op": "MLOAD"
    },
    "8297": {
      "op": "DUP3"
    },
    "8298": {
      "op": "MSTORE"
    },
    "8299": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8301": {
      "op": "NOT"
    },
    "8302": {
      "op": "SWAP1"
    },
    "8303": {
      "op": "SWAP3"
    },
    "8304": {
      "op": "ADD"
    },
    "8305": {
      "op": "SWAP2"
    },
    "8306": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8308": {
      "op": "SWAP2"
    },
    "8309": {
      "op": "DUP3"
    },
    "8310": {
      "op": "ADD"
    },
    "8311": {
      "op": "SWAP2"
    },
    "8312": {
      "op": "ADD"
    },
    "8313": {
      "op": "PUSH2",
      "value": "0x205E"
    },
    "8316": {
      "op": "JUMP"
    },
    "8317": {
      "op": "JUMPDEST"
    },
    "8318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8320": {
      "op": "DUP4"
    },
    "8321": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8323": {
      "op": "SUB"
    },
    "8324": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "8327": {
      "op": "EXP"
    },
    "8328": {
      "op": "SUB"
    },
    "8329": {
      "op": "DUP1"
    },
    "8330": {
      "op": "NOT"
    },
    "8331": {
      "op": "DUP3"
    },
    "8332": {
      "op": "MLOAD"
    },
    "8333": {
      "op": "AND"
    },
    "8334": {
      "op": "DUP2"
    },
    "8335": {
      "op": "DUP5"
    },
    "8336": {
      "op": "MLOAD"
    },
    "8337": {
      "op": "AND"
    },
    "8338": {
      "op": "DUP1"
    },
    "8339": {
      "op": "DUP3"
    },
    "8340": {
      "op": "OR"
    },
    "8341": {
      "op": "DUP6"
    },
    "8342": {
      "op": "MSTORE"
    },
    "8343": {
      "op": "POP"
    },
    "8344": {
      "op": "POP"
    },
    "8345": {
      "op": "POP"
    },
    "8346": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "8347": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "8348": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "8349": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8350": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "8351": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "ADD",
      "path": "6"
    },
    "8352": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8353": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "8354": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "8355": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8357": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8359": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8360": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8361": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP4",
      "path": "6"
    },
    "8362": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SUB",
      "path": "6"
    },
    "8363": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8364": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8366": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP7",
      "path": "6"
    },
    "8367": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "GAS",
      "path": "6"
    },
    "8368": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "CALL",
      "path": "6"
    },
    "8369": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8370": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "8371": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "8372": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "8373": {
      "op": "DUP1"
    },
    "8374": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8376": {
      "op": "DUP2"
    },
    "8377": {
      "op": "EQ"
    },
    "8378": {
      "op": "PUSH2",
      "value": "0x20DF"
    },
    "8381": {
      "op": "JUMPI"
    },
    "8382": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8384": {
      "op": "MLOAD"
    },
    "8385": {
      "op": "SWAP2"
    },
    "8386": {
      "op": "POP"
    },
    "8387": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8389": {
      "op": "NOT"
    },
    "8390": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "8392": {
      "op": "RETURNDATASIZE"
    },
    "8393": {
      "op": "ADD"
    },
    "8394": {
      "op": "AND"
    },
    "8395": {
      "op": "DUP3"
    },
    "8396": {
      "op": "ADD"
    },
    "8397": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8399": {
      "op": "MSTORE"
    },
    "8400": {
      "op": "RETURNDATASIZE"
    },
    "8401": {
      "op": "DUP3"
    },
    "8402": {
      "op": "MSTORE"
    },
    "8403": {
      "op": "RETURNDATASIZE"
    },
    "8404": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8406": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8408": {
      "op": "DUP5"
    },
    "8409": {
      "op": "ADD"
    },
    "8410": {
      "op": "RETURNDATACOPY"
    },
    "8411": {
      "op": "PUSH2",
      "value": "0x20E4"
    },
    "8414": {
      "op": "JUMP"
    },
    "8415": {
      "op": "JUMPDEST"
    },
    "8416": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8418": {
      "op": "SWAP2"
    },
    "8419": {
      "op": "POP"
    },
    "8420": {
      "op": "JUMPDEST"
    },
    "8421": {
      "op": "POP"
    },
    "8422": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3394,
        3461
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8423": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3394,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "8424": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3394,
        3461
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8425": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3394,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "8426": {
      "branch": 100,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3479,
        3486
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 72
    },
    "8427": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x213B"
    },
    "8430": {
      "branch": 100,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "8431": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8433": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8434": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8435": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8439": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8441": {
      "op": "SHL"
    },
    "8442": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8443": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8444": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8446": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "8448": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8449": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "ADD",
      "path": "6"
    },
    "8450": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8451": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8452": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8453": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "8455": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8456": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "ADD",
      "path": "6"
    },
    "8457": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8458": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "8491": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "8493": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8494": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "ADD",
      "path": "6"
    },
    "8495": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8496": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8497": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8498": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8499": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8500": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8501": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SUB",
      "path": "6"
    },
    "8502": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "8504": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "ADD",
      "path": "6"
    },
    "8505": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8506": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "REVERT",
      "path": "6"
    },
    "8507": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8508": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3538,
        3555
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8509": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3538,
        3555
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8510": {
      "branch": 101,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3538,
        3559
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "8511": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3534,
        3755
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x866"
    },
    "8514": {
      "branch": 101,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3534,
        3755
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "8515": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3678,
        3688
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 73
    },
    "8516": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8517": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8519": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "ADD",
      "path": "6"
    },
    "8520": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8521": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8522": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8524": {
      "op": "DUP2"
    },
    "8525": {
      "op": "LT"
    },
    "8526": {
      "op": "ISZERO"
    },
    "8527": {
      "op": "PUSH2",
      "value": "0x2157"
    },
    "8530": {
      "op": "JUMPI"
    },
    "8531": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8533": {
      "op": "DUP1"
    },
    "8534": {
      "op": "REVERT"
    },
    "8535": {
      "op": "JUMPDEST"
    },
    "8536": {
      "op": "POP"
    },
    "8537": {
      "branch": 102,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8538": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x866"
    },
    "8541": {
      "branch": 102,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "8542": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8544": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8545": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8549": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8551": {
      "op": "SHL"
    },
    "8552": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8553": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8554": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "8556": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "ADD",
      "path": "6"
    },
    "8557": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8558": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8559": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8561": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "ADD",
      "path": "6"
    },
    "8562": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8563": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8564": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SUB",
      "path": "6"
    },
    "8565": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8566": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8567": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2A"
    },
    "8569": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8570": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8571": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8573": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "ADD",
      "path": "6"
    },
    "8574": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8575": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2212"
    },
    "8578": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2A"
    },
    "8580": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8581": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "CODECOPY",
      "path": "6"
    },
    "8582": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8584": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "ADD",
      "path": "6"
    },
    "8585": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8586": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "POP",
      "path": "6"
    },
    "8587": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "POP",
      "path": "6"
    },
    "8588": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8590": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8591": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8592": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8593": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SUB",
      "path": "6"
    },
    "8594": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8595": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "REVERT",
      "path": "6"
    },
    "8596": {
      "fn": "Address.isContract",
      "offset": [
        686,
        1296
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8597": {
      "fn": "Address.isContract",
      "offset": [
        746,
        750
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "8599": {
      "fn": "Address.isContract",
      "offset": [
        1207,
        1227
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8600": {
      "fn": "Address.isContract",
      "offset": [
        1207,
        1227
      ],
      "op": "EXTCODEHASH",
      "path": "7"
    },
    "8601": {
      "fn": "Address.isContract",
      "offset": [
        1052,
        1118
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470"
    },
    "8634": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 74
    },
    "8635": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8636": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "EQ",
      "path": "7"
    },
    "8637": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "DUP1",
      "path": "7"
    },
    "8638": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "8639": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8640": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1288
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x21C8"
    },
    "8643": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1288
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "8644": {
      "op": "POP"
    },
    "8645": {
      "fn": "Address.isContract",
      "offset": [
        1273,
        1288
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8646": {
      "fn": "Address.isContract",
      "offset": [
        1273,
        1288
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "8647": {
      "fn": "Address.isContract",
      "offset": [
        1273,
        1288
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "8648": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1288
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8649": {
      "fn": "Address.isContract",
      "offset": [
        1238,
        1289
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "8650": {
      "fn": "Address.isContract",
      "offset": [
        686,
        1296
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "8651": {
      "op": "POP"
    },
    "8652": {
      "op": "POP"
    },
    "8653": {
      "op": "POP"
    },
    "8654": {
      "op": "POP"
    },
    "8655": {
      "fn": "Address.isContract",
      "jump": "o",
      "offset": [
        686,
        1296
      ],
      "op": "JUMP",
      "path": "7"
    }
  },
  "sha1": "282e950460bf17147b6a42319a138f885f7d926f",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.5.17;\n\nimport \"@openzeppelinV2/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelinV2/contracts/math/SafeMath.sol\";\nimport \"@openzeppelinV2/contracts/utils/Address.sol\";\nimport \"@openzeppelinV2/contracts/token/ERC20/SafeERC20.sol\";\n\nimport \"../../interfaces/yearn/IController.sol\";\nimport \"../../interfaces/curve/Gauge.sol\";\nimport \"../../interfaces/curve/Mintr.sol\";\nimport \"../../interfaces/uniswap/Uni.sol\";\nimport \"../../interfaces/curve/Curve.sol\";\nimport \"../../interfaces/yearn/IToken.sol\";\nimport \"../../interfaces/yearn/IVoterProxy.sol\";\n\ncontract StrategyCurveYVoterProxy {\n    using SafeERC20 for IERC20;\n    using Address for address;\n    using SafeMath for uint256;\n\n    address public constant want = address(0xdF5e0e81Dff6FAF3A7e52BA697820c5e32D806A8);\n    address public constant crv = address(0xD533a949740bb3306d119CC777fa900bA034cd52);\n    address public constant uni = address(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\n    address public constant weth = address(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2); // used for crv <> weth <> dai route\n\n    address public constant dai = address(0x6B175474E89094C44Da98b954EedeAC495271d0F);\n    address public constant ydai = address(0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01);\n    address public constant curve = address(0x45F783CCE6B7FF23B2ab2D70e416cdb7D6055f51);\n\n    address public constant gauge = address(0xFA712EE4788C042e2B7BB55E6cb8ec569C4530c1);\n    address public constant voter = address(0xF147b8125d2ef93FB6965Db97D6746952a133934);\n\n    uint256 public keepCRV = 1000;\n    uint256 public constant keepCRVMax = 10000;\n\n    uint256 public performanceFee = 500;\n    uint256 public constant performanceMax = 10000;\n\n    uint256 public withdrawalFee = 50;\n    uint256 public constant withdrawalMax = 10000;\n\n    address public proxy;\n\n    address public governance;\n    address public controller;\n    address public strategist;\n\n    uint256 public earned; // lifetime strategy earnings denominated in `want` token\n\n    event Harvested(uint256 wantEarned, uint256 lifetimeEarned);\n\n    constructor(address _controller) public {\n        governance = msg.sender;\n        strategist = msg.sender;\n        controller = _controller;\n    }\n\n    function getName() external pure returns (string memory) {\n        return \"StrategyCurveYVoterProxy\";\n    }\n\n    function setStrategist(address _strategist) external {\n        require(msg.sender == governance, \"!governance\");\n        strategist = _strategist;\n    }\n\n    function setKeepCRV(uint256 _keepCRV) external {\n        require(msg.sender == governance, \"!governance\");\n        keepCRV = _keepCRV;\n    }\n\n    function setWithdrawalFee(uint256 _withdrawalFee) external {\n        require(msg.sender == governance, \"!governance\");\n        withdrawalFee = _withdrawalFee;\n    }\n\n    function setPerformanceFee(uint256 _performanceFee) external {\n        require(msg.sender == governance, \"!governance\");\n        performanceFee = _performanceFee;\n    }\n\n    function setProxy(address _proxy) external {\n        require(msg.sender == governance, \"!governance\");\n        proxy = _proxy;\n    }\n\n    function deposit() public {\n        uint256 _want = IERC20(want).balanceOf(address(this));\n        if (_want > 0) {\n            IERC20(want).safeTransfer(proxy, _want);\n            IVoterProxy(proxy).deposit(gauge, want);\n        }\n    }\n\n    // Controller only function for creating additional rewards from dust\n    function withdraw(IERC20 _asset) external returns (uint256 balance) {\n        require(msg.sender == controller, \"!controller\");\n        require(want != address(_asset), \"want\");\n        require(crv != address(_asset), \"crv\");\n        require(ydai != address(_asset), \"ydai\");\n        require(dai != address(_asset), \"dai\");\n        balance = _asset.balanceOf(address(this));\n        _asset.safeTransfer(controller, balance);\n    }\n\n    // Withdraw partial funds, normally used with a vault withdrawal\n    function withdraw(uint256 _amount) external {\n        require(msg.sender == controller, \"!controller\");\n        uint256 _balance = IERC20(want).balanceOf(address(this));\n        if (_balance < _amount) {\n            _amount = _withdrawSome(_amount.sub(_balance));\n            _amount = _amount.add(_balance);\n        }\n\n        uint256 _fee = _amount.mul(withdrawalFee).div(withdrawalMax);\n\n        IERC20(want).safeTransfer(IController(controller).rewards(), _fee);\n        address _vault = IController(controller).vaults(address(want));\n        require(_vault != address(0), \"!vault\"); // additional protection so we don't burn the funds\n\n        IERC20(want).safeTransfer(_vault, _amount.sub(_fee));\n    }\n\n    // Withdraw all funds, normally used when migrating strategies\n    function withdrawAll() external returns (uint256 balance) {\n        require(msg.sender == controller, \"!controller\");\n        _withdrawAll();\n\n        balance = IERC20(want).balanceOf(address(this));\n\n        address _vault = IController(controller).vaults(address(want));\n        require(_vault != address(0), \"!vault\"); // additional protection so we don't burn the funds\n        IERC20(want).safeTransfer(_vault, balance);\n    }\n\n    function _withdrawAll() internal {\n        IVoterProxy(proxy).withdrawAll(gauge, want);\n    }\n\n    function harvest() public {\n        require(msg.sender == strategist || msg.sender == governance, \"!authorized\");\n        IVoterProxy(proxy).harvest(gauge);\n        uint256 _crv = IERC20(crv).balanceOf(address(this));\n        if (_crv > 0) {\n            uint256 _keepCRV = _crv.mul(keepCRV).div(keepCRVMax);\n            IERC20(crv).safeTransfer(voter, _keepCRV);\n            _crv = _crv.sub(_keepCRV);\n\n            IERC20(crv).safeApprove(uni, 0);\n            IERC20(crv).safeApprove(uni, _crv);\n\n            address[] memory path = new address[](3);\n            path[0] = crv;\n            path[1] = weth;\n            path[2] = dai;\n\n            Uni(uni).swapExactTokensForTokens(_crv, uint256(0), path, address(this), now.add(1800));\n        }\n        uint256 _dai = IERC20(dai).balanceOf(address(this));\n        if (_dai > 0) {\n            IERC20(dai).safeApprove(ydai, 0);\n            IERC20(dai).safeApprove(ydai, _dai);\n            yERC20(ydai).deposit(_dai);\n        }\n        uint256 _ydai = IERC20(ydai).balanceOf(address(this));\n        if (_ydai > 0) {\n            IERC20(ydai).safeApprove(curve, 0);\n            IERC20(ydai).safeApprove(curve, _ydai);\n            ICurveFi(curve).add_liquidity([_ydai, 0, 0, 0], 0);\n        }\n        uint256 _want = IERC20(want).balanceOf(address(this));\n        if (_want > 0) {\n            uint256 _fee = _want.mul(performanceFee).div(performanceMax);\n            IERC20(want).safeTransfer(IController(controller).rewards(), _fee);\n            deposit();\n        }\n        IVoterProxy(proxy).lock();\n        earned = earned.add(_want);\n        emit Harvested(_want, earned);\n    }\n\n    function _withdrawSome(uint256 _amount) internal returns (uint256) {\n        return IVoterProxy(proxy).withdraw(gauge, want, _amount);\n    }\n\n    function balanceOfWant() public view returns (uint256) {\n        return IERC20(want).balanceOf(address(this));\n    }\n\n    function balanceOfPool() public view returns (uint256) {\n        return IVoterProxy(proxy).balanceOf(gauge);\n    }\n\n    function balanceOf() public view returns (uint256) {\n        return balanceOfWant().add(balanceOfPool());\n    }\n\n    function setGovernance(address _governance) external {\n        require(msg.sender == governance, \"!governance\");\n        governance = _governance;\n    }\n\n    function setController(address _controller) external {\n        require(msg.sender == governance, \"!governance\");\n        controller = _controller;\n    }\n}\n",
  "sourceMap": "604:7151:22:-;;;1597:4;1572:29;;1688:3;1656:35;;1781:2;1750:33;;2114:147;8:9:-1;5:2;;;30:1;27;20:12;5:2;2114:147:22;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2114:147:22;2164:10;:23;;2177:10;-1:-1:-1;;;;;;2164:23:22;;;;;;;;2197:10;:23;;;;;;;;;;2230:10;:24;;;;;-1:-1:-1;;;;;2230:24:22;;;;;;;;;604:7151;;;-1:-1:-1;604:7151:22;;",
  "sourcePath": "contracts/strategies/StrategyCurveYVoterProxy.sol",
  "type": "contract"
}