{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_controller",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wantEarned",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lifetimeEarned",
          "type": "uint256"
        }
      ],
      "name": "Harvested",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "FEE_DENOMINATOR",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "balanceOfPool",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "balanceOfWant",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "controller",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "crv",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "curve",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "dex",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "earned",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "eurs",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "gauge",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "governance",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "harvest",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "keepCRV",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "keeper",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "proxy",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_controller",
          "type": "address"
        }
      ],
      "name": "setController",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_governance",
          "type": "address"
        }
      ],
      "name": "setGovernance",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_keepCRV",
          "type": "uint256"
        }
      ],
      "name": "setKeepCRV",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_keeper",
          "type": "address"
        }
      ],
      "name": "setKeeper",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_proxy",
          "type": "address"
        }
      ],
      "name": "setProxy",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_strategist",
          "type": "address"
        }
      ],
      "name": "setStrategist",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_strategistReward",
          "type": "uint256"
        }
      ],
      "name": "setStrategistReward",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_treasuryFee",
          "type": "uint256"
        }
      ],
      "name": "setTreasuryFee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_withdrawalFee",
          "type": "uint256"
        }
      ],
      "name": "setWithdrawalFee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "strategist",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "strategistReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "treasuryFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "usdc",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "voter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "want",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "weth",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawAll",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "withdrawalFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/math/SafeMath.sol",
    "20": "contracts/strategies/StrategyCurveEURVoterProxy.sol",
    "5": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/token/ERC20/IERC20.sol",
    "51": "interfaces/curve/Curve.sol",
    "6": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/token/ERC20/SafeERC20.sol",
    "60": "interfaces/uniswap/Uni.sol",
    "62": "interfaces/yearn/IController.sol",
    "7": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/utils/Address.sol",
    "71": "interfaces/yearn/IVoterProxy.sol"
  },
  "ast": {
    "absolutePath": "contracts/strategies/StrategyCurveEURVoterProxy.sol",
    "exportedSymbols": {
      "StrategyCurveEURVoterProxy": [
        8740
      ]
    },
    "id": 8741,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7851,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "38:24:20"
      },
      {
        "absolutePath": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelinV2/contracts/token/ERC20/IERC20.sol",
        "id": 7852,
        "nodeType": "ImportDirective",
        "scope": 8741,
        "sourceUnit": 30956,
        "src": "64:58:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/math/SafeMath.sol",
        "file": "@openzeppelinV2/contracts/math/SafeMath.sol",
        "id": 7853,
        "nodeType": "ImportDirective",
        "scope": 8741,
        "sourceUnit": 30887,
        "src": "123:53:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/utils/Address.sol",
        "file": "@openzeppelinV2/contracts/utils/Address.sol",
        "id": 7854,
        "nodeType": "ImportDirective",
        "scope": 8741,
        "sourceUnit": 31251,
        "src": "177:53:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/token/ERC20/SafeERC20.sol",
        "file": "@openzeppelinV2/contracts/token/ERC20/SafeERC20.sol",
        "id": 7855,
        "nodeType": "ImportDirective",
        "scope": 8741,
        "sourceUnit": 31176,
        "src": "231:61:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/yearn/IController.sol",
        "file": "../../interfaces/yearn/IController.sol",
        "id": 7856,
        "nodeType": "ImportDirective",
        "scope": 8741,
        "sourceUnit": 31645,
        "src": "294:48:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/curve/Gauge.sol",
        "file": "../../interfaces/curve/Gauge.sol",
        "id": 7857,
        "nodeType": "ImportDirective",
        "scope": 8741,
        "sourceUnit": 31891,
        "src": "343:42:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/curve/Mintr.sol",
        "file": "../../interfaces/curve/Mintr.sol",
        "id": 7858,
        "nodeType": "ImportDirective",
        "scope": 8741,
        "sourceUnit": 31899,
        "src": "386:42:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/uniswap/Uni.sol",
        "file": "../../interfaces/uniswap/Uni.sol",
        "id": 7859,
        "nodeType": "ImportDirective",
        "scope": 8741,
        "sourceUnit": 31934,
        "src": "429:42:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/curve/Curve.sol",
        "file": "../../interfaces/curve/Curve.sol",
        "id": 7860,
        "nodeType": "ImportDirective",
        "scope": 8741,
        "sourceUnit": 31854,
        "src": "472:42:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/yearn/IVoterProxy.sol",
        "file": "../../interfaces/yearn/IVoterProxy.sol",
        "id": 7861,
        "nodeType": "ImportDirective",
        "scope": 8741,
        "sourceUnit": 32060,
        "src": "515:48:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 8740,
        "linearizedBaseContracts": [
          8740
        ],
        "name": "StrategyCurveEURVoterProxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 7864,
            "libraryName": {
              "contractScope": null,
              "id": 7862,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 31175,
              "src": "613:9:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$31175",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "607:27:20",
            "typeName": {
              "contractScope": null,
              "id": 7863,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 30955,
              "src": "627:6:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$30955",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 7867,
            "libraryName": {
              "contractScope": null,
              "id": 7865,
              "name": "Address",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 31250,
              "src": "645:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Address_$31250",
                "typeString": "library Address"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "639:26:20",
            "typeName": {
              "id": 7866,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "657:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 7870,
            "libraryName": {
              "contractScope": null,
              "id": 7868,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 30886,
              "src": "676:8:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$30886",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "670:27:20",
            "typeName": {
              "id": 7869,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "689:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": true,
            "id": 7875,
            "name": "want",
            "nodeType": "VariableDeclaration",
            "scope": 8740,
            "src": "703:82:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7871,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "703:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307831393465426431373346366344616345303436433533654143634539423935334632383431316431",
                  "id": 7873,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "742:42:20",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0x194eBd173F6cDacE046C53eACcE9B953F28411d1"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 7872,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "734:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 7874,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "734:51:20",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 7880,
            "name": "crv",
            "nodeType": "VariableDeclaration",
            "scope": 8740,
            "src": "791:81:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7876,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "791:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307844353333613934393734306262333330366431313943433737376661393030624130333463643532",
                  "id": 7878,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "829:42:20",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0xD533a949740bb3306d119CC777fa900bA034cd52"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 7877,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "821:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 7879,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "821:51:20",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 7885,
            "name": "curve",
            "nodeType": "VariableDeclaration",
            "scope": 8740,
            "src": "879:83:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7881,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "879:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307830436536613566463532313765333833313566383730333243463930363836433936363237434141",
                  "id": 7883,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "919:42:20",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0x0Ce6a5fF5217e38315f87032CF90686C96627CAA"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 7882,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "911:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 7884,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "911:51:20",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 7890,
            "name": "gauge",
            "nodeType": "VariableDeclaration",
            "scope": 8740,
            "src": "968:83:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7886,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "968:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307839304262363039363439453034353145356144393532363833443634424432643166323435383430",
                  "id": 7888,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1008:42:20",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0x90Bb609649E0451E5aD952683D64BD2d1f245840"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 7887,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1000:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 7889,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1000:51:20",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 7895,
            "name": "voter",
            "nodeType": "VariableDeclaration",
            "scope": 8740,
            "src": "1057:83:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7891,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1057:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307846313437623831323564326566393346423639363544623937443637343639353261313333393334",
                  "id": 7893,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1097:42:20",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0xF147b8125d2ef93FB6965Db97D6746952a133934"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 7892,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1089:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 7894,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1089:51:20",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 7900,
            "name": "eurs",
            "nodeType": "VariableDeclaration",
            "scope": 8740,
            "src": "1147:82:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7896,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1147:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307864423235663231314142303562316339374435393535313646343537393435323861383037616438",
                  "id": 7898,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1186:42:20",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0xdB25f211AB05b1c97D595516F45794528a807ad8"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 7897,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1178:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 7899,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1178:51:20",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 7905,
            "name": "usdc",
            "nodeType": "VariableDeclaration",
            "scope": 8740,
            "src": "1235:82:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7901,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1235:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307841306238363939316336323138623336633164313944346132653945623063453336303665423438",
                  "id": 7903,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1274:42:20",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 7902,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1266:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 7904,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1266:51:20",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 7910,
            "name": "weth",
            "nodeType": "VariableDeclaration",
            "scope": 8740,
            "src": "1323:82:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7906,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1323:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307843303261614133396232323346453844304130653543344632376541443930383343373536436332",
                  "id": 7908,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1362:42:20",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 7907,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1354:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 7909,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1354:51:20",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7913,
            "name": "keepCRV",
            "nodeType": "VariableDeclaration",
            "scope": 8740,
            "src": "1458:28:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7911,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1458:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "353030",
              "id": 7912,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1483:3:20",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_500_by_1",
                "typeString": "int_const 500"
              },
              "value": "500"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7916,
            "name": "treasuryFee",
            "nodeType": "VariableDeclaration",
            "scope": 8740,
            "src": "1492:33:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7914,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1492:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31303030",
              "id": 7915,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1521:4:20",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000_by_1",
                "typeString": "int_const 1000"
              },
              "value": "1000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7919,
            "name": "strategistReward",
            "nodeType": "VariableDeclaration",
            "scope": 8740,
            "src": "1531:38:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7917,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1531:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31303030",
              "id": 7918,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1565:4:20",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000_by_1",
                "typeString": "int_const 1000"
              },
              "value": "1000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7922,
            "name": "withdrawalFee",
            "nodeType": "VariableDeclaration",
            "scope": 8740,
            "src": "1575:32:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7920,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1575:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 7921,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1606:1:20",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 7925,
            "name": "FEE_DENOMINATOR",
            "nodeType": "VariableDeclaration",
            "scope": 8740,
            "src": "1613:47:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7923,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1613:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3130303030",
              "id": 7924,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1655:5:20",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7927,
            "name": "proxy",
            "nodeType": "VariableDeclaration",
            "scope": 8740,
            "src": "1667:20:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7926,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1667:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7929,
            "name": "dex",
            "nodeType": "VariableDeclaration",
            "scope": 8740,
            "src": "1693:18:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7928,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1693:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7931,
            "name": "governance",
            "nodeType": "VariableDeclaration",
            "scope": 8740,
            "src": "1718:25:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7930,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1718:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7933,
            "name": "controller",
            "nodeType": "VariableDeclaration",
            "scope": 8740,
            "src": "1749:25:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7932,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1749:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7935,
            "name": "strategist",
            "nodeType": "VariableDeclaration",
            "scope": 8740,
            "src": "1780:25:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7934,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1780:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7937,
            "name": "keeper",
            "nodeType": "VariableDeclaration",
            "scope": 8740,
            "src": "1811:21:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7936,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1811:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7939,
            "name": "earned",
            "nodeType": "VariableDeclaration",
            "scope": 8740,
            "src": "1839:21:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7938,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1839:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7945,
            "name": "Harvested",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7944,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7941,
                  "indexed": false,
                  "name": "wantEarned",
                  "nodeType": "VariableDeclaration",
                  "scope": 7945,
                  "src": "1941:18:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7940,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1941:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7943,
                  "indexed": false,
                  "name": "lifetimeEarned",
                  "nodeType": "VariableDeclaration",
                  "scope": 7945,
                  "src": "1961:22:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7942,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1961:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1940:44:20"
            },
            "src": "1925:60:20"
          },
          {
            "body": {
              "id": 7981,
              "nodeType": "Block",
              "src": "2031:307:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7950,
                      "name": "governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7931,
                      "src": "2041:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 7951,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33369,
                        "src": "2054:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 7952,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2054:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2041:23:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7954,
                  "nodeType": "ExpressionStatement",
                  "src": "2041:23:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7955,
                      "name": "strategist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7935,
                      "src": "2074:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 7956,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33369,
                        "src": "2087:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 7957,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2087:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2074:23:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7959,
                  "nodeType": "ExpressionStatement",
                  "src": "2074:23:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7960,
                      "name": "keeper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7937,
                      "src": "2107:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 7961,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33369,
                        "src": "2116:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 7962,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2116:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2107:19:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7964,
                  "nodeType": "ExpressionStatement",
                  "src": "2107:19:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7965,
                      "name": "controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7933,
                      "src": "2136:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7966,
                      "name": "_controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7947,
                      "src": "2149:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2136:24:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7968,
                  "nodeType": "ExpressionStatement",
                  "src": "2136:24:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7969,
                      "name": "proxy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7927,
                      "src": "2205:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "307843313741446639343966353234323133613534303630396333383630333544374436383542313646",
                          "id": 7971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2221:42:20",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          "value": "0xC17ADf949f524213a540609c386035D7D685B16F"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 7970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2213:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 7972,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2213:51:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2205:59:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7974,
                  "nodeType": "ExpressionStatement",
                  "src": "2205:59:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7975,
                      "name": "dex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7929,
                      "src": "2274:3:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "307837613235306435363330423463463533393733396446324335644163623463363539463234383844",
                          "id": 7977,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2288:42:20",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          "value": "0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 7976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2280:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 7978,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2280:51:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2274:57:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7980,
                  "nodeType": "ExpressionStatement",
                  "src": "2274:57:20"
                }
              ]
            },
            "documentation": null,
            "id": 7982,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7948,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7947,
                  "name": "_controller",
                  "nodeType": "VariableDeclaration",
                  "scope": 7982,
                  "src": "2003:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7946,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2003:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2002:21:20"
            },
            "returnParameters": {
              "id": 7949,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2031:0:20"
            },
            "scope": 8740,
            "src": "1991:347:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7989,
              "nodeType": "Block",
              "src": "2401:52:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "53747261746567794375727665455552566f74657250726f7879",
                    "id": 7987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2418:28:20",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_b6ca0c6aea37dc0c6c6010b893ec593215dcf05025a40f3cbb2e7ab80a3d64f0",
                      "typeString": "literal_string \"StrategyCurveEURVoterProxy\""
                    },
                    "value": "StrategyCurveEURVoterProxy"
                  },
                  "functionReturnParameters": 7986,
                  "id": 7988,
                  "nodeType": "Return",
                  "src": "2411:35:20"
                }
              ]
            },
            "documentation": null,
            "id": 7990,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getName",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7983,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2360:2:20"
            },
            "returnParameters": {
              "id": 7986,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7985,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7990,
                  "src": "2386:13:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7984,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2386:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2385:15:20"
            },
            "scope": 8740,
            "src": "2344:109:20",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8012,
              "nodeType": "Block",
              "src": "2512:127:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 8004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 7999,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 7996,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33369,
                              "src": "2530:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 7997,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2530:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 7998,
                            "name": "strategist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7935,
                            "src": "2544:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2530:24:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 8003,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 8000,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33369,
                              "src": "2558:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 8001,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2558:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 8002,
                            "name": "governance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7931,
                            "src": "2572:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2558:24:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2530:52:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21617574686f72697a6564",
                        "id": 8005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2584:13:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d7031b85265729c6983ea6d4e363a4efb2dd08bdad971b2517bc786f89231cb6",
                          "typeString": "literal_string \"!authorized\""
                        },
                        "value": "!authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d7031b85265729c6983ea6d4e363a4efb2dd08bdad971b2517bc786f89231cb6",
                          "typeString": "literal_string \"!authorized\""
                        }
                      ],
                      "id": 7995,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        33372,
                        33373
                      ],
                      "referencedDeclaration": 33373,
                      "src": "2522:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2522:76:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8007,
                  "nodeType": "ExpressionStatement",
                  "src": "2522:76:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8008,
                      "name": "strategist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7935,
                      "src": "2608:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8009,
                      "name": "_strategist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7992,
                      "src": "2621:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2608:24:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8011,
                  "nodeType": "ExpressionStatement",
                  "src": "2608:24:20"
                }
              ]
            },
            "documentation": null,
            "id": 8013,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setStrategist",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7993,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7992,
                  "name": "_strategist",
                  "nodeType": "VariableDeclaration",
                  "scope": 8013,
                  "src": "2482:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7991,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2482:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2481:21:20"
            },
            "returnParameters": {
              "id": 7994,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2512:0:20"
            },
            "scope": 8740,
            "src": "2459:180:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8035,
              "nodeType": "Block",
              "src": "2690:119:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 8027,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 8022,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 8019,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33369,
                              "src": "2708:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 8020,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2708:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 8021,
                            "name": "strategist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7935,
                            "src": "2722:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2708:24:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 8026,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 8023,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33369,
                              "src": "2736:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 8024,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2736:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 8025,
                            "name": "governance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7931,
                            "src": "2750:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2736:24:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2708:52:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21617574686f72697a6564",
                        "id": 8028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2762:13:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d7031b85265729c6983ea6d4e363a4efb2dd08bdad971b2517bc786f89231cb6",
                          "typeString": "literal_string \"!authorized\""
                        },
                        "value": "!authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d7031b85265729c6983ea6d4e363a4efb2dd08bdad971b2517bc786f89231cb6",
                          "typeString": "literal_string \"!authorized\""
                        }
                      ],
                      "id": 8018,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        33372,
                        33373
                      ],
                      "referencedDeclaration": 33373,
                      "src": "2700:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2700:76:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8030,
                  "nodeType": "ExpressionStatement",
                  "src": "2700:76:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8031,
                      "name": "keeper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7937,
                      "src": "2786:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8032,
                      "name": "_keeper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8015,
                      "src": "2795:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2786:16:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8034,
                  "nodeType": "ExpressionStatement",
                  "src": "2786:16:20"
                }
              ]
            },
            "documentation": null,
            "id": 8036,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setKeeper",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8016,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8015,
                  "name": "_keeper",
                  "nodeType": "VariableDeclaration",
                  "scope": 8036,
                  "src": "2664:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8014,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2664:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2663:17:20"
            },
            "returnParameters": {
              "id": 8017,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2690:0:20"
            },
            "scope": 8740,
            "src": "2645:164:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8053,
              "nodeType": "Block",
              "src": "2862:93:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 8042,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33369,
                            "src": "2880:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8043,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2880:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 8044,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7931,
                          "src": "2894:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2880:24:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 8046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2906:13:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 8041,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        33372,
                        33373
                      ],
                      "referencedDeclaration": 33373,
                      "src": "2872:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2872:48:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8048,
                  "nodeType": "ExpressionStatement",
                  "src": "2872:48:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8049,
                      "name": "keepCRV",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7913,
                      "src": "2930:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8050,
                      "name": "_keepCRV",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8038,
                      "src": "2940:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2930:18:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8052,
                  "nodeType": "ExpressionStatement",
                  "src": "2930:18:20"
                }
              ]
            },
            "documentation": null,
            "id": 8054,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setKeepCRV",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8039,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8038,
                  "name": "_keepCRV",
                  "nodeType": "VariableDeclaration",
                  "scope": 8054,
                  "src": "2835:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8037,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2835:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2834:18:20"
            },
            "returnParameters": {
              "id": 8040,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2862:0:20"
            },
            "scope": 8740,
            "src": "2815:140:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8071,
              "nodeType": "Block",
              "src": "3020:105:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 8060,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33369,
                            "src": "3038:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8061,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3038:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 8062,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7931,
                          "src": "3052:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3038:24:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 8064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3064:13:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 8059,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        33372,
                        33373
                      ],
                      "referencedDeclaration": 33373,
                      "src": "3030:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3030:48:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8066,
                  "nodeType": "ExpressionStatement",
                  "src": "3030:48:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8067,
                      "name": "withdrawalFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7922,
                      "src": "3088:13:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8068,
                      "name": "_withdrawalFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8056,
                      "src": "3104:14:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3088:30:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8070,
                  "nodeType": "ExpressionStatement",
                  "src": "3088:30:20"
                }
              ]
            },
            "documentation": null,
            "id": 8072,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setWithdrawalFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8057,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8056,
                  "name": "_withdrawalFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 8072,
                  "src": "2987:22:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8055,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2987:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2986:24:20"
            },
            "returnParameters": {
              "id": 8058,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3020:0:20"
            },
            "scope": 8740,
            "src": "2961:164:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8089,
              "nodeType": "Block",
              "src": "3186:101:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8081,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 8078,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33369,
                            "src": "3204:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8079,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3204:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 8080,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7931,
                          "src": "3218:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3204:24:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 8082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3230:13:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 8077,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        33372,
                        33373
                      ],
                      "referencedDeclaration": 33373,
                      "src": "3196:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3196:48:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8084,
                  "nodeType": "ExpressionStatement",
                  "src": "3196:48:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8085,
                      "name": "treasuryFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7916,
                      "src": "3254:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8086,
                      "name": "_treasuryFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8074,
                      "src": "3268:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3254:26:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8088,
                  "nodeType": "ExpressionStatement",
                  "src": "3254:26:20"
                }
              ]
            },
            "documentation": null,
            "id": 8090,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setTreasuryFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8075,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8074,
                  "name": "_treasuryFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 8090,
                  "src": "3155:20:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8073,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3155:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3154:22:20"
            },
            "returnParameters": {
              "id": 8076,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3186:0:20"
            },
            "scope": 8740,
            "src": "3131:156:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8107,
              "nodeType": "Block",
              "src": "3358:111:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 8096,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33369,
                            "src": "3376:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8097,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3376:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 8098,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7931,
                          "src": "3390:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3376:24:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 8100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3402:13:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 8095,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        33372,
                        33373
                      ],
                      "referencedDeclaration": 33373,
                      "src": "3368:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3368:48:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8102,
                  "nodeType": "ExpressionStatement",
                  "src": "3368:48:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8103,
                      "name": "strategistReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7919,
                      "src": "3426:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8104,
                      "name": "_strategistReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8092,
                      "src": "3445:17:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3426:36:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8106,
                  "nodeType": "ExpressionStatement",
                  "src": "3426:36:20"
                }
              ]
            },
            "documentation": null,
            "id": 8108,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setStrategistReward",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8093,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8092,
                  "name": "_strategistReward",
                  "nodeType": "VariableDeclaration",
                  "scope": 8108,
                  "src": "3322:25:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8091,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3322:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3321:27:20"
            },
            "returnParameters": {
              "id": 8094,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3358:0:20"
            },
            "scope": 8740,
            "src": "3293:176:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8125,
              "nodeType": "Block",
              "src": "3518:89:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 8114,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33369,
                            "src": "3536:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3536:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 8116,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7931,
                          "src": "3550:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3536:24:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 8118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3562:13:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 8113,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        33372,
                        33373
                      ],
                      "referencedDeclaration": 33373,
                      "src": "3528:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3528:48:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8120,
                  "nodeType": "ExpressionStatement",
                  "src": "3528:48:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8121,
                      "name": "proxy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7927,
                      "src": "3586:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8122,
                      "name": "_proxy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8110,
                      "src": "3594:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3586:14:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8124,
                  "nodeType": "ExpressionStatement",
                  "src": "3586:14:20"
                }
              ]
            },
            "documentation": null,
            "id": 8126,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setProxy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8110,
                  "name": "_proxy",
                  "nodeType": "VariableDeclaration",
                  "scope": 8126,
                  "src": "3493:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8109,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3493:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3492:16:20"
            },
            "returnParameters": {
              "id": 8112,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3518:0:20"
            },
            "scope": 8740,
            "src": "3475:132:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8161,
              "nodeType": "Block",
              "src": "3639:211:20",
              "statements": [
                {
                  "assignments": [
                    8130
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8130,
                      "name": "_want",
                      "nodeType": "VariableDeclaration",
                      "scope": 8161,
                      "src": "3649:13:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8129,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3649:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 8139,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8136,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33457,
                            "src": "3696:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StrategyCurveEURVoterProxy_$8740",
                              "typeString": "contract StrategyCurveEURVoterProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StrategyCurveEURVoterProxy_$8740",
                              "typeString": "contract StrategyCurveEURVoterProxy"
                            }
                          ],
                          "id": 8135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3688:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 8137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3688:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8132,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7875,
                            "src": "3672:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8131,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30955,
                          "src": "3665:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$30955_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 8133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3665:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$30955",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 8134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30900,
                      "src": "3665:22:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 8138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3665:37:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3649:53:20"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 8140,
                      "name": "_want",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8130,
                      "src": "3716:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 8141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3724:1:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3716:9:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 8160,
                  "nodeType": "IfStatement",
                  "src": "3712:132:20",
                  "trueBody": {
                    "id": 8159,
                    "nodeType": "Block",
                    "src": "3727:117:20",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 8147,
                              "name": "proxy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7927,
                              "src": "3767:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 8148,
                              "name": "_want",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8130,
                              "src": "3774:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 8144,
                                  "name": "want",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7875,
                                  "src": "3748:4:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 8143,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30955,
                                "src": "3741:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$30955_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 8145,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3741:12:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$30955",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 8146,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30988,
                            "src": "3741:25:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$30955_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$30955_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 8149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3741:39:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8150,
                        "nodeType": "ExpressionStatement",
                        "src": "3741:39:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 8155,
                              "name": "gauge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7890,
                              "src": "3821:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 8156,
                              "name": "want",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7875,
                              "src": "3828:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 8152,
                                  "name": "proxy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7927,
                                  "src": "3806:5:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 8151,
                                "name": "IVoterProxy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32059,
                                "src": "3794:11:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IVoterProxy_$32059_$",
                                  "typeString": "type(contract IVoterProxy)"
                                }
                              },
                              "id": 8153,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3794:18:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IVoterProxy_$32059",
                                "typeString": "contract IVoterProxy"
                              }
                            },
                            "id": 8154,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "deposit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32050,
                            "src": "3794:26:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address) external"
                            }
                          },
                          "id": 8157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3794:39:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8158,
                        "nodeType": "ExpressionStatement",
                        "src": "3794:39:20"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 8162,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3629:2:20"
            },
            "returnParameters": {
              "id": 8128,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3639:0:20"
            },
            "scope": 8740,
            "src": "3613:237:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8220,
              "nodeType": "Block",
              "src": "3998:314:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 8170,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33369,
                            "src": "4016:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4016:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 8172,
                          "name": "controller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7933,
                          "src": "4030:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4016:24:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21636f6e74726f6c6c6572",
                        "id": 8174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4042:13:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24c17b6ae2491863f0fd26020e5d3d9f5265ffe6e6a381149356ab902482b506",
                          "typeString": "literal_string \"!controller\""
                        },
                        "value": "!controller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24c17b6ae2491863f0fd26020e5d3d9f5265ffe6e6a381149356ab902482b506",
                          "typeString": "literal_string \"!controller\""
                        }
                      ],
                      "id": 8169,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        33372,
                        33373
                      ],
                      "referencedDeclaration": 33373,
                      "src": "4008:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4008:48:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8176,
                  "nodeType": "ExpressionStatement",
                  "src": "4008:48:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 8178,
                          "name": "want",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7875,
                          "src": "4074:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 8180,
                              "name": "_asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8164,
                              "src": "4090:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$30955",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$30955",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 8179,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4082:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 8181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4082:15:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4074:23:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "77616e74",
                        "id": 8183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4099:6:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_71c7155ed36af613071923b6266b4e08ab22e1dee63ee866722ae1cd3ba12727",
                          "typeString": "literal_string \"want\""
                        },
                        "value": "want"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_71c7155ed36af613071923b6266b4e08ab22e1dee63ee866722ae1cd3ba12727",
                          "typeString": "literal_string \"want\""
                        }
                      ],
                      "id": 8177,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        33372,
                        33373
                      ],
                      "referencedDeclaration": 33373,
                      "src": "4066:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4066:40:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8185,
                  "nodeType": "ExpressionStatement",
                  "src": "4066:40:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 8187,
                          "name": "crv",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7880,
                          "src": "4124:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 8189,
                              "name": "_asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8164,
                              "src": "4139:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$30955",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$30955",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 8188,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4131:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 8190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4131:15:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4124:22:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "637276",
                        "id": 8192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4148:5:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf4672f78075baa915145c3dd1768b2acae76ee3e66285a6a117c4d143682dfe",
                          "typeString": "literal_string \"crv\""
                        },
                        "value": "crv"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bf4672f78075baa915145c3dd1768b2acae76ee3e66285a6a117c4d143682dfe",
                          "typeString": "literal_string \"crv\""
                        }
                      ],
                      "id": 8186,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        33372,
                        33373
                      ],
                      "referencedDeclaration": 33373,
                      "src": "4116:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4116:38:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8194,
                  "nodeType": "ExpressionStatement",
                  "src": "4116:38:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 8196,
                          "name": "eurs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7900,
                          "src": "4172:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 8198,
                              "name": "_asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8164,
                              "src": "4188:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$30955",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$30955",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 8197,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4180:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 8199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4180:15:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4172:23:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "65757273",
                        "id": 8201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4197:6:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_959438d74ae815324385c2169e525c50a4ed000b77f0cc9c1366803012667d82",
                          "typeString": "literal_string \"eurs\""
                        },
                        "value": "eurs"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_959438d74ae815324385c2169e525c50a4ed000b77f0cc9c1366803012667d82",
                          "typeString": "literal_string \"eurs\""
                        }
                      ],
                      "id": 8195,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        33372,
                        33373
                      ],
                      "referencedDeclaration": 33373,
                      "src": "4164:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4164:40:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8203,
                  "nodeType": "ExpressionStatement",
                  "src": "4164:40:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8204,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8167,
                      "src": "4214:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 8208,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33457,
                              "src": "4249:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StrategyCurveEURVoterProxy_$8740",
                                "typeString": "contract StrategyCurveEURVoterProxy"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StrategyCurveEURVoterProxy_$8740",
                                "typeString": "contract StrategyCurveEURVoterProxy"
                              }
                            ],
                            "id": 8207,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4241:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 8209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4241:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 8205,
                          "name": "_asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8164,
                          "src": "4224:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$30955",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 8206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30900,
                        "src": "4224:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 8210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4224:31:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4214:41:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8212,
                  "nodeType": "ExpressionStatement",
                  "src": "4214:41:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8216,
                        "name": "controller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7933,
                        "src": "4285:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8217,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8167,
                        "src": "4297:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 8213,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8164,
                        "src": "4265:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$30955",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 8215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30988,
                      "src": "4265:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$30955_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$30955_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 8218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4265:40:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8219,
                  "nodeType": "ExpressionStatement",
                  "src": "4265:40:20"
                }
              ]
            },
            "documentation": null,
            "id": 8221,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8165,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8164,
                  "name": "_asset",
                  "nodeType": "VariableDeclaration",
                  "scope": 8221,
                  "src": "3948:13:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$30955",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 8163,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 30955,
                    "src": "3948:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$30955",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3947:15:20"
            },
            "returnParameters": {
              "id": 8168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8167,
                  "name": "balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 8221,
                  "src": "3981:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8166,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3981:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3980:17:20"
            },
            "scope": 8740,
            "src": "3930:382:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8319,
              "nodeType": "Block",
              "src": "4431:665:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 8227,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33369,
                            "src": "4449:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4449:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 8229,
                          "name": "controller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7933,
                          "src": "4463:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4449:24:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21636f6e74726f6c6c6572",
                        "id": 8231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4475:13:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24c17b6ae2491863f0fd26020e5d3d9f5265ffe6e6a381149356ab902482b506",
                          "typeString": "literal_string \"!controller\""
                        },
                        "value": "!controller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24c17b6ae2491863f0fd26020e5d3d9f5265ffe6e6a381149356ab902482b506",
                          "typeString": "literal_string \"!controller\""
                        }
                      ],
                      "id": 8226,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        33372,
                        33373
                      ],
                      "referencedDeclaration": 33373,
                      "src": "4441:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4441:48:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8233,
                  "nodeType": "ExpressionStatement",
                  "src": "4441:48:20"
                },
                {
                  "assignments": [
                    8235
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8235,
                      "name": "_balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 8319,
                      "src": "4499:16:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8234,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4499:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 8244,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8241,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33457,
                            "src": "4549:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StrategyCurveEURVoterProxy_$8740",
                              "typeString": "contract StrategyCurveEURVoterProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StrategyCurveEURVoterProxy_$8740",
                              "typeString": "contract StrategyCurveEURVoterProxy"
                            }
                          ],
                          "id": 8240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4541:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 8242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4541:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8237,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7875,
                            "src": "4525:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8236,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30955,
                          "src": "4518:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$30955_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 8238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4518:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$30955",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 8239,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30900,
                      "src": "4518:22:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 8243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4518:37:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4499:56:20"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 8245,
                      "name": "_balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8235,
                      "src": "4569:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 8246,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8223,
                      "src": "4580:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4569:18:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 8265,
                  "nodeType": "IfStatement",
                  "src": "4565:140:20",
                  "trueBody": {
                    "id": 8264,
                    "nodeType": "Block",
                    "src": "4589:116:20",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 8255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 8248,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8223,
                            "src": "4603:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 8252,
                                    "name": "_balance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8235,
                                    "src": "4639:8:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 8250,
                                    "name": "_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8223,
                                    "src": "4627:7:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 8251,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sub",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 30742,
                                  "src": "4627:11:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 8253,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4627:21:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 8249,
                              "name": "_withdrawSome",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8337,
                              "src": "4613:13:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256) returns (uint256)"
                              }
                            },
                            "id": 8254,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4613:36:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4603:46:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 8256,
                        "nodeType": "ExpressionStatement",
                        "src": "4603:46:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 8262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 8257,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8223,
                            "src": "4663:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 8260,
                                "name": "_balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8235,
                                "src": "4685:8:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 8258,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8223,
                                "src": "4673:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 8259,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 30726,
                              "src": "4673:11:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 8261,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4673:21:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4663:31:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 8263,
                        "nodeType": "ExpressionStatement",
                        "src": "4663:31:20"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    8267
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8267,
                      "name": "_fee",
                      "nodeType": "VariableDeclaration",
                      "scope": 8319,
                      "src": "4715:12:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8266,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4715:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 8275,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8273,
                        "name": "FEE_DENOMINATOR",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7925,
                        "src": "4761:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8270,
                            "name": "withdrawalFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7922,
                            "src": "4742:13:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 8268,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8223,
                            "src": "4730:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 8269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30803,
                          "src": "4730:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 8271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4730:26:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 8272,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30819,
                      "src": "4730:30:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 8274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4730:47:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4715:62:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 8281,
                                "name": "controller",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7933,
                                "src": "4826:10:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 8280,
                              "name": "IController",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31644,
                              "src": "4814:11:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IController_$31644_$",
                                "typeString": "type(contract IController)"
                              }
                            },
                            "id": 8282,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4814:23:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IController_$31644",
                              "typeString": "contract IController"
                            }
                          },
                          "id": 8283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rewards",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31620,
                          "src": "4814:31:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 8284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4814:33:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8285,
                        "name": "_fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8267,
                        "src": "4849:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8277,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7875,
                            "src": "4795:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8276,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30955,
                          "src": "4788:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$30955_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 8278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4788:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$30955",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 8279,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30988,
                      "src": "4788:25:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$30955_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$30955_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 8286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4788:66:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8287,
                  "nodeType": "ExpressionStatement",
                  "src": "4788:66:20"
                },
                {
                  "assignments": [
                    8289
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8289,
                      "name": "_vault",
                      "nodeType": "VariableDeclaration",
                      "scope": 8319,
                      "src": "4864:14:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 8288,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4864:7:20",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 8298,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8295,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7875,
                            "src": "4920:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4912:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 8296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4912:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8291,
                            "name": "controller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7933,
                            "src": "4893:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8290,
                          "name": "IController",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31644,
                          "src": "4881:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IController_$31644_$",
                            "typeString": "type(contract IController)"
                          }
                        },
                        "id": 8292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4881:23:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IController_$31644",
                          "typeString": "contract IController"
                        }
                      },
                      "id": 8293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "vaults",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31627,
                      "src": "4881:30:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                        "typeString": "function (address) view external returns (address)"
                      }
                    },
                    "id": 8297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4881:45:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4864:62:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 8300,
                          "name": "_vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8289,
                          "src": "4944:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 8302,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4962:1:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8301,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4954:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 8303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4954:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "4944:20:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "217661756c74",
                        "id": 8305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4966:8:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_935dae7e2471bb42a624e3787c1dd49fe36e63fd03e67a6f90f78ba819cb3825",
                          "typeString": "literal_string \"!vault\""
                        },
                        "value": "!vault"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_935dae7e2471bb42a624e3787c1dd49fe36e63fd03e67a6f90f78ba819cb3825",
                          "typeString": "literal_string \"!vault\""
                        }
                      ],
                      "id": 8299,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        33372,
                        33373
                      ],
                      "referencedDeclaration": 33373,
                      "src": "4936:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4936:39:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8307,
                  "nodeType": "ExpressionStatement",
                  "src": "4936:39:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8312,
                        "name": "_vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8289,
                        "src": "5063:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8315,
                            "name": "_fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8267,
                            "src": "5083:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 8313,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8223,
                            "src": "5071:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 8314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30742,
                          "src": "5071:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 8316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5071:17:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8309,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7875,
                            "src": "5044:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8308,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30955,
                          "src": "5037:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$30955_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 8310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5037:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$30955",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 8311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30988,
                      "src": "5037:25:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$30955_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$30955_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 8317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5037:52:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8318,
                  "nodeType": "ExpressionStatement",
                  "src": "5037:52:20"
                }
              ]
            },
            "documentation": null,
            "id": 8320,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8224,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8223,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 8320,
                  "src": "4405:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8222,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4405:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4404:17:20"
            },
            "returnParameters": {
              "id": 8225,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4431:0:20"
            },
            "scope": 8740,
            "src": "4387:709:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8336,
              "nodeType": "Block",
              "src": "5169:73:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8331,
                        "name": "gauge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7890,
                        "src": "5214:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8332,
                        "name": "want",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7875,
                        "src": "5221:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8333,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8322,
                        "src": "5227:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8328,
                            "name": "proxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7927,
                            "src": "5198:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8327,
                          "name": "IVoterProxy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32059,
                          "src": "5186:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IVoterProxy_$32059_$",
                            "typeString": "type(contract IVoterProxy)"
                          }
                        },
                        "id": 8329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5186:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoterProxy_$32059",
                          "typeString": "contract IVoterProxy"
                        }
                      },
                      "id": 8330,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32027,
                      "src": "5186:27:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 8334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5186:49:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 8326,
                  "id": 8335,
                  "nodeType": "Return",
                  "src": "5179:56:20"
                }
              ]
            },
            "documentation": null,
            "id": 8337,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_withdrawSome",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8323,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8322,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 8337,
                  "src": "5125:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8321,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5125:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5124:17:20"
            },
            "returnParameters": {
              "id": 8326,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8325,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8337,
                  "src": "5160:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8324,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5160:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5159:9:20"
            },
            "scope": 8740,
            "src": "5102:140:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8392,
              "nodeType": "Block",
              "src": "5373:373:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 8343,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33369,
                            "src": "5391:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5391:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 8345,
                          "name": "controller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7933,
                          "src": "5405:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5391:24:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21636f6e74726f6c6c6572",
                        "id": 8347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5417:13:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24c17b6ae2491863f0fd26020e5d3d9f5265ffe6e6a381149356ab902482b506",
                          "typeString": "literal_string \"!controller\""
                        },
                        "value": "!controller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24c17b6ae2491863f0fd26020e5d3d9f5265ffe6e6a381149356ab902482b506",
                          "typeString": "literal_string \"!controller\""
                        }
                      ],
                      "id": 8342,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        33372,
                        33373
                      ],
                      "referencedDeclaration": 33373,
                      "src": "5383:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5383:48:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8349,
                  "nodeType": "ExpressionStatement",
                  "src": "5383:48:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 8350,
                      "name": "_withdrawAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8405,
                      "src": "5441:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 8351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5441:14:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8352,
                  "nodeType": "ExpressionStatement",
                  "src": "5441:14:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8353,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8340,
                      "src": "5466:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 8359,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33457,
                              "src": "5507:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StrategyCurveEURVoterProxy_$8740",
                                "typeString": "contract StrategyCurveEURVoterProxy"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StrategyCurveEURVoterProxy_$8740",
                                "typeString": "contract StrategyCurveEURVoterProxy"
                              }
                            ],
                            "id": 8358,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5499:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 8360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5499:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 8355,
                              "name": "want",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7875,
                              "src": "5483:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 8354,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30955,
                            "src": "5476:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$30955_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 8356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5476:12:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$30955",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 8357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30900,
                        "src": "5476:22:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 8361,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5476:37:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5466:47:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8363,
                  "nodeType": "ExpressionStatement",
                  "src": "5466:47:20"
                },
                {
                  "assignments": [
                    8365
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8365,
                      "name": "_vault",
                      "nodeType": "VariableDeclaration",
                      "scope": 8392,
                      "src": "5524:14:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 8364,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5524:7:20",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 8374,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8371,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7875,
                            "src": "5580:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5572:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 8372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5572:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8367,
                            "name": "controller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7933,
                            "src": "5553:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8366,
                          "name": "IController",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31644,
                          "src": "5541:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IController_$31644_$",
                            "typeString": "type(contract IController)"
                          }
                        },
                        "id": 8368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5541:23:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IController_$31644",
                          "typeString": "contract IController"
                        }
                      },
                      "id": 8369,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "vaults",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31627,
                      "src": "5541:30:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                        "typeString": "function (address) view external returns (address)"
                      }
                    },
                    "id": 8373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5541:45:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5524:62:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 8376,
                          "name": "_vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8365,
                          "src": "5604:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 8378,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5622:1:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8377,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5614:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 8379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5614:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "5604:20:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "217661756c74",
                        "id": 8381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5626:8:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_935dae7e2471bb42a624e3787c1dd49fe36e63fd03e67a6f90f78ba819cb3825",
                          "typeString": "literal_string \"!vault\""
                        },
                        "value": "!vault"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_935dae7e2471bb42a624e3787c1dd49fe36e63fd03e67a6f90f78ba819cb3825",
                          "typeString": "literal_string \"!vault\""
                        }
                      ],
                      "id": 8375,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        33372,
                        33373
                      ],
                      "referencedDeclaration": 33373,
                      "src": "5596:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5596:39:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8383,
                  "nodeType": "ExpressionStatement",
                  "src": "5596:39:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8388,
                        "name": "_vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8365,
                        "src": "5723:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8389,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8340,
                        "src": "5731:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8385,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7875,
                            "src": "5704:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8384,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30955,
                          "src": "5697:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$30955_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 8386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5697:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$30955",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 8387,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30988,
                      "src": "5697:25:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$30955_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$30955_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 8390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5697:42:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8391,
                  "nodeType": "ExpressionStatement",
                  "src": "5697:42:20"
                }
              ]
            },
            "documentation": null,
            "id": 8393,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawAll",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8338,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5335:2:20"
            },
            "returnParameters": {
              "id": 8341,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8340,
                  "name": "balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 8393,
                  "src": "5356:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8339,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5356:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5355:17:20"
            },
            "scope": 8740,
            "src": "5315:431:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8404,
              "nodeType": "Block",
              "src": "5785:60:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8400,
                        "name": "gauge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7890,
                        "src": "5826:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8401,
                        "name": "want",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7875,
                        "src": "5833:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8397,
                            "name": "proxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7927,
                            "src": "5807:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8396,
                          "name": "IVoterProxy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32059,
                          "src": "5795:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IVoterProxy_$32059_$",
                            "typeString": "type(contract IVoterProxy)"
                          }
                        },
                        "id": 8398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5795:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoterProxy_$32059",
                          "typeString": "contract IVoterProxy"
                        }
                      },
                      "id": 8399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32043,
                      "src": "5795:30:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) external returns (uint256)"
                      }
                    },
                    "id": 8402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5795:43:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8403,
                  "nodeType": "ExpressionStatement",
                  "src": "5795:43:20"
                }
              ]
            },
            "documentation": null,
            "id": 8405,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_withdrawAll",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8394,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5773:2:20"
            },
            "returnParameters": {
              "id": 8395,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5785:0:20"
            },
            "scope": 8740,
            "src": "5752:93:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8661,
              "nodeType": "Block",
              "src": "5877:1558:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 8422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 8417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 8412,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 8409,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33369,
                                "src": "5895:3:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 8410,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5895:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 8411,
                              "name": "keeper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7937,
                              "src": "5909:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "5895:20:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 8416,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 8413,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33369,
                                "src": "5919:3:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 8414,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5919:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 8415,
                              "name": "strategist",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7935,
                              "src": "5933:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "5919:24:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5895:48:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 8421,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 8418,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33369,
                              "src": "5947:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 8419,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5947:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 8420,
                            "name": "governance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7931,
                            "src": "5961:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5947:24:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5895:76:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "216b656570657273",
                        "id": 8423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5973:10:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_704bcba45701ea2fb1e66234bb2d9c591f079ab263f453f4b6183eed0cd0e032",
                          "typeString": "literal_string \"!keepers\""
                        },
                        "value": "!keepers"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_704bcba45701ea2fb1e66234bb2d9c591f079ab263f453f4b6183eed0cd0e032",
                          "typeString": "literal_string \"!keepers\""
                        }
                      ],
                      "id": 8408,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        33372,
                        33373
                      ],
                      "referencedDeclaration": 33373,
                      "src": "5887:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5887:97:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8425,
                  "nodeType": "ExpressionStatement",
                  "src": "5887:97:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8430,
                        "name": "gauge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7890,
                        "src": "6021:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8427,
                            "name": "proxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7927,
                            "src": "6006:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8426,
                          "name": "IVoterProxy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32059,
                          "src": "5994:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IVoterProxy_$32059_$",
                            "typeString": "type(contract IVoterProxy)"
                          }
                        },
                        "id": 8428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5994:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoterProxy_$32059",
                          "typeString": "contract IVoterProxy"
                        }
                      },
                      "id": 8429,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "harvest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32055,
                      "src": "5994:26:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 8431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5994:33:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8432,
                  "nodeType": "ExpressionStatement",
                  "src": "5994:33:20"
                },
                {
                  "assignments": [
                    8434
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8434,
                      "name": "_crv",
                      "nodeType": "VariableDeclaration",
                      "scope": 8661,
                      "src": "6037:12:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8433,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6037:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 8443,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8440,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33457,
                            "src": "6082:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StrategyCurveEURVoterProxy_$8740",
                              "typeString": "contract StrategyCurveEURVoterProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StrategyCurveEURVoterProxy_$8740",
                              "typeString": "contract StrategyCurveEURVoterProxy"
                            }
                          ],
                          "id": 8439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6074:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 8441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6074:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8436,
                            "name": "crv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7880,
                            "src": "6059:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8435,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30955,
                          "src": "6052:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$30955_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 8437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6052:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$30955",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 8438,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30900,
                      "src": "6052:21:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 8442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6052:36:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6037:51:20"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 8444,
                      "name": "_crv",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8434,
                      "src": "6102:4:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 8445,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6109:1:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6102:8:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 8541,
                  "nodeType": "IfStatement",
                  "src": "6098:552:20",
                  "trueBody": {
                    "id": 8540,
                    "nodeType": "Block",
                    "src": "6112:538:20",
                    "statements": [
                      {
                        "assignments": [
                          8448
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 8448,
                            "name": "_keepCRV",
                            "nodeType": "VariableDeclaration",
                            "scope": 8540,
                            "src": "6126:16:20",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 8447,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6126:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 8456,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 8454,
                              "name": "FEE_DENOMINATOR",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7925,
                              "src": "6167:15:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 8451,
                                  "name": "keepCRV",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7913,
                                  "src": "6154:7:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 8449,
                                  "name": "_crv",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8434,
                                  "src": "6145:4:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 8450,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 30803,
                                "src": "6145:8:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 8452,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6145:17:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 8453,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30819,
                            "src": "6145:21:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 8455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6145:38:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6126:57:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 8461,
                              "name": "voter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7895,
                              "src": "6222:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 8462,
                              "name": "_keepCRV",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8448,
                              "src": "6229:8:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 8458,
                                  "name": "crv",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7880,
                                  "src": "6204:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 8457,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30955,
                                "src": "6197:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$30955_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 8459,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6197:11:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$30955",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 8460,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30988,
                            "src": "6197:24:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$30955_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$30955_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 8463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6197:41:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8464,
                        "nodeType": "ExpressionStatement",
                        "src": "6197:41:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 8470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 8465,
                            "name": "_crv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8434,
                            "src": "6252:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 8468,
                                "name": "_keepCRV",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8448,
                                "src": "6268:8:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 8466,
                                "name": "_crv",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8434,
                                "src": "6259:4:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 8467,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 30742,
                              "src": "6259:8:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 8469,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6259:18:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6252:25:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 8471,
                        "nodeType": "ExpressionStatement",
                        "src": "6252:25:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 8476,
                              "name": "dex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7929,
                              "src": "6316:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 8477,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6321:1:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 8473,
                                  "name": "crv",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7880,
                                  "src": "6299:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 8472,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30955,
                                "src": "6292:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$30955_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 8474,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6292:11:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$30955",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 8475,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 31054,
                            "src": "6292:23:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$30955_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$30955_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 8478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6292:31:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8479,
                        "nodeType": "ExpressionStatement",
                        "src": "6292:31:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 8484,
                              "name": "dex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7929,
                              "src": "6361:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 8485,
                              "name": "_crv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8434,
                              "src": "6366:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 8481,
                                  "name": "crv",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7880,
                                  "src": "6344:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 8480,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30955,
                                "src": "6337:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$30955_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 8482,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6337:11:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$30955",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 8483,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 31054,
                            "src": "6337:23:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$30955_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$30955_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 8486,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6337:34:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8487,
                        "nodeType": "ExpressionStatement",
                        "src": "6337:34:20"
                      },
                      {
                        "assignments": [
                          8491
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 8491,
                            "name": "path",
                            "nodeType": "VariableDeclaration",
                            "scope": 8540,
                            "src": "6386:21:20",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 8489,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6386:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 8490,
                              "length": null,
                              "nodeType": "ArrayTypeName",
                              "src": "6386:9:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 8497,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "34",
                              "id": 8495,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6424:1:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_4_by_1",
                                "typeString": "int_const 4"
                              },
                              "value": "4"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_4_by_1",
                                "typeString": "int_const 4"
                              }
                            ],
                            "id": 8494,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "6410:13:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
                              "typeString": "function (uint256) pure returns (address[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 8492,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6414:7:20",
                                "stateMutability": "nonpayable",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 8493,
                              "length": null,
                              "nodeType": "ArrayTypeName",
                              "src": "6414:9:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            }
                          },
                          "id": 8496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6410:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory",
                            "typeString": "address[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6386:40:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 8502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 8498,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8491,
                              "src": "6440:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 8500,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 8499,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6445:1:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6440:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 8501,
                            "name": "crv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7880,
                            "src": "6450:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6440:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 8503,
                        "nodeType": "ExpressionStatement",
                        "src": "6440:13:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 8508,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 8504,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8491,
                              "src": "6467:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 8506,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 8505,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6472:1:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6467:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 8507,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7910,
                            "src": "6477:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6467:14:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 8509,
                        "nodeType": "ExpressionStatement",
                        "src": "6467:14:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 8514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 8510,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8491,
                              "src": "6495:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 8512,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 8511,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6500:1:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6495:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 8513,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7905,
                            "src": "6505:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6495:14:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 8515,
                        "nodeType": "ExpressionStatement",
                        "src": "6495:14:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 8520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 8516,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8491,
                              "src": "6523:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 8518,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "33",
                              "id": 8517,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6528:1:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              "value": "3"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6523:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 8519,
                            "name": "eurs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7900,
                            "src": "6533:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6523:14:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 8521,
                        "nodeType": "ExpressionStatement",
                        "src": "6523:14:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 8526,
                              "name": "_crv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8434,
                              "src": "6586:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 8528,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6600:1:20",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 8527,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6592:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": "uint256"
                              },
                              "id": 8529,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6592:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 8530,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8491,
                              "src": "6604:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 8532,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33457,
                                  "src": "6618:4:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StrategyCurveEURVoterProxy_$8740",
                                    "typeString": "contract StrategyCurveEURVoterProxy"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StrategyCurveEURVoterProxy_$8740",
                                    "typeString": "contract StrategyCurveEURVoterProxy"
                                  }
                                ],
                                "id": 8531,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6610:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 8533,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6610:13:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "31383030",
                                  "id": 8536,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6633:4:20",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1800_by_1",
                                    "typeString": "int_const 1800"
                                  },
                                  "value": "1800"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1800_by_1",
                                    "typeString": "int_const 1800"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 8534,
                                  "name": "now",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33371,
                                  "src": "6625:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 8535,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "add",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 30726,
                                "src": "6625:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 8537,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6625:13:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 8523,
                                  "name": "dex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7929,
                                  "src": "6556:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 8522,
                                "name": "Uni",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31933,
                                "src": "6552:3:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Uni_$31933_$",
                                  "typeString": "type(contract Uni)"
                                }
                              },
                              "id": 8524,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6552:8:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Uni_$31933",
                                "typeString": "contract Uni"
                              }
                            },
                            "id": 8525,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "swapExactTokensForTokens",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 31932,
                            "src": "6552:33:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,address[] memory,address,uint256) external"
                            }
                          },
                          "id": 8538,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6552:87:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8539,
                        "nodeType": "ExpressionStatement",
                        "src": "6552:87:20"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    8543
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8543,
                      "name": "_eurs",
                      "nodeType": "VariableDeclaration",
                      "scope": 8661,
                      "src": "6659:13:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8542,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6659:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 8552,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8549,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33457,
                            "src": "6706:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StrategyCurveEURVoterProxy_$8740",
                              "typeString": "contract StrategyCurveEURVoterProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StrategyCurveEURVoterProxy_$8740",
                              "typeString": "contract StrategyCurveEURVoterProxy"
                            }
                          ],
                          "id": 8548,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6698:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 8550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6698:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8545,
                            "name": "eurs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7900,
                            "src": "6682:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8544,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30955,
                          "src": "6675:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$30955_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 8546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6675:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$30955",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 8547,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30900,
                      "src": "6675:22:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 8551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6675:37:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6659:53:20"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 8553,
                      "name": "_eurs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8543,
                      "src": "6726:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 8554,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6734:1:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6726:9:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 8583,
                  "nodeType": "IfStatement",
                  "src": "6722:184:20",
                  "trueBody": {
                    "id": 8582,
                    "nodeType": "Block",
                    "src": "6737:169:20",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 8560,
                              "name": "curve",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7885,
                              "src": "6776:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 8561,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6783:1:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 8557,
                                  "name": "eurs",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7900,
                                  "src": "6758:4:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 8556,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30955,
                                "src": "6751:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$30955_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 8558,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6751:12:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$30955",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 8559,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 31054,
                            "src": "6751:24:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$30955_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$30955_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 8562,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6751:34:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8563,
                        "nodeType": "ExpressionStatement",
                        "src": "6751:34:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 8568,
                              "name": "curve",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7885,
                              "src": "6824:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 8569,
                              "name": "_eurs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8543,
                              "src": "6831:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 8565,
                                  "name": "eurs",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7900,
                                  "src": "6806:4:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 8564,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30955,
                                "src": "6799:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$30955_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 8566,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6799:12:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$30955",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 8567,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 31054,
                            "src": "6799:24:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$30955_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$30955_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 8570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6799:38:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8571,
                        "nodeType": "ExpressionStatement",
                        "src": "6799:38:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "components": [
                                {
                                  "argumentTypes": null,
                                  "id": 8576,
                                  "name": "_eurs",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8543,
                                  "src": "6882:5:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 8577,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6889:1:20",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "id": 8578,
                              "isConstant": false,
                              "isInlineArray": true,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "6881:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                "typeString": "uint256[2] memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 8579,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6893:1:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                "typeString": "uint256[2] memory"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 8573,
                                  "name": "curve",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7885,
                                  "src": "6860:5:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 8572,
                                "name": "ICurveFi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31843,
                                "src": "6851:8:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ICurveFi_$31843_$",
                                  "typeString": "type(contract ICurveFi)"
                                }
                              },
                              "id": 8574,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6851:15:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICurveFi_$31843",
                                "typeString": "contract ICurveFi"
                              }
                            },
                            "id": 8575,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add_liquidity",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 31757,
                            "src": "6851:29:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256[2] memory,uint256) external"
                            }
                          },
                          "id": 8580,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6851:44:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8581,
                        "nodeType": "ExpressionStatement",
                        "src": "6851:44:20"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    8585
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8585,
                      "name": "_want",
                      "nodeType": "VariableDeclaration",
                      "scope": 8661,
                      "src": "6915:13:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8584,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6915:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 8594,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8591,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33457,
                            "src": "6962:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StrategyCurveEURVoterProxy_$8740",
                              "typeString": "contract StrategyCurveEURVoterProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StrategyCurveEURVoterProxy_$8740",
                              "typeString": "contract StrategyCurveEURVoterProxy"
                            }
                          ],
                          "id": 8590,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6954:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 8592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6954:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8587,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7875,
                            "src": "6938:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8586,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30955,
                          "src": "6931:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$30955_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 8588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6931:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$30955",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 8589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30900,
                      "src": "6931:22:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 8593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6931:37:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6915:53:20"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 8595,
                      "name": "_want",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8585,
                      "src": "6982:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 8596,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6990:1:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6982:9:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 8642,
                  "nodeType": "IfStatement",
                  "src": "6978:341:20",
                  "trueBody": {
                    "id": 8641,
                    "nodeType": "Block",
                    "src": "6993:326:20",
                    "statements": [
                      {
                        "assignments": [
                          8599
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 8599,
                            "name": "_fee",
                            "nodeType": "VariableDeclaration",
                            "scope": 8641,
                            "src": "7007:12:20",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 8598,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7007:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 8607,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 8605,
                              "name": "FEE_DENOMINATOR",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7925,
                              "src": "7049:15:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 8602,
                                  "name": "treasuryFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7916,
                                  "src": "7032:11:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 8600,
                                  "name": "_want",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8585,
                                  "src": "7022:5:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 8601,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 30803,
                                "src": "7022:9:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 8603,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7022:22:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 8604,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30819,
                            "src": "7022:26:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 8606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7022:43:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7007:58:20"
                      },
                      {
                        "assignments": [
                          8609
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 8609,
                            "name": "_reward",
                            "nodeType": "VariableDeclaration",
                            "scope": 8641,
                            "src": "7079:15:20",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 8608,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7079:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 8617,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 8615,
                              "name": "FEE_DENOMINATOR",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7925,
                              "src": "7129:15:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 8612,
                                  "name": "strategistReward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7919,
                                  "src": "7107:16:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 8610,
                                  "name": "_want",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8585,
                                  "src": "7097:5:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 8611,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 30803,
                                "src": "7097:9:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 8613,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7097:27:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 8614,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30819,
                            "src": "7097:31:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 8616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7097:48:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7079:66:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 8623,
                                      "name": "controller",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7933,
                                      "src": "7197:10:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 8622,
                                    "name": "IController",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31644,
                                    "src": "7185:11:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IController_$31644_$",
                                      "typeString": "type(contract IController)"
                                    }
                                  },
                                  "id": 8624,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7185:23:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IController_$31644",
                                    "typeString": "contract IController"
                                  }
                                },
                                "id": 8625,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "rewards",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 31620,
                                "src": "7185:31:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                  "typeString": "function () view external returns (address)"
                                }
                              },
                              "id": 8626,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7185:33:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 8627,
                              "name": "_fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8599,
                              "src": "7220:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 8619,
                                  "name": "want",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7875,
                                  "src": "7166:4:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 8618,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30955,
                                "src": "7159:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$30955_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 8620,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7159:12:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$30955",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 8621,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30988,
                            "src": "7159:25:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$30955_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$30955_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 8628,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7159:66:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8629,
                        "nodeType": "ExpressionStatement",
                        "src": "7159:66:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 8634,
                              "name": "strategist",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7935,
                              "src": "7265:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 8635,
                              "name": "_reward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8609,
                              "src": "7277:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 8631,
                                  "name": "want",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7875,
                                  "src": "7246:4:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 8630,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30955,
                                "src": "7239:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$30955_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 8632,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7239:12:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$30955",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 8633,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30988,
                            "src": "7239:25:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$30955_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$30955_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 8636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7239:46:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8637,
                        "nodeType": "ExpressionStatement",
                        "src": "7239:46:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 8638,
                            "name": "deposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8162,
                            "src": "7299:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 8639,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7299:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8640,
                        "nodeType": "ExpressionStatement",
                        "src": "7299:9:20"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8644,
                            "name": "proxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7927,
                            "src": "7340:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8643,
                          "name": "IVoterProxy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32059,
                          "src": "7328:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IVoterProxy_$32059_$",
                            "typeString": "type(contract IVoterProxy)"
                          }
                        },
                        "id": 8645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7328:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoterProxy_$32059",
                          "typeString": "contract IVoterProxy"
                        }
                      },
                      "id": 8646,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32058,
                      "src": "7328:23:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 8647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7328:25:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8648,
                  "nodeType": "ExpressionStatement",
                  "src": "7328:25:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8649,
                      "name": "earned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7939,
                      "src": "7363:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 8652,
                          "name": "_want",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8585,
                          "src": "7383:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 8650,
                          "name": "earned",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7939,
                          "src": "7372:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 8651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30726,
                        "src": "7372:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 8653,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7372:17:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7363:26:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8655,
                  "nodeType": "ExpressionStatement",
                  "src": "7363:26:20"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8657,
                        "name": "_want",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8585,
                        "src": "7414:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8658,
                        "name": "earned",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7939,
                        "src": "7421:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8656,
                      "name": "Harvested",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7945,
                      "src": "7404:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 8659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7404:24:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8660,
                  "nodeType": "EmitStatement",
                  "src": "7399:29:20"
                }
              ]
            },
            "documentation": null,
            "id": 8662,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "harvest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8406,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5867:2:20"
            },
            "returnParameters": {
              "id": 8407,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5877:0:20"
            },
            "scope": 8740,
            "src": "5851:1584:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8676,
              "nodeType": "Block",
              "src": "7496:61:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8672,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33457,
                            "src": "7544:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StrategyCurveEURVoterProxy_$8740",
                              "typeString": "contract StrategyCurveEURVoterProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StrategyCurveEURVoterProxy_$8740",
                              "typeString": "contract StrategyCurveEURVoterProxy"
                            }
                          ],
                          "id": 8671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7536:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 8673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7536:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8668,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7875,
                            "src": "7520:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8667,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30955,
                          "src": "7513:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$30955_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 8669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7513:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$30955",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 8670,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30900,
                      "src": "7513:22:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 8674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7513:37:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 8666,
                  "id": 8675,
                  "nodeType": "Return",
                  "src": "7506:44:20"
                }
              ]
            },
            "documentation": null,
            "id": 8677,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOfWant",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8663,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7463:2:20"
            },
            "returnParameters": {
              "id": 8666,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8665,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8677,
                  "src": "7487:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8664,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7487:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7486:9:20"
            },
            "scope": 8740,
            "src": "7441:116:20",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8689,
              "nodeType": "Block",
              "src": "7618:59:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8686,
                        "name": "gauge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7890,
                        "src": "7664:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8683,
                            "name": "proxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7927,
                            "src": "7647:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8682,
                          "name": "IVoterProxy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32059,
                          "src": "7635:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IVoterProxy_$32059_$",
                            "typeString": "type(contract IVoterProxy)"
                          }
                        },
                        "id": 8684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7635:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoterProxy_$32059",
                          "typeString": "contract IVoterProxy"
                        }
                      },
                      "id": 8685,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32034,
                      "src": "7635:28:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 8687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7635:35:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 8681,
                  "id": 8688,
                  "nodeType": "Return",
                  "src": "7628:42:20"
                }
              ]
            },
            "documentation": null,
            "id": 8690,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOfPool",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8678,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7585:2:20"
            },
            "returnParameters": {
              "id": 8681,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8680,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8690,
                  "src": "7609:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8679,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7609:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7608:9:20"
            },
            "scope": 8740,
            "src": "7563:114:20",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8702,
              "nodeType": "Block",
              "src": "7734:60:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 8698,
                          "name": "balanceOfPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8690,
                          "src": "7771:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 8699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7771:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 8695,
                          "name": "balanceOfWant",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8677,
                          "src": "7751:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 8696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7751:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 8697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30726,
                      "src": "7751:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 8700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7751:36:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 8694,
                  "id": 8701,
                  "nodeType": "Return",
                  "src": "7744:43:20"
                }
              ]
            },
            "documentation": null,
            "id": 8703,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8691,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7701:2:20"
            },
            "returnParameters": {
              "id": 8694,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8693,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8703,
                  "src": "7725:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8692,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7725:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7724:9:20"
            },
            "scope": 8740,
            "src": "7683:111:20",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8720,
              "nodeType": "Block",
              "src": "7853:99:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 8709,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33369,
                            "src": "7871:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8710,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "7871:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 8711,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7931,
                          "src": "7885:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7871:24:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 8713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7897:13:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 8708,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        33372,
                        33373
                      ],
                      "referencedDeclaration": 33373,
                      "src": "7863:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7863:48:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8715,
                  "nodeType": "ExpressionStatement",
                  "src": "7863:48:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8716,
                      "name": "governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7931,
                      "src": "7921:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8717,
                      "name": "_governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8705,
                      "src": "7934:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7921:24:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8719,
                  "nodeType": "ExpressionStatement",
                  "src": "7921:24:20"
                }
              ]
            },
            "documentation": null,
            "id": 8721,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setGovernance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8706,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8705,
                  "name": "_governance",
                  "nodeType": "VariableDeclaration",
                  "scope": 8721,
                  "src": "7823:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8704,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7823:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7822:21:20"
            },
            "returnParameters": {
              "id": 8707,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7853:0:20"
            },
            "scope": 8740,
            "src": "7800:152:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8738,
              "nodeType": "Block",
              "src": "8011:99:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 8727,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33369,
                            "src": "8029:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8728,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "8029:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 8729,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7931,
                          "src": "8043:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8029:24:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 8731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8055:13:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 8726,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        33372,
                        33373
                      ],
                      "referencedDeclaration": 33373,
                      "src": "8021:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8021:48:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8733,
                  "nodeType": "ExpressionStatement",
                  "src": "8021:48:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8734,
                      "name": "controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7933,
                      "src": "8079:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8735,
                      "name": "_controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8723,
                      "src": "8092:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8079:24:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8737,
                  "nodeType": "ExpressionStatement",
                  "src": "8079:24:20"
                }
              ]
            },
            "documentation": null,
            "id": 8739,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setController",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8724,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8723,
                  "name": "_controller",
                  "nodeType": "VariableDeclaration",
                  "scope": 8739,
                  "src": "7981:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8722,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7981:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7980:21:20"
            },
            "returnParameters": {
              "id": 8725,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8011:0:20"
            },
            "scope": 8740,
            "src": "7958:152:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 8741,
        "src": "565:7547:20"
      }
    ],
    "src": "38:8075:20"
  },
  "bytecode": "60806040526101f46000556103e86001556103e8600255600060035534801561002757600080fd5b506040516123c73803806123c78339818101604052602081101561004a57600080fd5b5051600680546001600160a01b03199081163390811790925560088054821683179055600980548216909217909155600780546001600160a01b039093169282169290921790915560048054821673c17adf949f524213a540609c386035d7d685b16f17905560058054909116737a250d5630b4cf539739df2c5dacb4c659f2488d1790556122e9806100de6000396000f3fe608060405234801561001057600080fd5b50600436106102325760003560e01c80637fef901a11610130578063ac1e5025116100b8578063d0e30db01161007c578063d0e30db014610501578063d6f1926214610509578063d73792a914610511578063ec55688914610519578063f77c47911461052157610232565b8063ac1e5025146104a6578063aced1661146104c3578063c1a3d44c146104cb578063c7b9d530146104d3578063cc32d176146104f957610232565b806392eefe9b116100ff57806392eefe9b1461040f578063955383bd1461043557806397107d6d14610452578063a6f19c8414610478578063ab033ea91461048057610232565b80637fef901a146103ef5780638158676e146103f7578063853828b6146103ff5780638bc7e8c41461040757610232565b806346c96aac116101be5780636a4874a1116101825780636a4874a1146103945780637165485d1461039c578063722713f7146103a4578063748747e6146103ac57806377e741c7146103d257610232565b806346c96aac1461034e5780634886654e1461035657806351cff8d91461035e5780635aa6e67514610384578063692058c21461038c57610232565b80631fe4a686116102055780631fe4a686146103115780632e1a7d4d146103195780633e413bee146103365780633fc8cef31461033e5780634641257d1461034657610232565b80630d596cdf14610237578063115880861461025657806317d7de7c146102705780631f1fcd51146102ed575b600080fd5b6102546004803603602081101561024d57600080fd5b5035610529565b005b61025e61057b565b60408051918252519081900360200190f35b61027861060f565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102b257818101518382015260200161029a565b50505050905090810190601f1680156102df5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102f5610646565b604080516001600160a01b039092168252519081900360200190f35b6102f5610658565b6102546004803603602081101561032f57600080fd5b5035610667565b6102f561092b565b6102f5610943565b61025461095b565b6102f5611188565b6102f56111a0565b61025e6004803603602081101561037457600080fd5b50356001600160a01b03166111b8565b6102f56113aa565b6102f56113b9565b6102f56113c8565b6102f56113e0565b61025e6113f8565b610254600480360360208110156103c257600080fd5b50356001600160a01b031661141e565b610254600480360360208110156103e857600080fd5b50356114a2565b61025e6114f4565b61025e6114fa565b61025e611500565b61025e6116c3565b6102546004803603602081101561042557600080fd5b50356001600160a01b03166116c9565b6102546004803603602081101561044b57600080fd5b5035611738565b6102546004803603602081101561046857600080fd5b50356001600160a01b031661178a565b6102f56117f9565b6102546004803603602081101561049657600080fd5b50356001600160a01b0316611811565b610254600480360360208110156104bc57600080fd5b5035611880565b6102f56118d2565b61025e6118e1565b610254600480360360208110156104e957600080fd5b50356001600160a01b0316611930565b61025e6119b4565b6102546119ba565b61025e611afa565b61025e611b00565b6102f5611b06565b6102f5611b15565b6006546001600160a01b03163314610576576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600255565b60048054604080516370a0823160e01b81527390bb609649e0451e5ad952683d64bd2d1f24584093810193909352516000926001600160a01b03909216916370a08231916024808301926020929190829003018186803b1580156105de57600080fd5b505afa1580156105f2573d6000803e3d6000fd5b505050506040513d602081101561060857600080fd5b5051905090565b60408051808201909152601a81527f53747261746567794375727665455552566f74657250726f7879000000000000602082015290565b60008051602061221483398151915281565b6008546001600160a01b031681565b6007546001600160a01b031633146106b4576040805162461bcd60e51b815260206004820152600b60248201526a10b1b7b73a3937b63632b960a91b604482015290519081900360640190fd5b604080516370a0823160e01b81523060048201529051600091600080516020612214833981519152916370a0823191602480820192602092909190829003018186803b15801561070357600080fd5b505afa158015610717573d6000803e3d6000fd5b505050506040513d602081101561072d57600080fd5b50519050818110156107665761075161074c838363ffffffff611b2416565b611b6f565b9150610763828263ffffffff611c2016565b91505b600061078f61271061078360035486611c7a90919063ffffffff16565b9063ffffffff611cd316565b905061082a600760009054906101000a90046001600160a01b03166001600160a01b0316639ec5a8946040518163ffffffff1660e01b815260040160206040518083038186803b1580156107e257600080fd5b505afa1580156107f6573d6000803e3d6000fd5b505050506040513d602081101561080c57600080fd5b5051600080516020612214833981519152908363ffffffff611d1516565b60075460408051632988bb9f60e21b8152600080516020612214833981519152600482015290516000926001600160a01b03169163a622ee7c916024808301926020929190829003018186803b15801561088357600080fd5b505afa158015610897573d6000803e3d6000fd5b505050506040513d60208110156108ad57600080fd5b505190506001600160a01b0381166108f5576040805162461bcd60e51b8152602060048201526006602482015265085d985d5b1d60d21b604482015290519081900360640190fd5b61092581610909868563ffffffff611b2416565b600080516020612214833981519152919063ffffffff611d1516565b50505050565b73a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4881565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b6009546001600160a01b031633148061097e57506008546001600160a01b031633145b8061099357506006546001600160a01b031633145b6109cf576040805162461bcd60e51b8152602060048201526008602482015267216b65657065727360c01b604482015290519081900360640190fd5b600480546040805163072e008f60e11b81527390bb609649e0451e5ad952683d64bd2d1f24584093810193909352516001600160a01b0390911691630e5c011e91602480830192600092919082900301818387803b158015610a3057600080fd5b505af1158015610a44573d6000803e3d6000fd5b5050604080516370a0823160e01b815230600482015290516000935073d533a949740bb3306d119cc777fa900ba034cd5292506370a0823191602480820192602092909190829003018186803b158015610a9d57600080fd5b505afa158015610ab1573d6000803e3d6000fd5b505050506040513d6020811015610ac757600080fd5b505190508015610d9f576000610aee61271061078360005485611c7a90919063ffffffff16565b9050610b2973d533a949740bb3306d119cc777fa900ba034cd5273f147b8125d2ef93fb6965db97d6746952a1339348363ffffffff611d1516565b610b39828263ffffffff611b2416565b600554909250610b6f9073d533a949740bb3306d119cc777fa900ba034cd52906001600160a01b0316600063ffffffff611d6c16565b600554610ba19073d533a949740bb3306d119cc777fa900ba034cd52906001600160a01b03168463ffffffff611d6c16565b60408051600480825260a082019092526060916020820160808038833901905050905073d533a949740bb3306d119cc777fa900ba034cd5281600081518110610be657fe5b60200260200101906001600160a01b031690816001600160a01b03168152505073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281600181518110610c2857fe5b60200260200101906001600160a01b031690816001600160a01b03168152505073a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4881600281518110610c6a57fe5b60200260200101906001600160a01b031690816001600160a01b03168152505073db25f211ab05b1c97d595516f45794528a807ad881600381518110610cac57fe5b6001600160a01b039283166020918202929092010152600554166338ed17398460008430610ce24261070863ffffffff611c2016565b6040518663ffffffff1660e01b81526004018086815260200185815260200180602001846001600160a01b03166001600160a01b03168152602001838152602001828103825285818151815260200191508051906020019060200280838360005b83811015610d5b578181015183820152602001610d43565b505050509050019650505050505050600060405180830381600087803b158015610d8457600080fd5b505af1158015610d98573d6000803e3d6000fd5b5050505050505b604080516370a0823160e01b8152306004820152905160009173db25f211ab05b1c97d595516f45794528a807ad8916370a0823191602480820192602092909190829003018186803b158015610df457600080fd5b505afa158015610e08573d6000803e3d6000fd5b505050506040513d6020811015610e1e57600080fd5b505190508015610f4357610e6273db25f211ab05b1c97d595516f45794528a807ad8730ce6a5ff5217e38315f87032cf90686c96627caa600063ffffffff611d6c16565b610e9b73db25f211ab05b1c97d595516f45794528a807ad8730ce6a5ff5217e38315f87032cf90686c96627caa8363ffffffff611d6c16565b6040805180820182528281526000602082018190528251630b4c7e4d60e01b8152730ce6a5ff5217e38315f87032cf90686c96627caa93630b4c7e4d9392916004019081908490808383875b83811015610eff578181015183820152602001610ee7565b5050505090500182815260200192505050600060405180830381600087803b158015610f2a57600080fd5b505af1158015610f3e573d6000803e3d6000fd5b505050505b604080516370a0823160e01b81523060048201529051600091600080516020612214833981519152916370a0823191602480820192602092909190829003018186803b158015610f9257600080fd5b505afa158015610fa6573d6000803e3d6000fd5b505050506040513d6020811015610fbc57600080fd5b5051905080156110d4576000610fe361271061078360015485611c7a90919063ffffffff16565b9050600061100261271061078360025486611c7a90919063ffffffff16565b905061109d600760009054906101000a90046001600160a01b03166001600160a01b0316639ec5a8946040518163ffffffff1660e01b815260040160206040518083038186803b15801561105557600080fd5b505afa158015611069573d6000803e3d6000fd5b505050506040513d602081101561107f57600080fd5b5051600080516020612214833981519152908463ffffffff611d1516565b6008546110c990600080516020612214833981519152906001600160a01b03168363ffffffff611d1516565b6110d16119ba565b50505b6004805460408051637c1e845d60e11b815290516001600160a01b039092169263f83d08ba92828201926000929082900301818387803b15801561111757600080fd5b505af115801561112b573d6000803e3d6000fd5b5050600a54611143925090508263ffffffff611c2016565b600a81905560408051838152602081019290925280517ffa07446fad45314351eb89109a154880278451332bb87f1824d435fe58da59399281900390910190a1505050565b73f147b8125d2ef93fb6965db97d6746952a13393481565b73db25f211ab05b1c97d595516f45794528a807ad881565b6007546000906001600160a01b03163314611208576040805162461bcd60e51b815260206004820152600b60248201526a10b1b7b73a3937b63632b960a91b604482015290519081900360640190fd5b6000805160206122148339815191526001600160a01b038316141561125d576040805162461bcd60e51b815260206004808301919091526024820152631dd85b9d60e21b604482015290519081900360640190fd5b73d533a949740bb3306d119cc777fa900ba034cd526001600160a01b03831614156112b5576040805162461bcd60e51b815260206004820152600360248201526231b93b60e91b604482015290519081900360640190fd5b73db25f211ab05b1c97d595516f45794528a807ad86001600160a01b0383161415611310576040805162461bcd60e51b815260206004808301919091526024820152636575727360e01b604482015290519081900360640190fd5b604080516370a0823160e01b815230600482015290516001600160a01b038416916370a08231916024808301926020929190829003018186803b15801561135657600080fd5b505afa15801561136a573d6000803e3d6000fd5b505050506040513d602081101561138057600080fd5b50516007549091506113a5906001600160a01b0384811691168363ffffffff611d1516565b919050565b6006546001600160a01b031681565b6005546001600160a01b031681565b73d533a949740bb3306d119cc777fa900ba034cd5281565b730ce6a5ff5217e38315f87032cf90686c96627caa81565b600061141961140561057b565b61140d6118e1565b9063ffffffff611c2016565b905090565b6008546001600160a01b031633148061144157506006546001600160a01b031633145b611480576040805162461bcd60e51b815260206004820152600b60248201526a08585d5d1a1bdc9a5e995960aa1b604482015290519081900360640190fd5b600980546001600160a01b0319166001600160a01b0392909216919091179055565b6006546001600160a01b031633146114ef576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600155565b60005481565b60025481565b6007546000906001600160a01b03163314611550576040805162461bcd60e51b815260206004820152600b60248201526a10b1b7b73a3937b63632b960a91b604482015290519081900360640190fd5b611558611e7f565b604080516370a0823160e01b81523060048201529051600080516020612214833981519152916370a08231916024808301926020929190829003018186803b1580156115a357600080fd5b505afa1580156115b7573d6000803e3d6000fd5b505050506040513d60208110156115cd57600080fd5b505160075460408051632988bb9f60e21b8152600080516020612214833981519152600482015290519293506000926001600160a01b039092169163a622ee7c91602480820192602092909190829003018186803b15801561162e57600080fd5b505afa158015611642573d6000803e3d6000fd5b505050506040513d602081101561165857600080fd5b505190506001600160a01b0381166116a0576040805162461bcd60e51b8152602060048201526006602482015265085d985d5b1d60d21b604482015290519081900360640190fd5b6116bf600080516020612214833981519152828463ffffffff611d1516565b5090565b60035481565b6006546001600160a01b03163314611716576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600780546001600160a01b0319166001600160a01b0392909216919091179055565b6006546001600160a01b03163314611785576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600055565b6006546001600160a01b031633146117d7576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b7390bb609649e0451e5ad952683d64bd2d1f24584081565b6006546001600160a01b0316331461185e576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6006546001600160a01b031633146118cd576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600355565b6009546001600160a01b031681565b604080516370a0823160e01b81523060048201529051600091600080516020612214833981519152916370a0823191602480820192602092909190829003018186803b1580156105de57600080fd5b6008546001600160a01b031633148061195357506006546001600160a01b031633145b611992576040805162461bcd60e51b815260206004820152600b60248201526a08585d5d1a1bdc9a5e995960aa1b604482015290519081900360640190fd5b600880546001600160a01b0319166001600160a01b0392909216919091179055565b60015481565b604080516370a0823160e01b81523060048201529051600091600080516020612214833981519152916370a0823191602480820192602092909190829003018186803b158015611a0957600080fd5b505afa158015611a1d573d6000803e3d6000fd5b505050506040513d6020811015611a3357600080fd5b505190508015611af757600454611a6990600080516020612214833981519152906001600160a01b03168363ffffffff611d1516565b6004805460408051631f2c13e160e31b81527390bb609649e0451e5ad952683d64bd2d1f245840938101939093526000805160206122148339815191526024840152516001600160a01b039091169163f9609f0891604480830192600092919082900301818387803b158015611ade57600080fd5b505af1158015611af2573d6000803e3d6000fd5b505050505b50565b600a5481565b61271081565b6004546001600160a01b031681565b6007546001600160a01b031681565b6000611b6683836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611f23565b90505b92915050565b6004805460408051636ce5768960e11b81527390bb609649e0451e5ad952683d64bd2d1f24584093810193909352600080516020612214833981519152602484015260448301849052516000926001600160a01b039092169163d9caed1291606480830192602092919082900301818787803b158015611bee57600080fd5b505af1158015611c02573d6000803e3d6000fd5b505050506040513d6020811015611c1857600080fd5b505192915050565b600082820183811015611b66576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600082611c8957506000611b69565b82820282848281611c9657fe5b0414611b665760405162461bcd60e51b81526004018080602001828103825260218152602001806122346021913960400191505060405180910390fd5b6000611b6683836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611fba565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052611d6790849061201f565b505050565b801580611df2575060408051636eb1769f60e11b81523060048201526001600160a01b03848116602483015291519185169163dd62ed3e91604480820192602092909190829003018186803b158015611dc457600080fd5b505afa158015611dd8573d6000803e3d6000fd5b505050506040513d6020811015611dee57600080fd5b5051155b611e2d5760405162461bcd60e51b815260040180806020018281038252603681526020018061227f6036913960400191505060405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b179052611d6790849061201f565b60048054604080516301395c5960e31b81527390bb609649e0451e5ad952683d64bd2d1f245840938101939093526000805160206122148339815191526024840152516001600160a01b03909116916309cae2c89160448083019260209291908290030181600087803b158015611ef557600080fd5b505af1158015611f09573d6000803e3d6000fd5b505050506040513d6020811015611f1f57600080fd5b5050565b60008184841115611fb25760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611f77578181015183820152602001611f5f565b50505050905090810190601f168015611fa45780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600081836120095760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315611f77578181015183820152602001611f5f565b50600083858161201557fe5b0495945050505050565b612031826001600160a01b03166121d7565b612082576040805162461bcd60e51b815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b60006060836001600160a01b0316836040518082805190602001908083835b602083106120c05780518252601f1990920191602091820191016120a1565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114612122576040519150601f19603f3d011682016040523d82523d6000602084013e612127565b606091505b50915091508161217e576040805162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b8051156109255780806020019051602081101561219a57600080fd5b50516109255760405162461bcd60e51b815260040180806020018281038252602a815260200180612255602a913960400191505060405180910390fd5b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061220b57508115155b94935050505056fe000000000000000000000000194ebd173f6cdace046c53eacce9b953f28411d1536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365a265627a7a72315820ff525f20b84cf8ff62f4bd1e786846ebfe93a91aa55d780605f382e28ea14b7d64736f6c63430005110032",
  "bytecodeSha1": "1de77e6b7463217bb44da872e7dd28ce572e19ce",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.5.17+commit.d19bba13"
  },
  "contractName": "StrategyCurveEURVoterProxy",
  "coverageMap": {
    "branches": {
      "1": {
        "SafeMath.add": {
          "108": [
            946,
            952,
            true
          ]
        },
        "SafeMath.div": {
          "112": [
            3897,
            3902,
            true
          ]
        },
        "SafeMath.mul": {
          "109": [
            2458,
            2464,
            false
          ],
          "110": [
            2544,
            2554,
            true
          ]
        },
        "SafeMath.sub": {
          "111": [
            1845,
            1851,
            true
          ]
        }
      },
      "20": {
        "StrategyCurveEURVoterProxy.deposit": {
          "103": [
            3716,
            3725,
            false
          ]
        },
        "StrategyCurveEURVoterProxy.harvest": {
          "81": [
            5895,
            5915,
            true
          ],
          "82": [
            5919,
            5943,
            true
          ],
          "83": [
            5947,
            5971,
            true
          ],
          "84": [
            6102,
            6110,
            false
          ],
          "85": [
            6726,
            6735,
            false
          ],
          "86": [
            6982,
            6991,
            false
          ]
        },
        "StrategyCurveEURVoterProxy.setController": {
          "96": [
            8029,
            8053,
            true
          ]
        },
        "StrategyCurveEURVoterProxy.setGovernance": {
          "99": [
            7871,
            7895,
            true
          ]
        },
        "StrategyCurveEURVoterProxy.setKeepCRV": {
          "97": [
            2880,
            2904,
            true
          ]
        },
        "StrategyCurveEURVoterProxy.setKeeper": {
          "91": [
            2708,
            2732,
            true
          ],
          "92": [
            2736,
            2760,
            true
          ]
        },
        "StrategyCurveEURVoterProxy.setProxy": {
          "98": [
            3536,
            3560,
            true
          ]
        },
        "StrategyCurveEURVoterProxy.setStrategist": {
          "101": [
            2530,
            2554,
            true
          ],
          "102": [
            2558,
            2582,
            true
          ]
        },
        "StrategyCurveEURVoterProxy.setStrategistReward": {
          "77": [
            3376,
            3400,
            true
          ]
        },
        "StrategyCurveEURVoterProxy.setTreasuryFee": {
          "93": [
            3204,
            3228,
            true
          ]
        },
        "StrategyCurveEURVoterProxy.setWithdrawalFee": {
          "100": [
            3038,
            3062,
            true
          ]
        },
        "StrategyCurveEURVoterProxy.withdraw": {
          "78": [
            4449,
            4473,
            true
          ],
          "79": [
            4569,
            4587,
            false
          ],
          "80": [
            4944,
            4964,
            true
          ],
          "87": [
            4016,
            4040,
            true
          ],
          "88": [
            4074,
            4097,
            true
          ],
          "89": [
            4124,
            4146,
            true
          ],
          "90": [
            4172,
            4195,
            true
          ]
        },
        "StrategyCurveEURVoterProxy.withdrawAll": {
          "94": [
            5391,
            5415,
            true
          ],
          "95": [
            5604,
            5624,
            true
          ]
        }
      },
      "5": {},
      "51": {},
      "6": {
        "SafeERC20.callOptionalReturn": {
          "104": [
            3261,
            3288,
            true
          ],
          "105": [
            3479,
            3486,
            true
          ],
          "106": [
            3538,
            3559,
            false
          ],
          "107": [
            3667,
            3697,
            true
          ]
        }
      },
      "60": {},
      "62": {},
      "7": {},
      "71": {}
    },
    "statements": {
      "1": {
        "SafeMath.add": {
          "63": [
            938,
            984
          ]
        },
        "SafeMath.div": {
          "66": [
            3150,
            3196
          ],
          "72": [
            3889,
            3917
          ]
        },
        "SafeMath.mul": {
          "64": [
            2480,
            2488
          ],
          "65": [
            2536,
            2592
          ]
        },
        "SafeMath.sub": {
          "61": [
            1351,
            1401
          ],
          "71": [
            1837,
            1866
          ]
        }
      },
      "20": {
        "StrategyCurveEURVoterProxy._withdrawAll": {
          "70": [
            5795,
            5838
          ]
        },
        "StrategyCurveEURVoterProxy._withdrawSome": {
          "62": [
            5179,
            5235
          ]
        },
        "StrategyCurveEURVoterProxy.balanceOf": {
          "36": [
            7744,
            7787
          ]
        },
        "StrategyCurveEURVoterProxy.balanceOfPool": {
          "2": [
            7628,
            7670
          ]
        },
        "StrategyCurveEURVoterProxy.balanceOfWant": {
          "56": [
            7506,
            7550
          ]
        },
        "StrategyCurveEURVoterProxy.deposit": {
          "59": [
            3741,
            3780
          ],
          "60": [
            3794,
            3833
          ]
        },
        "StrategyCurveEURVoterProxy.getName": {
          "3": [
            2411,
            2446
          ]
        },
        "StrategyCurveEURVoterProxy.harvest": {
          "10": [
            5887,
            5984
          ],
          "11": [
            5994,
            6027
          ],
          "12": [
            6197,
            6238
          ],
          "13": [
            6252,
            6277
          ],
          "14": [
            6292,
            6323
          ],
          "15": [
            6337,
            6371
          ],
          "16": [
            6440,
            6453
          ],
          "17": [
            6467,
            6481
          ],
          "18": [
            6495,
            6509
          ],
          "19": [
            6523,
            6537
          ],
          "20": [
            6552,
            6639
          ],
          "21": [
            6751,
            6785
          ],
          "22": [
            6799,
            6837
          ],
          "23": [
            6851,
            6895
          ],
          "24": [
            7159,
            7225
          ],
          "25": [
            7239,
            7285
          ],
          "26": [
            7299,
            7308
          ],
          "27": [
            7328,
            7353
          ],
          "28": [
            7363,
            7389
          ],
          "29": [
            7399,
            7428
          ]
        },
        "StrategyCurveEURVoterProxy.setController": {
          "46": [
            8021,
            8069
          ],
          "47": [
            8079,
            8103
          ]
        },
        "StrategyCurveEURVoterProxy.setGovernance": {
          "52": [
            7863,
            7911
          ],
          "53": [
            7921,
            7945
          ]
        },
        "StrategyCurveEURVoterProxy.setKeepCRV": {
          "48": [
            2872,
            2920
          ],
          "49": [
            2930,
            2948
          ]
        },
        "StrategyCurveEURVoterProxy.setKeeper": {
          "37": [
            2700,
            2776
          ],
          "38": [
            2786,
            2802
          ]
        },
        "StrategyCurveEURVoterProxy.setProxy": {
          "50": [
            3528,
            3576
          ],
          "51": [
            3586,
            3600
          ]
        },
        "StrategyCurveEURVoterProxy.setStrategist": {
          "57": [
            2522,
            2598
          ],
          "58": [
            2608,
            2632
          ]
        },
        "StrategyCurveEURVoterProxy.setStrategistReward": {
          "0": [
            3368,
            3416
          ],
          "1": [
            3426,
            3462
          ]
        },
        "StrategyCurveEURVoterProxy.setTreasuryFee": {
          "39": [
            3196,
            3244
          ],
          "40": [
            3254,
            3280
          ]
        },
        "StrategyCurveEURVoterProxy.setWithdrawalFee": {
          "54": [
            3030,
            3078
          ],
          "55": [
            3088,
            3118
          ]
        },
        "StrategyCurveEURVoterProxy.withdraw": {
          "4": [
            4441,
            4489
          ],
          "5": [
            4603,
            4649
          ],
          "6": [
            4663,
            4694
          ],
          "7": [
            4788,
            4854
          ],
          "8": [
            4936,
            4975
          ],
          "9": [
            5037,
            5089
          ],
          "30": [
            4008,
            4056
          ],
          "31": [
            4066,
            4106
          ],
          "32": [
            4116,
            4154
          ],
          "33": [
            4164,
            4204
          ],
          "34": [
            4214,
            4255
          ],
          "35": [
            4265,
            4305
          ]
        },
        "StrategyCurveEURVoterProxy.withdrawAll": {
          "41": [
            5383,
            5431
          ],
          "42": [
            5441,
            5455
          ],
          "43": [
            5466,
            5513
          ],
          "44": [
            5596,
            5635
          ],
          "45": [
            5697,
            5739
          ]
        }
      },
      "5": {},
      "51": {},
      "6": {
        "SafeERC20.callOptionalReturn": {
          "73": [
            3253,
            3324
          ],
          "74": [
            3471,
            3523
          ],
          "75": [
            3659,
            3744
          ]
        },
        "SafeERC20.safeApprove": {
          "68": [
            1406,
            1556
          ],
          "69": [
            1566,
            1655
          ]
        },
        "SafeERC20.safeTransfer": {
          "67": [
            744,
            829
          ]
        }
      },
      "60": {},
      "62": {},
      "7": {
        "Address.isContract": {
          "76": [
            1238,
            1289
          ]
        }
      },
      "71": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@2.5.1/Address",
    "IController",
    "ICurveFi",
    "OpenZeppelin/openzeppelin-contracts@2.5.1/IERC20",
    "IVoterProxy",
    "OpenZeppelin/openzeppelin-contracts@2.5.1/SafeERC20",
    "OpenZeppelin/openzeppelin-contracts@2.5.1/SafeMath",
    "Uni"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "565:7547:20:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;565:7547:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3293:176;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3293:176:20;;:::i;:::-;;7563:114;;;:::i;:::-;;;;;;;;;;;;;;;;2344:109;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2344:109:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;703:82;;;:::i;:::-;;;;-1:-1:-1;;;;;703:82:20;;;;;;;;;;;;;;1780:25;;;:::i;4387:709::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4387:709:20;;:::i;1235:82::-;;;:::i;1323:::-;;;:::i;5851:1584::-;;;:::i;1057:83::-;;;:::i;1147:82::-;;;:::i;3930:382::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3930:382:20;-1:-1:-1;;;;;3930:382:20;;:::i;1718:25::-;;;:::i;1693:18::-;;;:::i;791:81::-;;;:::i;879:83::-;;;:::i;7683:111::-;;;:::i;2645:164::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2645:164:20;-1:-1:-1;;;;;2645:164:20;;:::i;3131:156::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3131:156:20;;:::i;1458:28::-;;;:::i;1531:38::-;;;:::i;5315:431::-;;;:::i;1575:32::-;;;:::i;7958:152::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7958:152:20;-1:-1:-1;;;;;7958:152:20;;:::i;2815:140::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2815:140:20;;:::i;3475:132::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3475:132:20;-1:-1:-1;;;;;3475:132:20;;:::i;968:83::-;;;:::i;7800:152::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7800:152:20;-1:-1:-1;;;;;7800:152:20;;:::i;2961:164::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2961:164:20;;:::i;1811:21::-;;;:::i;7441:116::-;;;:::i;2459:180::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2459:180:20;-1:-1:-1;;;;;2459:180:20;;:::i;1492:33::-;;;:::i;3613:237::-;;;:::i;1839:21::-;;;:::i;1613:47::-;;;:::i;1667:20::-;;;:::i;1749:25::-;;;:::i;3293:176::-;3390:10;;-1:-1:-1;;;;;3390:10:20;3376;:24;3368:48;;;;;-1:-1:-1;;;3368:48:20;;;;;;;;;;;;-1:-1:-1;;;3368:48:20;;;;;;;;;;;;;;;3426:16;:36;3293:176::o;7563:114::-;7647:5;;;7635:35;;;-1:-1:-1;;;7635:35:20;;1008:42;7635:35;;;;;;;;7609:7;;-1:-1:-1;;;;;7647:5:20;;;;7635:28;;:35;;;;;;;;;;;;;;7647:5;7635:35;;;5:2:-1;;;;30:1;27;20:12;5:2;7635:35:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7635:35:20;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7635:35:20;;-1:-1:-1;7563:114:20;:::o;2344:109::-;2411:35;;;;;;;;;;;;;;;;;2344:109;:::o;703:82::-;-1:-1:-1;;;;;;;;;;;703:82:20;:::o;1780:25::-;;;-1:-1:-1;;;;;1780:25:20;;:::o;4387:709::-;4463:10;;-1:-1:-1;;;;;4463:10:20;4449;:24;4441:48;;;;;-1:-1:-1;;;4441:48:20;;;;;;;;;;;;-1:-1:-1;;;4441:48:20;;;;;;;;;;;;;;;4518:37;;;-1:-1:-1;;;4518:37:20;;4549:4;4518:37;;;;;;4499:16;;-1:-1:-1;;;;;;;;;;;742:42:20;4518:22;;:37;;;;;;;;;;;;;;;742:42;4518:37;;;5:2:-1;;;;30:1;27;20:12;5:2;4518:37:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4518:37:20;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4518:37:20;;-1:-1:-1;4569:18:20;;;4565:140;;;4613:36;4627:21;:7;4639:8;4627:21;:11;:21;:::i;:::-;4613:13;:36::i;:::-;4603:46;-1:-1:-1;4673:21:20;4603:46;4685:8;4673:21;:11;:21;:::i;:::-;4663:31;;4565:140;4715:12;4730:47;1655:5;4730:26;4742:13;;4730:7;:11;;:26;;;;:::i;:::-;:30;:47;:30;:47;:::i;:::-;4715:62;;4788:66;4826:10;;;;;;;;;-1:-1:-1;;;;;4826:10:20;-1:-1:-1;;;;;4814:31:20;;:33;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4814:33:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4814:33:20;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4814:33:20;-1:-1:-1;;;;;;;;;;;742:42:20;4849:4;4788:66;:25;:66;:::i;:::-;4893:10;;4881:45;;;-1:-1:-1;;;4881:45:20;;-1:-1:-1;;;;;;;;;;;4881:45:20;;;;;;4864:14;;-1:-1:-1;;;;;4893:10:20;;4881:30;;:45;;;;;;;;;;;;;;4893:10;4881:45;;;5:2:-1;;;;30:1;27;20:12;5:2;4881:45:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4881:45:20;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4881:45:20;;-1:-1:-1;;;;;;4944:20:20;;4936:39;;;;;-1:-1:-1;;;4936:39:20;;;;;;;;;;;;-1:-1:-1;;;4936:39:20;;;;;;;;;;;;;;;5037:52;5063:6;5071:17;:7;5083:4;5071:17;:11;:17;:::i;:::-;-1:-1:-1;;;;;;;;;;;742:42:20;5037:52;;:25;:52;:::i;:::-;4387:709;;;;:::o;1235:82::-;1274:42;1235:82;:::o;1323:::-;1362:42;1323:82;:::o;5851:1584::-;5909:6;;-1:-1:-1;;;;;5909:6:20;5895:10;:20;;:48;;-1:-1:-1;5933:10:20;;-1:-1:-1;;;;;5933:10:20;5919;:24;5895:48;:76;;;-1:-1:-1;5961:10:20;;-1:-1:-1;;;;;5961:10:20;5947;:24;5895:76;5887:97;;;;;-1:-1:-1;;;5887:97:20;;;;;;;;;;;;-1:-1:-1;;;5887:97:20;;;;;;;;;;;;;;;6006:5;;;5994:33;;;-1:-1:-1;;;5994:33:20;;1008:42;5994:33;;;;;;;;-1:-1:-1;;;;;6006:5:20;;;;5994:26;;:33;;;;;6006:5;;5994:33;;;;;;;6006:5;;5994:33;;;5:2:-1;;;;30:1;27;20:12;5:2;5994:33:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;6052:36:20;;;-1:-1:-1;;;6052:36:20;;6082:4;6052:36;;;;;;6037:12;;-1:-1:-1;829:42:20;;-1:-1:-1;6052:21:20;;:36;;;;;;;;;;;;;;;829:42;6052:36;;;5:2:-1;;;;30:1;27;20:12;5:2;6052:36:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6052:36:20;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6052:36:20;;-1:-1:-1;6102:8:20;;6098:552;;6126:16;6145:38;1655:5;6145:17;6154:7;;6145:4;:8;;:17;;;;:::i;:38::-;6126:57;-1:-1:-1;6197:41:20;829:42;1097;6126:57;6197:41;:24;:41;:::i;:::-;6259:18;:4;6268:8;6259:18;:8;:18;:::i;:::-;6316:3;;6252:25;;-1:-1:-1;6292:31:20;;829:42;;-1:-1:-1;;;;;6316:3:20;;6292:31;:23;:31;:::i;:::-;6361:3;;6337:34;;829:42;;-1:-1:-1;;;;;6361:3:20;6366:4;6337:34;:23;:34;:::i;:::-;6410:16;;;6424:1;6410:16;;;;;;;;;6386:21;;6410:16;;;17:15:-1;;105:10;6410:16:20;88:34:-1;136:17;;-1:-1;6410:16:20;6386:40;;829:42;6440:4;6445:1;6440:7;;;;;;;;;;;;;:13;-1:-1:-1;;;;;6440:13:20;;;-1:-1:-1;;;;;6440:13:20;;;;;1362:42;6467:4;6472:1;6467:7;;;;;;;;;;;;;:14;-1:-1:-1;;;;;6467:14:20;;;-1:-1:-1;;;;;6467:14:20;;;;;1274:42;6495:4;6500:1;6495:7;;;;;;;;;;;;;:14;-1:-1:-1;;;;;6495:14:20;;;-1:-1:-1;;;;;6495:14:20;;;;;1186:42;6523:4;6528:1;6523:7;;;;;;;;-1:-1:-1;;;;;6523:14:20;;;:7;;;;;;;;;:14;6556:3;;;6552:33;6586:4;6556:3;6604:4;6618;6625:13;:3;6633:4;6625:13;:7;:13;:::i;:::-;6552:87;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6552:87:20;-1:-1:-1;;;;;6552:87:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;6552:87:20;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6552:87:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6552:87:20;;;;6098:552;;;6675:37;;;-1:-1:-1;;;6675:37:20;;6706:4;6675:37;;;;;;6659:13;;1186:42;;6675:22;;:37;;;;;;;;;;;;;;;1186:42;6675:37;;;5:2:-1;;;;30:1;27;20:12;5:2;6675:37:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6675:37:20;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6675:37:20;;-1:-1:-1;6726:9:20;;6722:184;;6751:34;1186:42;919;6783:1;6751:34;:24;:34;:::i;:::-;6799:38;1186:42;919;6831:5;6799:38;:24;:38;:::i;:::-;6851:44;;;;;;;;;;;-1:-1:-1;6851:44:20;;;;;;;;-1:-1:-1;;;6851:44:20;;919:42;;6851:29;;:44;-1:-1:-1;6851:44:20;;;;;;;;;;-1:-1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;6851:44:20;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6851:44:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6851:44:20;;;;6722:184;6931:37;;;-1:-1:-1;;;6931:37:20;;6962:4;6931:37;;;;;;6915:13;;-1:-1:-1;;;;;;;;;;;742:42:20;6931:22;;:37;;;;;;;;;;;;;;;742:42;6931:37;;;5:2:-1;;;;30:1;27;20:12;5:2;6931:37:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6931:37:20;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6931:37:20;;-1:-1:-1;6982:9:20;;6978:341;;7007:12;7022:43;1655:5;7022:22;7032:11;;7022:5;:9;;:22;;;;:::i;:43::-;7007:58;;7079:15;7097:48;1655:5;7097:27;7107:16;;7097:5;:9;;:27;;;;:::i;:48::-;7079:66;;7159;7197:10;;;;;;;;;-1:-1:-1;;;;;7197:10:20;-1:-1:-1;;;;;7185:31:20;;:33;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7185:33:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7185:33:20;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7185:33:20;-1:-1:-1;;;;;;;;;;;742:42:20;7220:4;7159:66;:25;:66;:::i;:::-;7265:10;;7239:46;;-1:-1:-1;;;;;;;;;;;742:42:20;-1:-1:-1;;;;;7265:10:20;7277:7;7239:46;:25;:46;:::i;:::-;7299:9;:7;:9::i;:::-;6978:341;;;7340:5;;;7328:25;;;-1:-1:-1;;;7328:25:20;;;;-1:-1:-1;;;;;7340:5:20;;;;7328:23;;:25;;;;7340:5;;7328:25;;;;;;7340:5;;7328:25;;;5:2:-1;;;;30:1;27;20:12;5:2;7328:25:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;7372:6:20;;:17;;-1:-1:-1;7372:6:20;-1:-1:-1;7383:5:20;7372:17;:10;:17;:::i;:::-;7363:6;:26;;;7404:24;;;;;;;;;;;;;;;;;;;;;;;;;5851:1584;;;:::o;1057:83::-;1097:42;1057:83;:::o;1147:82::-;1186:42;1147:82;:::o;3930:382::-;4030:10;;3981:15;;-1:-1:-1;;;;;4030:10:20;4016;:24;4008:48;;;;;-1:-1:-1;;;4008:48:20;;;;;;;;;;;;-1:-1:-1;;;4008:48:20;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;4074:23:20;;;;4066:40;;;;;-1:-1:-1;;;4066:40:20;;;;;;;;;;;;;;;-1:-1:-1;;;4066:40:20;;;;;;;;;;;;;;;829:42;-1:-1:-1;;;;;4124:22:20;;;;4116:38;;;;;-1:-1:-1;;;4116:38:20;;;;;;;;;;;;-1:-1:-1;;;4116:38:20;;;;;;;;;;;;;;;1186:42;-1:-1:-1;;;;;4172:23:20;;;;4164:40;;;;;-1:-1:-1;;;4164:40:20;;;;;;;;;;;;;;;-1:-1:-1;;;4164:40:20;;;;;;;;;;;;;;;4224:31;;;-1:-1:-1;;;4224:31:20;;4249:4;4224:31;;;;;;-1:-1:-1;;;;;4224:16:20;;;;;:31;;;;;;;;;;;;;;:16;:31;;;5:2:-1;;;;30:1;27;20:12;5:2;4224:31:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4224:31:20;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4224:31:20;4285:10;;4224:31;;-1:-1:-1;4265:40:20;;-1:-1:-1;;;;;4265:19:20;;;;4285:10;4224:31;4265:40;:19;:40;:::i;:::-;3930:382;;;:::o;1718:25::-;;;-1:-1:-1;;;;;1718:25:20;;:::o;1693:18::-;;;-1:-1:-1;;;;;1693:18:20;;:::o;791:81::-;829:42;791:81;:::o;879:83::-;919:42;879:83;:::o;7683:111::-;7725:7;7751:36;7771:15;:13;:15::i;:::-;7751;:13;:15::i;:::-;:19;:36;:19;:36;:::i;:::-;7744:43;;7683:111;:::o;2645:164::-;2722:10;;-1:-1:-1;;;;;2722:10:20;2708;:24;;:52;;-1:-1:-1;2750:10:20;;-1:-1:-1;;;;;2750:10:20;2736;:24;2708:52;2700:76;;;;;-1:-1:-1;;;2700:76:20;;;;;;;;;;;;-1:-1:-1;;;2700:76:20;;;;;;;;;;;;;;;2786:6;:16;;-1:-1:-1;;;;;;2786:16:20;-1:-1:-1;;;;;2786:16:20;;;;;;;;;;2645:164::o;3131:156::-;3218:10;;-1:-1:-1;;;;;3218:10:20;3204;:24;3196:48;;;;;-1:-1:-1;;;3196:48:20;;;;;;;;;;;;-1:-1:-1;;;3196:48:20;;;;;;;;;;;;;;;3254:11;:26;3131:156::o;1458:28::-;;;;:::o;1531:38::-;;;;:::o;5315:431::-;5405:10;;5356:15;;-1:-1:-1;;;;;5405:10:20;5391;:24;5383:48;;;;;-1:-1:-1;;;5383:48:20;;;;;;;;;;;;-1:-1:-1;;;5383:48:20;;;;;;;;;;;;;;;5441:14;:12;:14::i;:::-;5476:37;;;-1:-1:-1;;;5476:37:20;;5507:4;5476:37;;;;;;-1:-1:-1;;;;;;;;;;;742:42:20;5476:22;;:37;;;;;;;;;;;;;;742:42;5476:37;;;5:2:-1;;;;30:1;27;20:12;5:2;5476:37:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5476:37:20;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5476:37:20;5553:10;;5541:45;;;-1:-1:-1;;;5541:45:20;;-1:-1:-1;;;;;;;;;;;5541:45:20;;;;;;5476:37;;-1:-1:-1;5524:14:20;;-1:-1:-1;;;;;5553:10:20;;;;5541:30;;:45;;;;;5476:37;;5541:45;;;;;;;;5553:10;5541:45;;;5:2:-1;;;;30:1;27;20:12;5:2;5541:45:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5541:45:20;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5541:45:20;;-1:-1:-1;;;;;;5604:20:20;;5596:39;;;;;-1:-1:-1;;;5596:39:20;;;;;;;;;;;;-1:-1:-1;;;5596:39:20;;;;;;;;;;;;;;;5697:42;-1:-1:-1;;;;;;;;;;;5723:6:20;5731:7;5697:42;:25;:42;:::i;:::-;5315:431;;:::o;1575:32::-;;;;:::o;7958:152::-;8043:10;;-1:-1:-1;;;;;8043:10:20;8029;:24;8021:48;;;;;-1:-1:-1;;;8021:48:20;;;;;;;;;;;;-1:-1:-1;;;8021:48:20;;;;;;;;;;;;;;;8079:10;:24;;-1:-1:-1;;;;;;8079:24:20;-1:-1:-1;;;;;8079:24:20;;;;;;;;;;7958:152::o;2815:140::-;2894:10;;-1:-1:-1;;;;;2894:10:20;2880;:24;2872:48;;;;;-1:-1:-1;;;2872:48:20;;;;;;;;;;;;-1:-1:-1;;;2872:48:20;;;;;;;;;;;;;;;2930:7;:18;2815:140::o;3475:132::-;3550:10;;-1:-1:-1;;;;;3550:10:20;3536;:24;3528:48;;;;;-1:-1:-1;;;3528:48:20;;;;;;;;;;;;-1:-1:-1;;;3528:48:20;;;;;;;;;;;;;;;3586:5;:14;;-1:-1:-1;;;;;;3586:14:20;-1:-1:-1;;;;;3586:14:20;;;;;;;;;;3475:132::o;968:83::-;1008:42;968:83;:::o;7800:152::-;7885:10;;-1:-1:-1;;;;;7885:10:20;7871;:24;7863:48;;;;;-1:-1:-1;;;7863:48:20;;;;;;;;;;;;-1:-1:-1;;;7863:48:20;;;;;;;;;;;;;;;7921:10;:24;;-1:-1:-1;;;;;;7921:24:20;-1:-1:-1;;;;;7921:24:20;;;;;;;;;;7800:152::o;2961:164::-;3052:10;;-1:-1:-1;;;;;3052:10:20;3038;:24;3030:48;;;;;-1:-1:-1;;;3030:48:20;;;;;;;;;;;;-1:-1:-1;;;3030:48:20;;;;;;;;;;;;;;;3088:13;:30;2961:164::o;1811:21::-;;;-1:-1:-1;;;;;1811:21:20;;:::o;7441:116::-;7513:37;;;-1:-1:-1;;;7513:37:20;;7544:4;7513:37;;;;;;7487:7;;-1:-1:-1;;;;;;;;;;;742:42:20;7513:22;;:37;;;;;;;;;;;;;;;742:42;7513:37;;;5:2:-1;;;;30:1;27;20:12;2459:180:20;2544:10;;-1:-1:-1;;;;;2544:10:20;2530;:24;;:52;;-1:-1:-1;2572:10:20;;-1:-1:-1;;;;;2572:10:20;2558;:24;2530:52;2522:76;;;;;-1:-1:-1;;;2522:76:20;;;;;;;;;;;;-1:-1:-1;;;2522:76:20;;;;;;;;;;;;;;;2608:10;:24;;-1:-1:-1;;;;;;2608:24:20;-1:-1:-1;;;;;2608:24:20;;;;;;;;;;2459:180::o;1492:33::-;;;;:::o;3613:237::-;3665:37;;;-1:-1:-1;;;3665:37:20;;3696:4;3665:37;;;;;;3649:13;;-1:-1:-1;;;;;;;;;;;742:42:20;3665:22;;:37;;;;;;;;;;;;;;;742:42;3665:37;;;5:2:-1;;;;30:1;27;20:12;5:2;3665:37:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3665:37:20;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3665:37:20;;-1:-1:-1;3716:9:20;;3712:132;;3767:5;;3741:39;;-1:-1:-1;;;;;;;;;;;742:42:20;-1:-1:-1;;;;;3767:5:20;3774;3741:39;:25;:39;:::i;:::-;3806:5;;;3794:39;;;-1:-1:-1;;;3794:39:20;;1008:42;3794:39;;;;;;;-1:-1:-1;;;;;;;;;;;3794:39:20;;;;;-1:-1:-1;;;;;3806:5:20;;;;3794:26;;:39;;;;;3806:5;;3794:39;;;;;;;3806:5;;3794:39;;;5:2:-1;;;;30:1;27;20:12;5:2;3794:39:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3794:39:20;;;;3712:132;3613:237;:::o;1839:21::-;;;;:::o;1613:47::-;1655:5;1613:47;:::o;1667:20::-;;;-1:-1:-1;;;;;1667:20:20;;:::o;1749:25::-;;;-1:-1:-1;;;;;1749:25:20;;:::o;1274:134:1:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;;:::o;5102:140:20:-;5198:5;;;5186:49;;;-1:-1:-1;;;5186:49:20;;1008:42;5186:49;;;;;;;-1:-1:-1;;;;;;;;;;;5186:49:20;;;;;;;;;;;5160:7;;-1:-1:-1;;;;;5198:5:20;;;;5186:27;;:49;;;;;;;;;;;;;;5160:7;5198:5;5186:49;;;5:2:-1;;;;30:1;27;20:12;5:2;5186:49:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5186:49:20;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5186:49:20;;5102:140;-1:-1:-1;;5102:140:20:o;834:176:1:-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:1;;;;;;;;;;;;;;;;;;;;;;;;;;;2159:459;2217:7;2458:6;2454:45;;-1:-1:-1;2487:1:1;2480:8;;2454:45;2521:5;;;2525:1;2521;:5;:1;2544:5;;;;;:10;2536:56;;;;-1:-1:-1;;;2536:56:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3073:130;3131:7;3157:39;3161:1;3164;3157:39;;;;;;;;;;;;;;;;;:3;:39::i;662:174:6:-;770:58;;;-1:-1:-1;;;;;770:58:6;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;770:58:6;;;;;;;;25:18:-1;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;744:85:6;;763:5;;744:18;:85::i;:::-;662:174;;;:::o;1050:612::-;1415:10;;;1414:62;;-1:-1:-1;1431:39:6;;;-1:-1:-1;;;1431:39:6;;1455:4;1431:39;;;;-1:-1:-1;;;;;1431:39:6;;;;;;;;;:15;;;;;;:39;;;;;;;;;;;;;;;:15;:39;;;5:2:-1;;;;30:1;27;20:12;5:2;1431:39:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1431:39:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1431:39:6;:44;1414:62;1406:150;;;;-1:-1:-1;;;1406:150:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1592:62;;;-1:-1:-1;;;;;1592:62:6;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1592:62:6;;;;;;;;25:18:-1;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;1566:89:6;;1585:5;;1566:18;:89::i;5752:93:20:-;5807:5;;;5795:43;;;-1:-1:-1;;;5795:43:20;;1008:42;5795:43;;;;;;;-1:-1:-1;;;;;;;;;;;5795:43:20;;;;;-1:-1:-1;;;;;5807:5:20;;;;5795:30;;:43;;;;;;;;;;;;;;5807:5;;5795:43;;;5:2:-1;;;;30:1;27;20:12;5:2;5795:43:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5795:43:20;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;5752:93:20:o;1732:187:1:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1837:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:1;;;1732:187::o;3718:338::-;3804:7;3904:12;3897:5;3889:28;;;;-1:-1:-1;;;3889:28:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;3889:28:1;;3927:9;3943:1;3939;:5;;;;;;;3718:338;-1:-1:-1;;;;;3718:338:1:o;2666:1095:6:-;3261:27;3269:5;-1:-1:-1;;;;;3261:25:6;;:27::i;:::-;3253:71;;;;;-1:-1:-1;;;3253:71:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;3395:12;3409:23;3444:5;-1:-1:-1;;;;;3436:19:6;3456:4;3436:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3436:25:6;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;3394:67:6;;;;3479:7;3471:52;;;;;-1:-1:-1;;;3471:52:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3538:17;;:21;3534:221;;3678:10;3667:30;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3667:30:6;3659:85;;;;-1:-1:-1;;;3659:85:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;686:610:7;746:4;1207:20;;1052:66;1246:23;;;;;;:42;;-1:-1:-1;1273:15:7;;;1246:42;1238:51;686:610;-1:-1:-1;;;;686:610:7:o",
  "language": "Solidity",
  "natspec": {
    "methods": {}
  },
  "offset": [
    565,
    8112
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x232 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7FEF901A GT PUSH2 0x130 JUMPI DUP1 PUSH4 0xAC1E5025 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xD0E30DB0 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x501 JUMPI DUP1 PUSH4 0xD6F19262 EQ PUSH2 0x509 JUMPI DUP1 PUSH4 0xD73792A9 EQ PUSH2 0x511 JUMPI DUP1 PUSH4 0xEC556889 EQ PUSH2 0x519 JUMPI DUP1 PUSH4 0xF77C4791 EQ PUSH2 0x521 JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0xAC1E5025 EQ PUSH2 0x4A6 JUMPI DUP1 PUSH4 0xACED1661 EQ PUSH2 0x4C3 JUMPI DUP1 PUSH4 0xC1A3D44C EQ PUSH2 0x4CB JUMPI DUP1 PUSH4 0xC7B9D530 EQ PUSH2 0x4D3 JUMPI DUP1 PUSH4 0xCC32D176 EQ PUSH2 0x4F9 JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x92EEFE9B GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x92EEFE9B EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0x955383BD EQ PUSH2 0x435 JUMPI DUP1 PUSH4 0x97107D6D EQ PUSH2 0x452 JUMPI DUP1 PUSH4 0xA6F19C84 EQ PUSH2 0x478 JUMPI DUP1 PUSH4 0xAB033EA9 EQ PUSH2 0x480 JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x7FEF901A EQ PUSH2 0x3EF JUMPI DUP1 PUSH4 0x8158676E EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0x853828B6 EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0x8BC7E8C4 EQ PUSH2 0x407 JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x46C96AAC GT PUSH2 0x1BE JUMPI DUP1 PUSH4 0x6A4874A1 GT PUSH2 0x182 JUMPI DUP1 PUSH4 0x6A4874A1 EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0x7165485D EQ PUSH2 0x39C JUMPI DUP1 PUSH4 0x722713F7 EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0x748747E6 EQ PUSH2 0x3AC JUMPI DUP1 PUSH4 0x77E741C7 EQ PUSH2 0x3D2 JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x46C96AAC EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0x4886654E EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0x5AA6E675 EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0x692058C2 EQ PUSH2 0x38C JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x1FE4A686 GT PUSH2 0x205 JUMPI DUP1 PUSH4 0x1FE4A686 EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0x3E413BEE EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0x3FC8CEF3 EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x346 JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0xD596CDF EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x11588086 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x17D7DE7C EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0x1F1FCD51 EQ PUSH2 0x2ED JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x254 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x24D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x529 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25E PUSH2 0x57B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x278 PUSH2 0x60F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2B2 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x29A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2DF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F5 PUSH2 0x646 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2F5 PUSH2 0x658 JUMP JUMPDEST PUSH2 0x254 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x667 JUMP JUMPDEST PUSH2 0x2F5 PUSH2 0x92B JUMP JUMPDEST PUSH2 0x2F5 PUSH2 0x943 JUMP JUMPDEST PUSH2 0x254 PUSH2 0x95B JUMP JUMPDEST PUSH2 0x2F5 PUSH2 0x1188 JUMP JUMPDEST PUSH2 0x2F5 PUSH2 0x11A0 JUMP JUMPDEST PUSH2 0x25E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x11B8 JUMP JUMPDEST PUSH2 0x2F5 PUSH2 0x13AA JUMP JUMPDEST PUSH2 0x2F5 PUSH2 0x13B9 JUMP JUMPDEST PUSH2 0x2F5 PUSH2 0x13C8 JUMP JUMPDEST PUSH2 0x2F5 PUSH2 0x13E0 JUMP JUMPDEST PUSH2 0x25E PUSH2 0x13F8 JUMP JUMPDEST PUSH2 0x254 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x141E JUMP JUMPDEST PUSH2 0x254 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x14A2 JUMP JUMPDEST PUSH2 0x25E PUSH2 0x14F4 JUMP JUMPDEST PUSH2 0x25E PUSH2 0x14FA JUMP JUMPDEST PUSH2 0x25E PUSH2 0x1500 JUMP JUMPDEST PUSH2 0x25E PUSH2 0x16C3 JUMP JUMPDEST PUSH2 0x254 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x425 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x16C9 JUMP JUMPDEST PUSH2 0x254 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x44B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1738 JUMP JUMPDEST PUSH2 0x254 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x468 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x178A JUMP JUMPDEST PUSH2 0x2F5 PUSH2 0x17F9 JUMP JUMPDEST PUSH2 0x254 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x496 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1811 JUMP JUMPDEST PUSH2 0x254 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1880 JUMP JUMPDEST PUSH2 0x2F5 PUSH2 0x18D2 JUMP JUMPDEST PUSH2 0x25E PUSH2 0x18E1 JUMP JUMPDEST PUSH2 0x254 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1930 JUMP JUMPDEST PUSH2 0x25E PUSH2 0x19B4 JUMP JUMPDEST PUSH2 0x254 PUSH2 0x19BA JUMP JUMPDEST PUSH2 0x25E PUSH2 0x1AFA JUMP JUMPDEST PUSH2 0x25E PUSH2 0x1B00 JUMP JUMPDEST PUSH2 0x2F5 PUSH2 0x1B06 JUMP JUMPDEST PUSH2 0x2F5 PUSH2 0x1B15 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x576 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH20 0x90BB609649E0451E5AD952683D64BD2D1F245840 SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5F2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x608 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH32 0x53747261746567794375727665455552566F74657250726F7879000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2214 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6B4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x10B1B7B73A3937B63632B9 PUSH1 0xA9 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2214 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x703 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x717 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x72D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x766 JUMPI PUSH2 0x751 PUSH2 0x74C DUP4 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1B24 AND JUMP JUMPDEST PUSH2 0x1B6F JUMP JUMPDEST SWAP2 POP PUSH2 0x763 DUP3 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1C20 AND JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x0 PUSH2 0x78F PUSH2 0x2710 PUSH2 0x783 PUSH1 0x3 SLOAD DUP7 PUSH2 0x1C7A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1CD3 AND JUMP JUMPDEST SWAP1 POP PUSH2 0x82A PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9EC5A894 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7F6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x80C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2214 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1D15 AND JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x2988BB9F PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2214 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xA622EE7C SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x883 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x897 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x8F5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x6 PUSH1 0x24 DUP3 ADD MSTORE PUSH6 0x85D985D5B1D PUSH1 0xD2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x925 DUP2 PUSH2 0x909 DUP7 DUP6 PUSH4 0xFFFFFFFF PUSH2 0x1B24 AND JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2214 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1D15 AND JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH20 0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48 DUP2 JUMP JUMPDEST PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x97E JUMPI POP PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST DUP1 PUSH2 0x993 JUMPI POP PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x9CF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x216B656570657273 PUSH1 0xC0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x72E008F PUSH1 0xE1 SHL DUP2 MSTORE PUSH20 0x90BB609649E0451E5AD952683D64BD2D1F245840 SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0xE5C011E SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA44 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP4 POP PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 SWAP3 POP PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAB1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xAC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 ISZERO PUSH2 0xD9F JUMPI PUSH1 0x0 PUSH2 0xAEE PUSH2 0x2710 PUSH2 0x783 PUSH1 0x0 SLOAD DUP6 PUSH2 0x1C7A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xB29 PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 PUSH20 0xF147B8125D2EF93FB6965DB97D6746952A133934 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1D15 AND JUMP JUMPDEST PUSH2 0xB39 DUP3 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1B24 AND JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 SWAP3 POP PUSH2 0xB6F SWAP1 PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 PUSH4 0xFFFFFFFF PUSH2 0x1D6C AND JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0xBA1 SWAP1 PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH4 0xFFFFFFFF PUSH2 0x1D6C AND JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP1 DUP3 MSTORE PUSH1 0xA0 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x20 DUP3 ADD PUSH1 0x80 DUP1 CODESIZE DUP4 CODECOPY ADD SWAP1 POP POP SWAP1 POP PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xBE6 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xC28 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH20 0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48 DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0xC6A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH20 0xDB25F211AB05B1C97D595516F45794528A807AD8 DUP2 PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0xCAC JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x5 SLOAD AND PUSH4 0x38ED1739 DUP5 PUSH1 0x0 DUP5 ADDRESS PUSH2 0xCE2 TIMESTAMP PUSH2 0x708 PUSH4 0xFFFFFFFF PUSH2 0x1C20 AND JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD5B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD43 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD98 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH20 0xDB25F211AB05B1C97D595516F45794528A807AD8 SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE08 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 ISZERO PUSH2 0xF43 JUMPI PUSH2 0xE62 PUSH20 0xDB25F211AB05B1C97D595516F45794528A807AD8 PUSH20 0xCE6A5FF5217E38315F87032CF90686C96627CAA PUSH1 0x0 PUSH4 0xFFFFFFFF PUSH2 0x1D6C AND JUMP JUMPDEST PUSH2 0xE9B PUSH20 0xDB25F211AB05B1C97D595516F45794528A807AD8 PUSH20 0xCE6A5FF5217E38315F87032CF90686C96627CAA DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1D6C AND JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE DUP3 MLOAD PUSH4 0xB4C7E4D PUSH1 0xE0 SHL DUP2 MSTORE PUSH20 0xCE6A5FF5217E38315F87032CF90686C96627CAA SWAP4 PUSH4 0xB4C7E4D SWAP4 SWAP3 SWAP2 PUSH1 0x4 ADD SWAP1 DUP2 SWAP1 DUP5 SWAP1 DUP1 DUP4 DUP4 DUP8 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEFF JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xEE7 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF3E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2214 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFA6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xFBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 ISZERO PUSH2 0x10D4 JUMPI PUSH1 0x0 PUSH2 0xFE3 PUSH2 0x2710 PUSH2 0x783 PUSH1 0x1 SLOAD DUP6 PUSH2 0x1C7A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1002 PUSH2 0x2710 PUSH2 0x783 PUSH1 0x2 SLOAD DUP7 PUSH2 0x1C7A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x109D PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9EC5A894 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1055 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1069 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x107F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2214 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x1D15 AND JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x10C9 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2214 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1D15 AND JUMP JUMPDEST PUSH2 0x10D1 PUSH2 0x19BA JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x7C1E845D PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH4 0xF83D08BA SWAP3 DUP3 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x112B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0xA SLOAD PUSH2 0x1143 SWAP3 POP SWAP1 POP DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1C20 AND JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP1 MLOAD PUSH32 0xFA07446FAD45314351EB89109A154880278451332BB87F1824D435FE58DA5939 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH20 0xF147B8125D2EF93FB6965DB97D6746952A133934 DUP2 JUMP JUMPDEST PUSH20 0xDB25F211AB05B1C97D595516F45794528A807AD8 DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1208 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x10B1B7B73A3937B63632B9 PUSH1 0xA9 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2214 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ ISZERO PUSH2 0x125D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH4 0x1DD85B9D PUSH1 0xE2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ ISZERO PUSH2 0x12B5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x31B93B PUSH1 0xE9 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xDB25F211AB05B1C97D595516F45794528A807AD8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ ISZERO PUSH2 0x1310 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH4 0x65757273 PUSH1 0xE0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x136A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x7 SLOAD SWAP1 SWAP2 POP PUSH2 0x13A5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1D15 AND JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 DUP2 JUMP JUMPDEST PUSH20 0xCE6A5FF5217E38315F87032CF90686C96627CAA DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1419 PUSH2 0x1405 PUSH2 0x57B JUMP JUMPDEST PUSH2 0x140D PUSH2 0x18E1 JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1C20 AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x1441 JUMPI POP PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x1480 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x8585D5D1A1BDC9A5E9959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x14EF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1550 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x10B1B7B73A3937B63632B9 PUSH1 0xA9 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1558 PUSH2 0x1E7F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2214 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15B7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x15CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x2988BB9F PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2214 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xA622EE7C SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x162E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1642 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1658 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x16A0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x6 PUSH1 0x24 DUP3 ADD MSTORE PUSH6 0x85D985D5B1D PUSH1 0xD2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x16BF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2214 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x1D15 AND JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1716 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1785 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x17D7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH20 0x90BB609649E0451E5AD952683D64BD2D1F245840 DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x185E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x18CD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2214 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x1953 JUMPI POP PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x1992 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x8585D5D1A1BDC9A5E9959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2214 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A1D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1A33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 ISZERO PUSH2 0x1AF7 JUMPI PUSH1 0x4 SLOAD PUSH2 0x1A69 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2214 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1D15 AND JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1F2C13E1 PUSH1 0xE3 SHL DUP2 MSTORE PUSH20 0x90BB609649E0451E5AD952683D64BD2D1F245840 SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2214 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x24 DUP5 ADD MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0xF9609F08 SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1ADE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1AF2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B66 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x1F23 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x6CE57689 PUSH1 0xE1 SHL DUP2 MSTORE PUSH20 0x90BB609649E0451E5AD952683D64BD2D1F245840 SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2214 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD DUP5 SWAP1 MSTORE MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xD9CAED12 SWAP2 PUSH1 0x64 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP8 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C02 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1C18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x1B66 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1C89 JUMPI POP PUSH1 0x0 PUSH2 0x1B69 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x1C96 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1B66 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2234 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1B66 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x1FBA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x1D67 SWAP1 DUP5 SWAP1 PUSH2 0x201F JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 ISZERO DUP1 PUSH2 0x1DF2 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 DUP6 AND SWAP2 PUSH4 0xDD62ED3E SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1DC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1DD8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1DEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO JUMPDEST PUSH2 0x1E2D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x227F PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x1D67 SWAP1 DUP5 SWAP1 PUSH2 0x201F JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1395C59 PUSH1 0xE3 SHL DUP2 MSTORE PUSH20 0x90BB609649E0451E5AD952683D64BD2D1F245840 SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2214 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x24 DUP5 ADD MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x9CAE2C8 SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1EF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F09 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1F1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x1FB2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F77 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1F5F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1FA4 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2009 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x1F77 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1F5F JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x2015 JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2031 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x21D7 JUMP JUMPDEST PUSH2 0x2082 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x20C0 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x20A1 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2122 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2127 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x217E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x925 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x219A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x925 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2255 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x220B JUMPI POP DUP2 ISZERO ISZERO JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP NOT 0x4E 0xBD OR EXTCODEHASH PUSH13 0xDACE046C53EACCE9B953F28411 0xD1 MSTORE8 PUSH2 0x6665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F77536166654552433230 GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x7563636565645361666545524332303A20617070 PUSH19 0x6F76652066726F6D206E6F6E2D7A65726F2074 PUSH16 0x206E6F6E2D7A65726F20616C6C6F7761 PUSH15 0x6365A265627A7A72315820FF525F20 0xB8 0x4C 0xF8 SELFDESTRUCT PUSH3 0xF4BD1E PUSH25 0x6846EBFE93A91AA55D780605F382E28EA14B7D64736F6C6343 STOP SDIV GT STOP ORIGIN ",
  "pcMap": {
    "0": {
      "offset": [
        565,
        8112
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "6": {
      "op": "DUP1"
    },
    "7": {
      "op": "ISZERO"
    },
    "8": {
      "op": "PUSH2",
      "value": "0x10"
    },
    "11": {
      "op": "JUMPI"
    },
    "12": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14": {
      "op": "DUP1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "REVERT",
      "path": "20"
    },
    "16": {
      "op": "JUMPDEST"
    },
    "17": {
      "offset": [
        565,
        8112
      ],
      "op": "POP",
      "path": "20"
    },
    "18": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "21": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "LT",
      "path": "20"
    },
    "22": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x232"
    },
    "25": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "26": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "29": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "SHR",
      "path": "20"
    },
    "32": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "DUP1",
      "path": "20"
    },
    "33": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x7FEF901A"
    },
    "38": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "GT",
      "path": "20"
    },
    "39": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x130"
    },
    "42": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "43": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "DUP1",
      "path": "20"
    },
    "44": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xAC1E5025"
    },
    "49": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "GT",
      "path": "20"
    },
    "50": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xB8"
    },
    "53": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "54": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "DUP1",
      "path": "20"
    },
    "55": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xD0E30DB0"
    },
    "60": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "GT",
      "path": "20"
    },
    "61": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x7C"
    },
    "64": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "65": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "DUP1",
      "path": "20"
    },
    "66": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xD0E30DB0"
    },
    "71": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "EQ",
      "path": "20"
    },
    "72": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x501"
    },
    "75": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "76": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "DUP1",
      "path": "20"
    },
    "77": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xD6F19262"
    },
    "82": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "EQ",
      "path": "20"
    },
    "83": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x509"
    },
    "86": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "87": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "DUP1",
      "path": "20"
    },
    "88": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xD73792A9"
    },
    "93": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "EQ",
      "path": "20"
    },
    "94": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x511"
    },
    "97": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "98": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "DUP1",
      "path": "20"
    },
    "99": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xEC556889"
    },
    "104": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "EQ",
      "path": "20"
    },
    "105": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x519"
    },
    "108": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "109": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "DUP1",
      "path": "20"
    },
    "110": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xF77C4791"
    },
    "115": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "EQ",
      "path": "20"
    },
    "116": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x521"
    },
    "119": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "120": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x232"
    },
    "123": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMP",
      "path": "20"
    },
    "124": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "125": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "DUP1",
      "path": "20"
    },
    "126": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xAC1E5025"
    },
    "131": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "EQ",
      "path": "20"
    },
    "132": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4A6"
    },
    "135": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "136": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "DUP1",
      "path": "20"
    },
    "137": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xACED1661"
    },
    "142": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "EQ",
      "path": "20"
    },
    "143": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4C3"
    },
    "146": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "147": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "DUP1",
      "path": "20"
    },
    "148": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xC1A3D44C"
    },
    "153": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "EQ",
      "path": "20"
    },
    "154": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4CB"
    },
    "157": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "158": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "DUP1",
      "path": "20"
    },
    "159": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xC7B9D530"
    },
    "164": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "EQ",
      "path": "20"
    },
    "165": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4D3"
    },
    "168": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "169": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "DUP1",
      "path": "20"
    },
    "170": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xCC32D176"
    },
    "175": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "EQ",
      "path": "20"
    },
    "176": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4F9"
    },
    "179": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "180": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x232"
    },
    "183": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMP",
      "path": "20"
    },
    "184": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "185": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "DUP1",
      "path": "20"
    },
    "186": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x92EEFE9B"
    },
    "191": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "GT",
      "path": "20"
    },
    "192": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xFF"
    },
    "195": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "196": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "DUP1",
      "path": "20"
    },
    "197": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x92EEFE9B"
    },
    "202": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "EQ",
      "path": "20"
    },
    "203": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x40F"
    },
    "206": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "207": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "DUP1",
      "path": "20"
    },
    "208": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x955383BD"
    },
    "213": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "EQ",
      "path": "20"
    },
    "214": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x435"
    },
    "217": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "218": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "DUP1",
      "path": "20"
    },
    "219": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x97107D6D"
    },
    "224": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "EQ",
      "path": "20"
    },
    "225": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x452"
    },
    "228": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "229": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "DUP1",
      "path": "20"
    },
    "230": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xA6F19C84"
    },
    "235": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "EQ",
      "path": "20"
    },
    "236": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x478"
    },
    "239": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "240": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "DUP1",
      "path": "20"
    },
    "241": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xAB033EA9"
    },
    "246": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "EQ",
      "path": "20"
    },
    "247": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x480"
    },
    "250": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "251": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x232"
    },
    "254": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMP",
      "path": "20"
    },
    "255": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "256": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "DUP1",
      "path": "20"
    },
    "257": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x7FEF901A"
    },
    "262": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "EQ",
      "path": "20"
    },
    "263": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3EF"
    },
    "266": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "267": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "DUP1",
      "path": "20"
    },
    "268": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x8158676E"
    },
    "273": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "EQ",
      "path": "20"
    },
    "274": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3F7"
    },
    "277": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "278": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "DUP1",
      "path": "20"
    },
    "279": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x853828B6"
    },
    "284": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "EQ",
      "path": "20"
    },
    "285": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3FF"
    },
    "288": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "289": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "DUP1",
      "path": "20"
    },
    "290": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x8BC7E8C4"
    },
    "295": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "EQ",
      "path": "20"
    },
    "296": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x407"
    },
    "299": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "300": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x232"
    },
    "303": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMP",
      "path": "20"
    },
    "304": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "305": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "DUP1",
      "path": "20"
    },
    "306": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x46C96AAC"
    },
    "311": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "GT",
      "path": "20"
    },
    "312": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1BE"
    },
    "315": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "316": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "DUP1",
      "path": "20"
    },
    "317": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x6A4874A1"
    },
    "322": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "GT",
      "path": "20"
    },
    "323": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x182"
    },
    "326": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "327": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "DUP1",
      "path": "20"
    },
    "328": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x6A4874A1"
    },
    "333": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "EQ",
      "path": "20"
    },
    "334": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x394"
    },
    "337": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "338": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "DUP1",
      "path": "20"
    },
    "339": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x7165485D"
    },
    "344": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "EQ",
      "path": "20"
    },
    "345": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x39C"
    },
    "348": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "349": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "DUP1",
      "path": "20"
    },
    "350": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x722713F7"
    },
    "355": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "EQ",
      "path": "20"
    },
    "356": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3A4"
    },
    "359": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "360": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "DUP1",
      "path": "20"
    },
    "361": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x748747E6"
    },
    "366": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "EQ",
      "path": "20"
    },
    "367": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3AC"
    },
    "370": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "371": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "DUP1",
      "path": "20"
    },
    "372": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x77E741C7"
    },
    "377": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "EQ",
      "path": "20"
    },
    "378": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3D2"
    },
    "381": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "382": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x232"
    },
    "385": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMP",
      "path": "20"
    },
    "386": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "387": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "DUP1",
      "path": "20"
    },
    "388": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x46C96AAC"
    },
    "393": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "EQ",
      "path": "20"
    },
    "394": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x34E"
    },
    "397": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "398": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "DUP1",
      "path": "20"
    },
    "399": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x4886654E"
    },
    "404": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "EQ",
      "path": "20"
    },
    "405": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x356"
    },
    "408": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "409": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "DUP1",
      "path": "20"
    },
    "410": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x51CFF8D9"
    },
    "415": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "EQ",
      "path": "20"
    },
    "416": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x35E"
    },
    "419": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "420": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "DUP1",
      "path": "20"
    },
    "421": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x5AA6E675"
    },
    "426": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "EQ",
      "path": "20"
    },
    "427": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x384"
    },
    "430": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "431": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "DUP1",
      "path": "20"
    },
    "432": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x692058C2"
    },
    "437": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "EQ",
      "path": "20"
    },
    "438": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x38C"
    },
    "441": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "442": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x232"
    },
    "445": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMP",
      "path": "20"
    },
    "446": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "447": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "DUP1",
      "path": "20"
    },
    "448": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x1FE4A686"
    },
    "453": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "GT",
      "path": "20"
    },
    "454": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x205"
    },
    "457": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "458": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "DUP1",
      "path": "20"
    },
    "459": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x1FE4A686"
    },
    "464": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "EQ",
      "path": "20"
    },
    "465": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x311"
    },
    "468": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "469": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "DUP1",
      "path": "20"
    },
    "470": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x2E1A7D4D"
    },
    "475": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "EQ",
      "path": "20"
    },
    "476": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x319"
    },
    "479": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "480": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "DUP1",
      "path": "20"
    },
    "481": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x3E413BEE"
    },
    "486": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "EQ",
      "path": "20"
    },
    "487": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x336"
    },
    "490": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "491": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "DUP1",
      "path": "20"
    },
    "492": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x3FC8CEF3"
    },
    "497": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "EQ",
      "path": "20"
    },
    "498": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x33E"
    },
    "501": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "502": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "DUP1",
      "path": "20"
    },
    "503": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x4641257D"
    },
    "508": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "EQ",
      "path": "20"
    },
    "509": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x346"
    },
    "512": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "513": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x232"
    },
    "516": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMP",
      "path": "20"
    },
    "517": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "518": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "DUP1",
      "path": "20"
    },
    "519": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xD596CDF"
    },
    "524": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "EQ",
      "path": "20"
    },
    "525": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x237"
    },
    "528": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "529": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "DUP1",
      "path": "20"
    },
    "530": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x11588086"
    },
    "535": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "EQ",
      "path": "20"
    },
    "536": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x256"
    },
    "539": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "540": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "DUP1",
      "path": "20"
    },
    "541": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x17D7DE7C"
    },
    "546": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "EQ",
      "path": "20"
    },
    "547": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x270"
    },
    "550": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "551": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "DUP1",
      "path": "20"
    },
    "552": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x1F1FCD51"
    },
    "557": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "EQ",
      "path": "20"
    },
    "558": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2ED"
    },
    "561": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "562": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "563": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "565": {
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "DUP1",
      "path": "20"
    },
    "566": {
      "first_revert": true,
      "fn": null,
      "offset": [
        565,
        8112
      ],
      "op": "REVERT",
      "path": "20"
    },
    "567": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3293,
        3469
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "568": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3293,
        3469
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x254"
    },
    "571": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3293,
        3469
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "573": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3293,
        3469
      ],
      "op": "DUP1",
      "path": "20"
    },
    "574": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3293,
        3469
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "575": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3293,
        3469
      ],
      "op": "SUB",
      "path": "20"
    },
    "576": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "578": {
      "op": "DUP2"
    },
    "579": {
      "op": "LT"
    },
    "580": {
      "op": "ISZERO"
    },
    "581": {
      "op": "PUSH2",
      "value": "0x24D"
    },
    "584": {
      "op": "JUMPI"
    },
    "585": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "587": {
      "op": "DUP1"
    },
    "588": {
      "op": "REVERT"
    },
    "589": {
      "op": "JUMPDEST"
    },
    "590": {
      "op": "POP"
    },
    "591": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3293,
        3469
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "592": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3293,
        3469
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x529"
    },
    "595": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "jump": "i",
      "offset": [
        3293,
        3469
      ],
      "op": "JUMP",
      "path": "20"
    },
    "596": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3293,
        3469
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "597": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3293,
        3469
      ],
      "op": "STOP",
      "path": "20"
    },
    "598": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7563,
        7677
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "599": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7563,
        7677
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x25E"
    },
    "602": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7563,
        7677
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x57B"
    },
    "605": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "jump": "i",
      "offset": [
        7563,
        7677
      ],
      "op": "JUMP",
      "path": "20"
    },
    "606": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7563,
        7677
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "607": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7563,
        7677
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "609": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7563,
        7677
      ],
      "op": "DUP1",
      "path": "20"
    },
    "610": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7563,
        7677
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "611": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7563,
        7677
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "612": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7563,
        7677
      ],
      "op": "DUP3",
      "path": "20"
    },
    "613": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7563,
        7677
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "614": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7563,
        7677
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "615": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7563,
        7677
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "616": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7563,
        7677
      ],
      "op": "DUP2",
      "path": "20"
    },
    "617": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7563,
        7677
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "618": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7563,
        7677
      ],
      "op": "SUB",
      "path": "20"
    },
    "619": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7563,
        7677
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "621": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7563,
        7677
      ],
      "op": "ADD",
      "path": "20"
    },
    "622": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7563,
        7677
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "623": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7563,
        7677
      ],
      "op": "RETURN",
      "path": "20"
    },
    "624": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "625": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x278"
    },
    "628": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x60F"
    },
    "631": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "jump": "i",
      "offset": [
        2344,
        2453
      ],
      "op": "JUMP",
      "path": "20"
    },
    "632": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "633": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "635": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "DUP1",
      "path": "20"
    },
    "636": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "637": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "639": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "DUP1",
      "path": "20"
    },
    "640": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "DUP3",
      "path": "20"
    },
    "641": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "642": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "DUP4",
      "path": "20"
    },
    "643": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "644": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "DUP2",
      "path": "20"
    },
    "645": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "DUP4",
      "path": "20"
    },
    "646": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "ADD",
      "path": "20"
    },
    "647": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "648": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "DUP4",
      "path": "20"
    },
    "649": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "650": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "651": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "652": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "DUP4",
      "path": "20"
    },
    "653": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "654": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "655": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "DUP4",
      "path": "20"
    },
    "656": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "ADD",
      "path": "20"
    },
    "657": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "658": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "DUP6",
      "path": "20"
    },
    "659": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "ADD",
      "path": "20"
    },
    "660": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "661": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "DUP1",
      "path": "20"
    },
    "662": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "DUP4",
      "path": "20"
    },
    "663": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "DUP4",
      "path": "20"
    },
    "664": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "666": {
      "op": "JUMPDEST"
    },
    "667": {
      "op": "DUP4"
    },
    "668": {
      "op": "DUP2"
    },
    "669": {
      "op": "LT"
    },
    "670": {
      "op": "ISZERO"
    },
    "671": {
      "op": "PUSH2",
      "value": "0x2B2"
    },
    "674": {
      "op": "JUMPI"
    },
    "675": {
      "op": "DUP2"
    },
    "676": {
      "op": "DUP2"
    },
    "677": {
      "op": "ADD"
    },
    "678": {
      "op": "MLOAD"
    },
    "679": {
      "op": "DUP4"
    },
    "680": {
      "op": "DUP3"
    },
    "681": {
      "op": "ADD"
    },
    "682": {
      "op": "MSTORE"
    },
    "683": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "685": {
      "op": "ADD"
    },
    "686": {
      "op": "PUSH2",
      "value": "0x29A"
    },
    "689": {
      "op": "JUMP"
    },
    "690": {
      "op": "JUMPDEST"
    },
    "691": {
      "op": "POP"
    },
    "692": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "POP",
      "path": "20"
    },
    "693": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "POP",
      "path": "20"
    },
    "694": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "POP",
      "path": "20"
    },
    "695": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "696": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "POP",
      "path": "20"
    },
    "697": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "698": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "DUP2",
      "path": "20"
    },
    "699": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "ADD",
      "path": "20"
    },
    "700": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "701": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1F"
    },
    "703": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "AND",
      "path": "20"
    },
    "704": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "DUP1",
      "path": "20"
    },
    "705": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "706": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2DF"
    },
    "709": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "710": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "DUP1",
      "path": "20"
    },
    "711": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "DUP3",
      "path": "20"
    },
    "712": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "SUB",
      "path": "20"
    },
    "713": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "DUP1",
      "path": "20"
    },
    "714": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "715": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "717": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "DUP4",
      "path": "20"
    },
    "718": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "720": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "SUB",
      "path": "20"
    },
    "721": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "724": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "EXP",
      "path": "20"
    },
    "725": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "SUB",
      "path": "20"
    },
    "726": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "NOT",
      "path": "20"
    },
    "727": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "AND",
      "path": "20"
    },
    "728": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "DUP2",
      "path": "20"
    },
    "729": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "730": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "732": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "ADD",
      "path": "20"
    },
    "733": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "734": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "POP",
      "path": "20"
    },
    "735": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "736": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "POP",
      "path": "20"
    },
    "737": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "738": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "POP",
      "path": "20"
    },
    "739": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "POP",
      "path": "20"
    },
    "740": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "POP",
      "path": "20"
    },
    "741": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "743": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "744": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "DUP1",
      "path": "20"
    },
    "745": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "746": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "SUB",
      "path": "20"
    },
    "747": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "748": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "RETURN",
      "path": "20"
    },
    "749": {
      "offset": [
        703,
        785
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "750": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        703,
        785
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2F5"
    },
    "753": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        703,
        785
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x646"
    },
    "756": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "jump": "i",
      "offset": [
        703,
        785
      ],
      "op": "JUMP",
      "path": "20"
    },
    "757": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        703,
        785
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "758": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        703,
        785
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "760": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        703,
        785
      ],
      "op": "DUP1",
      "path": "20"
    },
    "761": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        703,
        785
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "762": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "766": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "768": {
      "op": "SHL"
    },
    "769": {
      "op": "SUB"
    },
    "770": {
      "offset": [
        703,
        785
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "771": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        703,
        785
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "772": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        703,
        785
      ],
      "op": "AND",
      "path": "20"
    },
    "773": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        703,
        785
      ],
      "op": "DUP3",
      "path": "20"
    },
    "774": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        703,
        785
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "775": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        703,
        785
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "776": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        703,
        785
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "777": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        703,
        785
      ],
      "op": "DUP2",
      "path": "20"
    },
    "778": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        703,
        785
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "779": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        703,
        785
      ],
      "op": "SUB",
      "path": "20"
    },
    "780": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        703,
        785
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "782": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        703,
        785
      ],
      "op": "ADD",
      "path": "20"
    },
    "783": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        703,
        785
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "784": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        703,
        785
      ],
      "op": "RETURN",
      "path": "20"
    },
    "785": {
      "offset": [
        1780,
        1805
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "786": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        1780,
        1805
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2F5"
    },
    "789": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        1780,
        1805
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x658"
    },
    "792": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "jump": "i",
      "offset": [
        1780,
        1805
      ],
      "op": "JUMP",
      "path": "20"
    },
    "793": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4387,
        5096
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "794": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4387,
        5096
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x254"
    },
    "797": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4387,
        5096
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "799": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4387,
        5096
      ],
      "op": "DUP1",
      "path": "20"
    },
    "800": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4387,
        5096
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "801": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4387,
        5096
      ],
      "op": "SUB",
      "path": "20"
    },
    "802": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "804": {
      "op": "DUP2"
    },
    "805": {
      "op": "LT"
    },
    "806": {
      "op": "ISZERO"
    },
    "807": {
      "op": "PUSH2",
      "value": "0x32F"
    },
    "810": {
      "op": "JUMPI"
    },
    "811": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "813": {
      "op": "DUP1"
    },
    "814": {
      "op": "REVERT"
    },
    "815": {
      "op": "JUMPDEST"
    },
    "816": {
      "op": "POP"
    },
    "817": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4387,
        5096
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "818": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4387,
        5096
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x667"
    },
    "821": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        4387,
        5096
      ],
      "op": "JUMP",
      "path": "20"
    },
    "822": {
      "offset": [
        1235,
        1317
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "823": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        1235,
        1317
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2F5"
    },
    "826": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        1235,
        1317
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x92B"
    },
    "829": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        1235,
        1317
      ],
      "op": "JUMP",
      "path": "20"
    },
    "830": {
      "offset": [
        1323,
        1405
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "831": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        1323,
        1405
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2F5"
    },
    "834": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        1323,
        1405
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x943"
    },
    "837": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        1323,
        1405
      ],
      "op": "JUMP",
      "path": "20"
    },
    "838": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5851,
        7435
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "839": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5851,
        7435
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x254"
    },
    "842": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5851,
        7435
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x95B"
    },
    "845": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "jump": "i",
      "offset": [
        5851,
        7435
      ],
      "op": "JUMP",
      "path": "20"
    },
    "846": {
      "offset": [
        1057,
        1140
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "847": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        1057,
        1140
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2F5"
    },
    "850": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        1057,
        1140
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1188"
    },
    "853": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "jump": "i",
      "offset": [
        1057,
        1140
      ],
      "op": "JUMP",
      "path": "20"
    },
    "854": {
      "offset": [
        1147,
        1229
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "855": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        1147,
        1229
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2F5"
    },
    "858": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        1147,
        1229
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x11A0"
    },
    "861": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "jump": "i",
      "offset": [
        1147,
        1229
      ],
      "op": "JUMP",
      "path": "20"
    },
    "862": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        3930,
        4312
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "863": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        3930,
        4312
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x25E"
    },
    "866": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        3930,
        4312
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "868": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        3930,
        4312
      ],
      "op": "DUP1",
      "path": "20"
    },
    "869": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        3930,
        4312
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "870": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        3930,
        4312
      ],
      "op": "SUB",
      "path": "20"
    },
    "871": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "873": {
      "op": "DUP2"
    },
    "874": {
      "op": "LT"
    },
    "875": {
      "op": "ISZERO"
    },
    "876": {
      "op": "PUSH2",
      "value": "0x374"
    },
    "879": {
      "op": "JUMPI"
    },
    "880": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "882": {
      "op": "DUP1"
    },
    "883": {
      "op": "REVERT"
    },
    "884": {
      "op": "JUMPDEST"
    },
    "885": {
      "op": "POP"
    },
    "886": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        3930,
        4312
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "887": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "889": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "891": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "893": {
      "op": "SHL"
    },
    "894": {
      "op": "SUB"
    },
    "895": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        3930,
        4312
      ],
      "op": "AND",
      "path": "20"
    },
    "896": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        3930,
        4312
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x11B8"
    },
    "899": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        3930,
        4312
      ],
      "op": "JUMP",
      "path": "20"
    },
    "900": {
      "offset": [
        1718,
        1743
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "901": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        1718,
        1743
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2F5"
    },
    "904": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        1718,
        1743
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x13AA"
    },
    "907": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        1718,
        1743
      ],
      "op": "JUMP",
      "path": "20"
    },
    "908": {
      "offset": [
        1693,
        1711
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "909": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        1693,
        1711
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2F5"
    },
    "912": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        1693,
        1711
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x13B9"
    },
    "915": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        1693,
        1711
      ],
      "op": "JUMP",
      "path": "20"
    },
    "916": {
      "offset": [
        791,
        872
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "917": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        791,
        872
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2F5"
    },
    "920": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        791,
        872
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x13C8"
    },
    "923": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        791,
        872
      ],
      "op": "JUMP",
      "path": "20"
    },
    "924": {
      "offset": [
        879,
        962
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "925": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        879,
        962
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2F5"
    },
    "928": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        879,
        962
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x13E0"
    },
    "931": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        879,
        962
      ],
      "op": "JUMP",
      "path": "20"
    },
    "932": {
      "fn": "StrategyCurveEURVoterProxy.balanceOf",
      "offset": [
        7683,
        7794
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "933": {
      "fn": "StrategyCurveEURVoterProxy.balanceOf",
      "offset": [
        7683,
        7794
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x25E"
    },
    "936": {
      "fn": "StrategyCurveEURVoterProxy.balanceOf",
      "offset": [
        7683,
        7794
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x13F8"
    },
    "939": {
      "fn": "StrategyCurveEURVoterProxy.balanceOf",
      "jump": "i",
      "offset": [
        7683,
        7794
      ],
      "op": "JUMP",
      "path": "20"
    },
    "940": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2645,
        2809
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "941": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2645,
        2809
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x254"
    },
    "944": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2645,
        2809
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "946": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2645,
        2809
      ],
      "op": "DUP1",
      "path": "20"
    },
    "947": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2645,
        2809
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "948": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2645,
        2809
      ],
      "op": "SUB",
      "path": "20"
    },
    "949": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "951": {
      "op": "DUP2"
    },
    "952": {
      "op": "LT"
    },
    "953": {
      "op": "ISZERO"
    },
    "954": {
      "op": "PUSH2",
      "value": "0x3C2"
    },
    "957": {
      "op": "JUMPI"
    },
    "958": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "960": {
      "op": "DUP1"
    },
    "961": {
      "op": "REVERT"
    },
    "962": {
      "op": "JUMPDEST"
    },
    "963": {
      "op": "POP"
    },
    "964": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2645,
        2809
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "965": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "969": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "971": {
      "op": "SHL"
    },
    "972": {
      "op": "SUB"
    },
    "973": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2645,
        2809
      ],
      "op": "AND",
      "path": "20"
    },
    "974": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2645,
        2809
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x141E"
    },
    "977": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "jump": "i",
      "offset": [
        2645,
        2809
      ],
      "op": "JUMP",
      "path": "20"
    },
    "978": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3131,
        3287
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "979": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3131,
        3287
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x254"
    },
    "982": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3131,
        3287
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "984": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3131,
        3287
      ],
      "op": "DUP1",
      "path": "20"
    },
    "985": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3131,
        3287
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "986": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3131,
        3287
      ],
      "op": "SUB",
      "path": "20"
    },
    "987": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "989": {
      "op": "DUP2"
    },
    "990": {
      "op": "LT"
    },
    "991": {
      "op": "ISZERO"
    },
    "992": {
      "op": "PUSH2",
      "value": "0x3E8"
    },
    "995": {
      "op": "JUMPI"
    },
    "996": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "998": {
      "op": "DUP1"
    },
    "999": {
      "op": "REVERT"
    },
    "1000": {
      "op": "JUMPDEST"
    },
    "1001": {
      "op": "POP"
    },
    "1002": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3131,
        3287
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "1003": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3131,
        3287
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x14A2"
    },
    "1006": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "jump": "i",
      "offset": [
        3131,
        3287
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1007": {
      "offset": [
        1458,
        1486
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1008": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        1458,
        1486
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x25E"
    },
    "1011": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        1458,
        1486
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x14F4"
    },
    "1014": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "jump": "i",
      "offset": [
        1458,
        1486
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1015": {
      "offset": [
        1531,
        1569
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1016": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        1531,
        1569
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x25E"
    },
    "1019": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        1531,
        1569
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x14FA"
    },
    "1022": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "jump": "i",
      "offset": [
        1531,
        1569
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1023": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5315,
        5746
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1024": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5315,
        5746
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x25E"
    },
    "1027": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5315,
        5746
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1500"
    },
    "1030": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "jump": "i",
      "offset": [
        5315,
        5746
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1031": {
      "offset": [
        1575,
        1607
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1032": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        1575,
        1607
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x25E"
    },
    "1035": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        1575,
        1607
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x16C3"
    },
    "1038": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "jump": "i",
      "offset": [
        1575,
        1607
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1039": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        7958,
        8110
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1040": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        7958,
        8110
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x254"
    },
    "1043": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        7958,
        8110
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1045": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        7958,
        8110
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1046": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        7958,
        8110
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1047": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        7958,
        8110
      ],
      "op": "SUB",
      "path": "20"
    },
    "1048": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1050": {
      "op": "DUP2"
    },
    "1051": {
      "op": "LT"
    },
    "1052": {
      "op": "ISZERO"
    },
    "1053": {
      "op": "PUSH2",
      "value": "0x425"
    },
    "1056": {
      "op": "JUMPI"
    },
    "1057": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1059": {
      "op": "DUP1"
    },
    "1060": {
      "op": "REVERT"
    },
    "1061": {
      "op": "JUMPDEST"
    },
    "1062": {
      "op": "POP"
    },
    "1063": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        7958,
        8110
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "1064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1068": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1070": {
      "op": "SHL"
    },
    "1071": {
      "op": "SUB"
    },
    "1072": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        7958,
        8110
      ],
      "op": "AND",
      "path": "20"
    },
    "1073": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        7958,
        8110
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x16C9"
    },
    "1076": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "jump": "i",
      "offset": [
        7958,
        8110
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1077": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        2815,
        2955
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1078": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        2815,
        2955
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x254"
    },
    "1081": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        2815,
        2955
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1083": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        2815,
        2955
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1084": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        2815,
        2955
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1085": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        2815,
        2955
      ],
      "op": "SUB",
      "path": "20"
    },
    "1086": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1088": {
      "op": "DUP2"
    },
    "1089": {
      "op": "LT"
    },
    "1090": {
      "op": "ISZERO"
    },
    "1091": {
      "op": "PUSH2",
      "value": "0x44B"
    },
    "1094": {
      "op": "JUMPI"
    },
    "1095": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1097": {
      "op": "DUP1"
    },
    "1098": {
      "op": "REVERT"
    },
    "1099": {
      "op": "JUMPDEST"
    },
    "1100": {
      "op": "POP"
    },
    "1101": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        2815,
        2955
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "1102": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        2815,
        2955
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1738"
    },
    "1105": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "jump": "i",
      "offset": [
        2815,
        2955
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1106": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3475,
        3607
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1107": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3475,
        3607
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x254"
    },
    "1110": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3475,
        3607
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1112": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3475,
        3607
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1113": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3475,
        3607
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1114": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3475,
        3607
      ],
      "op": "SUB",
      "path": "20"
    },
    "1115": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1117": {
      "op": "DUP2"
    },
    "1118": {
      "op": "LT"
    },
    "1119": {
      "op": "ISZERO"
    },
    "1120": {
      "op": "PUSH2",
      "value": "0x468"
    },
    "1123": {
      "op": "JUMPI"
    },
    "1124": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1126": {
      "op": "DUP1"
    },
    "1127": {
      "op": "REVERT"
    },
    "1128": {
      "op": "JUMPDEST"
    },
    "1129": {
      "op": "POP"
    },
    "1130": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3475,
        3607
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "1131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1135": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1137": {
      "op": "SHL"
    },
    "1138": {
      "op": "SUB"
    },
    "1139": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3475,
        3607
      ],
      "op": "AND",
      "path": "20"
    },
    "1140": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3475,
        3607
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x178A"
    },
    "1143": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "jump": "i",
      "offset": [
        3475,
        3607
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1144": {
      "offset": [
        968,
        1051
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1145": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        968,
        1051
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2F5"
    },
    "1148": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        968,
        1051
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x17F9"
    },
    "1151": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "jump": "i",
      "offset": [
        968,
        1051
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1152": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7800,
        7952
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1153": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7800,
        7952
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x254"
    },
    "1156": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7800,
        7952
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1158": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7800,
        7952
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1159": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7800,
        7952
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1160": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7800,
        7952
      ],
      "op": "SUB",
      "path": "20"
    },
    "1161": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1163": {
      "op": "DUP2"
    },
    "1164": {
      "op": "LT"
    },
    "1165": {
      "op": "ISZERO"
    },
    "1166": {
      "op": "PUSH2",
      "value": "0x496"
    },
    "1169": {
      "op": "JUMPI"
    },
    "1170": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1172": {
      "op": "DUP1"
    },
    "1173": {
      "op": "REVERT"
    },
    "1174": {
      "op": "JUMPDEST"
    },
    "1175": {
      "op": "POP"
    },
    "1176": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7800,
        7952
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "1177": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1179": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1181": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1183": {
      "op": "SHL"
    },
    "1184": {
      "op": "SUB"
    },
    "1185": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7800,
        7952
      ],
      "op": "AND",
      "path": "20"
    },
    "1186": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7800,
        7952
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1811"
    },
    "1189": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "jump": "i",
      "offset": [
        7800,
        7952
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1190": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        2961,
        3125
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1191": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        2961,
        3125
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x254"
    },
    "1194": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        2961,
        3125
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1196": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        2961,
        3125
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1197": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        2961,
        3125
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1198": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        2961,
        3125
      ],
      "op": "SUB",
      "path": "20"
    },
    "1199": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1201": {
      "op": "DUP2"
    },
    "1202": {
      "op": "LT"
    },
    "1203": {
      "op": "ISZERO"
    },
    "1204": {
      "op": "PUSH2",
      "value": "0x4BC"
    },
    "1207": {
      "op": "JUMPI"
    },
    "1208": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1210": {
      "op": "DUP1"
    },
    "1211": {
      "op": "REVERT"
    },
    "1212": {
      "op": "JUMPDEST"
    },
    "1213": {
      "op": "POP"
    },
    "1214": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        2961,
        3125
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "1215": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        2961,
        3125
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1880"
    },
    "1218": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "jump": "i",
      "offset": [
        2961,
        3125
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1219": {
      "offset": [
        1811,
        1832
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1220": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        1811,
        1832
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2F5"
    },
    "1223": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        1811,
        1832
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x18D2"
    },
    "1226": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "jump": "i",
      "offset": [
        1811,
        1832
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1227": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        7441,
        7557
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1228": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        7441,
        7557
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x25E"
    },
    "1231": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        7441,
        7557
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x18E1"
    },
    "1234": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "jump": "i",
      "offset": [
        7441,
        7557
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1235": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2459,
        2639
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1236": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2459,
        2639
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x254"
    },
    "1239": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2459,
        2639
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1241": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2459,
        2639
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1242": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2459,
        2639
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1243": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2459,
        2639
      ],
      "op": "SUB",
      "path": "20"
    },
    "1244": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1246": {
      "op": "DUP2"
    },
    "1247": {
      "op": "LT"
    },
    "1248": {
      "op": "ISZERO"
    },
    "1249": {
      "op": "PUSH2",
      "value": "0x4E9"
    },
    "1252": {
      "op": "JUMPI"
    },
    "1253": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1255": {
      "op": "DUP1"
    },
    "1256": {
      "op": "REVERT"
    },
    "1257": {
      "op": "JUMPDEST"
    },
    "1258": {
      "op": "POP"
    },
    "1259": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2459,
        2639
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "1260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1264": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1266": {
      "op": "SHL"
    },
    "1267": {
      "op": "SUB"
    },
    "1268": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2459,
        2639
      ],
      "op": "AND",
      "path": "20"
    },
    "1269": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2459,
        2639
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1930"
    },
    "1272": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "jump": "i",
      "offset": [
        2459,
        2639
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1273": {
      "offset": [
        1492,
        1525
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1274": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        1492,
        1525
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x25E"
    },
    "1277": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        1492,
        1525
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x19B4"
    },
    "1280": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "jump": "i",
      "offset": [
        1492,
        1525
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1281": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3613,
        3850
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1282": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3613,
        3850
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x254"
    },
    "1285": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3613,
        3850
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x19BA"
    },
    "1288": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "jump": "i",
      "offset": [
        3613,
        3850
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1289": {
      "offset": [
        1839,
        1860
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1290": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        1839,
        1860
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x25E"
    },
    "1293": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        1839,
        1860
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1AFA"
    },
    "1296": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "jump": "i",
      "offset": [
        1839,
        1860
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1297": {
      "offset": [
        1613,
        1660
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1298": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        1613,
        1660
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x25E"
    },
    "1301": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        1613,
        1660
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1B00"
    },
    "1304": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "jump": "i",
      "offset": [
        1613,
        1660
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1305": {
      "offset": [
        1667,
        1687
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1306": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        1667,
        1687
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2F5"
    },
    "1309": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        1667,
        1687
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1B06"
    },
    "1312": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "jump": "i",
      "offset": [
        1667,
        1687
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1313": {
      "offset": [
        1749,
        1774
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1314": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        1749,
        1774
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2F5"
    },
    "1317": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        1749,
        1774
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1B15"
    },
    "1320": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "jump": "i",
      "offset": [
        1749,
        1774
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1321": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3293,
        3469
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1322": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3390,
        3400
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 0,
      "value": "0x6"
    },
    "1324": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3390,
        3400
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1329": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1331": {
      "op": "SHL"
    },
    "1332": {
      "op": "SUB"
    },
    "1333": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3390,
        3400
      ],
      "op": "AND",
      "path": "20"
    },
    "1334": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3376,
        3386
      ],
      "op": "CALLER",
      "path": "20"
    },
    "1335": {
      "branch": 77,
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3376,
        3400
      ],
      "op": "EQ",
      "path": "20"
    },
    "1336": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3368,
        3416
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x576"
    },
    "1339": {
      "branch": 77,
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3368,
        3416
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1340": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3368,
        3416
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1342": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3368,
        3416
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1343": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3368,
        3416
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1344": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1348": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1350": {
      "op": "SHL"
    },
    "1351": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3368,
        3416
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1352": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3368,
        3416
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1353": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3368,
        3416
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1355": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3368,
        3416
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1357": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3368,
        3416
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1358": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3368,
        3416
      ],
      "op": "ADD",
      "path": "20"
    },
    "1359": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3368,
        3416
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1360": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3368,
        3416
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "1362": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3368,
        3416
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "1364": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3368,
        3416
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1365": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3368,
        3416
      ],
      "op": "ADD",
      "path": "20"
    },
    "1366": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3368,
        3416
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1367": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "1379": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "1381": {
      "op": "SHL"
    },
    "1382": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3368,
        3416
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "1384": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3368,
        3416
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1385": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3368,
        3416
      ],
      "op": "ADD",
      "path": "20"
    },
    "1386": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3368,
        3416
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1387": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3368,
        3416
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1388": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3368,
        3416
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1389": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3368,
        3416
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1390": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3368,
        3416
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1391": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3368,
        3416
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1392": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3368,
        3416
      ],
      "op": "SUB",
      "path": "20"
    },
    "1393": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3368,
        3416
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "1395": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3368,
        3416
      ],
      "op": "ADD",
      "path": "20"
    },
    "1396": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3368,
        3416
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1397": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3368,
        3416
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1398": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3368,
        3416
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1399": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3426,
        3442
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 1,
      "value": "0x2"
    },
    "1401": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3426,
        3462
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "1402": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "jump": "o",
      "offset": [
        3293,
        3469
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1403": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7563,
        7677
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1404": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7647,
        7652
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 2,
      "value": "0x4"
    },
    "1406": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7647,
        7652
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1407": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7647,
        7652
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1408": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7635,
        7670
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1410": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7635,
        7670
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1411": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7635,
        7670
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1412": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1417": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1419": {
      "op": "SHL"
    },
    "1420": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7635,
        7670
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1421": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7635,
        7670
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1422": {
      "offset": [
        1008,
        1050
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0x90BB609649E0451E5AD952683D64BD2D1F245840"
    },
    "1443": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7635,
        7670
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "1444": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7635,
        7670
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1445": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7635,
        7670
      ],
      "op": "ADD",
      "path": "20"
    },
    "1446": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7635,
        7670
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "1447": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7635,
        7670
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1448": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7635,
        7670
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "1449": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7635,
        7670
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1450": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7635,
        7670
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1451": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7609,
        7616
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1453": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7609,
        7616
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "1454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1458": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1460": {
      "op": "SHL"
    },
    "1461": {
      "op": "SUB"
    },
    "1462": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7647,
        7652
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1463": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7647,
        7652
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "1464": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7647,
        7652
      ],
      "op": "AND",
      "path": "20"
    },
    "1465": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7647,
        7652
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1466": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7635,
        7663
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x70A08231"
    },
    "1471": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7635,
        7663
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1472": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7635,
        7670
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "1474": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7635,
        7670
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1475": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7635,
        7670
      ],
      "op": "DUP4",
      "path": "20"
    },
    "1476": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7635,
        7670
      ],
      "op": "ADD",
      "path": "20"
    },
    "1477": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7635,
        7670
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "1478": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7635,
        7670
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1480": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7635,
        7670
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "1481": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7635,
        7670
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1482": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7635,
        7670
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1483": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7635,
        7670
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1484": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7635,
        7670
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1485": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7635,
        7670
      ],
      "op": "SUB",
      "path": "20"
    },
    "1486": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7635,
        7670
      ],
      "op": "ADD",
      "path": "20"
    },
    "1487": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7635,
        7670
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1488": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7647,
        7652
      ],
      "op": "DUP7",
      "path": "20"
    },
    "1489": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7635,
        7670
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1490": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7635,
        7670
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "1491": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7635,
        7670
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1492": {
      "op": "DUP1"
    },
    "1493": {
      "op": "ISZERO"
    },
    "1494": {
      "op": "PUSH2",
      "value": "0x5DE"
    },
    "1497": {
      "op": "JUMPI"
    },
    "1498": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1500": {
      "op": "DUP1"
    },
    "1501": {
      "op": "REVERT"
    },
    "1502": {
      "op": "JUMPDEST"
    },
    "1503": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7635,
        7670
      ],
      "op": "POP",
      "path": "20"
    },
    "1504": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7635,
        7670
      ],
      "op": "GAS",
      "path": "20"
    },
    "1505": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7635,
        7670
      ],
      "op": "STATICCALL",
      "path": "20"
    },
    "1506": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7635,
        7670
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1507": {
      "op": "DUP1"
    },
    "1508": {
      "op": "ISZERO"
    },
    "1509": {
      "op": "PUSH2",
      "value": "0x5F2"
    },
    "1512": {
      "op": "JUMPI"
    },
    "1513": {
      "op": "RETURNDATASIZE"
    },
    "1514": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1516": {
      "op": "DUP1"
    },
    "1517": {
      "op": "RETURNDATACOPY"
    },
    "1518": {
      "op": "RETURNDATASIZE"
    },
    "1519": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1521": {
      "op": "REVERT"
    },
    "1522": {
      "op": "JUMPDEST"
    },
    "1523": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7635,
        7670
      ],
      "op": "POP",
      "path": "20"
    },
    "1524": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7635,
        7670
      ],
      "op": "POP",
      "path": "20"
    },
    "1525": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7635,
        7670
      ],
      "op": "POP",
      "path": "20"
    },
    "1526": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7635,
        7670
      ],
      "op": "POP",
      "path": "20"
    },
    "1527": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7635,
        7670
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1529": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7635,
        7670
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1530": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7635,
        7670
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "1531": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1533": {
      "op": "DUP2"
    },
    "1534": {
      "op": "LT"
    },
    "1535": {
      "op": "ISZERO"
    },
    "1536": {
      "op": "PUSH2",
      "value": "0x608"
    },
    "1539": {
      "op": "JUMPI"
    },
    "1540": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1542": {
      "op": "DUP1"
    },
    "1543": {
      "op": "REVERT"
    },
    "1544": {
      "op": "JUMPDEST"
    },
    "1545": {
      "op": "POP"
    },
    "1546": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7635,
        7670
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1547": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7635,
        7670
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1548": {
      "op": "POP"
    },
    "1549": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        7563,
        7677
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1550": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "jump": "o",
      "offset": [
        7563,
        7677
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1551": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1552": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2411,
        2446
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 3,
      "value": "0x40"
    },
    "1554": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2411,
        2446
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1555": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2411,
        2446
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1556": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2411,
        2446
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1557": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2411,
        2446
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1558": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2411,
        2446
      ],
      "op": "ADD",
      "path": "20"
    },
    "1559": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2411,
        2446
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1560": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2411,
        2446
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1561": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2411,
        2446
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1562": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2411,
        2446
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1A"
    },
    "1564": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2411,
        2446
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1565": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2411,
        2446
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1566": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2411,
        2446
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0x53747261746567794375727665455552566F74657250726F7879000000000000"
    },
    "1599": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2411,
        2446
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1601": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2411,
        2446
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1602": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2411,
        2446
      ],
      "op": "ADD",
      "path": "20"
    },
    "1603": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2411,
        2446
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1604": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2344,
        2453
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1605": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "jump": "o",
      "offset": [
        2344,
        2453
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1606": {
      "offset": [
        703,
        785
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1607": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1609": {
      "op": "DUP1"
    },
    "1610": {
      "op": "MLOAD"
    },
    "1611": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1613": {
      "op": "PUSH2",
      "value": "0x2214"
    },
    "1616": {
      "op": "DUP4"
    },
    "1617": {
      "op": "CODECOPY"
    },
    "1618": {
      "op": "DUP2"
    },
    "1619": {
      "op": "MLOAD"
    },
    "1620": {
      "op": "SWAP2"
    },
    "1621": {
      "op": "MSTORE"
    },
    "1622": {
      "offset": [
        703,
        785
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1623": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "jump": "o",
      "offset": [
        703,
        785
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1624": {
      "offset": [
        1780,
        1805
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1625": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        1780,
        1805
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x8"
    },
    "1627": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        1780,
        1805
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1632": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1634": {
      "op": "SHL"
    },
    "1635": {
      "op": "SUB"
    },
    "1636": {
      "offset": [
        1780,
        1805
      ],
      "op": "AND",
      "path": "20"
    },
    "1637": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        1780,
        1805
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1638": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "jump": "o",
      "offset": [
        1780,
        1805
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1639": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4387,
        5096
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1640": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4463,
        4473
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 4,
      "value": "0x7"
    },
    "1642": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4463,
        4473
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1643": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1647": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1649": {
      "op": "SHL"
    },
    "1650": {
      "op": "SUB"
    },
    "1651": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4463,
        4473
      ],
      "op": "AND",
      "path": "20"
    },
    "1652": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4449,
        4459
      ],
      "op": "CALLER",
      "path": "20"
    },
    "1653": {
      "branch": 78,
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4449,
        4473
      ],
      "op": "EQ",
      "path": "20"
    },
    "1654": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4441,
        4489
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x6B4"
    },
    "1657": {
      "branch": 78,
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4441,
        4489
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1658": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4441,
        4489
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1660": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4441,
        4489
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1661": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4441,
        4489
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1662": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1666": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1668": {
      "op": "SHL"
    },
    "1669": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4441,
        4489
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1670": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4441,
        4489
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1671": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4441,
        4489
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1673": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4441,
        4489
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1675": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4441,
        4489
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1676": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4441,
        4489
      ],
      "op": "ADD",
      "path": "20"
    },
    "1677": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4441,
        4489
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1678": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4441,
        4489
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "1680": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4441,
        4489
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "1682": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4441,
        4489
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1683": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4441,
        4489
      ],
      "op": "ADD",
      "path": "20"
    },
    "1684": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4441,
        4489
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1685": {
      "op": "PUSH11",
      "value": "0x10B1B7B73A3937B63632B9"
    },
    "1697": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "1699": {
      "op": "SHL"
    },
    "1700": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4441,
        4489
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "1702": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4441,
        4489
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1703": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4441,
        4489
      ],
      "op": "ADD",
      "path": "20"
    },
    "1704": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4441,
        4489
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1705": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4441,
        4489
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1706": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4441,
        4489
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1707": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4441,
        4489
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1708": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4441,
        4489
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1709": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4441,
        4489
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1710": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4441,
        4489
      ],
      "op": "SUB",
      "path": "20"
    },
    "1711": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4441,
        4489
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "1713": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4441,
        4489
      ],
      "op": "ADD",
      "path": "20"
    },
    "1714": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4441,
        4489
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1715": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4441,
        4489
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1716": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4441,
        4489
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1717": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4518,
        4555
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1719": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4518,
        4555
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1720": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4518,
        4555
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1721": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1726": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1728": {
      "op": "SHL"
    },
    "1729": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4518,
        4555
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1730": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4518,
        4555
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1731": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4549,
        4553
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "1732": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4518,
        4555
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1734": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4518,
        4555
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1735": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4518,
        4555
      ],
      "op": "ADD",
      "path": "20"
    },
    "1736": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4518,
        4555
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1737": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4518,
        4555
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1738": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4518,
        4555
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1739": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4499,
        4515
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1741": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4499,
        4515
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1742": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1744": {
      "op": "DUP1"
    },
    "1745": {
      "op": "MLOAD"
    },
    "1746": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1748": {
      "op": "PUSH2",
      "value": "0x2214"
    },
    "1751": {
      "op": "DUP4"
    },
    "1752": {
      "op": "CODECOPY"
    },
    "1753": {
      "op": "DUP2"
    },
    "1754": {
      "op": "MLOAD"
    },
    "1755": {
      "op": "SWAP2"
    },
    "1756": {
      "op": "MSTORE"
    },
    "1757": {
      "offset": [
        742,
        784
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1758": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4518,
        4540
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x70A08231"
    },
    "1763": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4518,
        4540
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1764": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4518,
        4555
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "1766": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4518,
        4555
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1767": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4518,
        4555
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1768": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4518,
        4555
      ],
      "op": "ADD",
      "path": "20"
    },
    "1769": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4518,
        4555
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "1770": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4518,
        4555
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1772": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4518,
        4555
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "1773": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4518,
        4555
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1774": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4518,
        4555
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1775": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4518,
        4555
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1776": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4518,
        4555
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1777": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4518,
        4555
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1778": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4518,
        4555
      ],
      "op": "SUB",
      "path": "20"
    },
    "1779": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4518,
        4555
      ],
      "op": "ADD",
      "path": "20"
    },
    "1780": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4518,
        4555
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1781": {
      "offset": [
        742,
        784
      ],
      "op": "DUP7",
      "path": "20"
    },
    "1782": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4518,
        4555
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1783": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4518,
        4555
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "1784": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4518,
        4555
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1785": {
      "op": "DUP1"
    },
    "1786": {
      "op": "ISZERO"
    },
    "1787": {
      "op": "PUSH2",
      "value": "0x703"
    },
    "1790": {
      "op": "JUMPI"
    },
    "1791": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1793": {
      "op": "DUP1"
    },
    "1794": {
      "op": "REVERT"
    },
    "1795": {
      "op": "JUMPDEST"
    },
    "1796": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4518,
        4555
      ],
      "op": "POP",
      "path": "20"
    },
    "1797": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4518,
        4555
      ],
      "op": "GAS",
      "path": "20"
    },
    "1798": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4518,
        4555
      ],
      "op": "STATICCALL",
      "path": "20"
    },
    "1799": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4518,
        4555
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1800": {
      "op": "DUP1"
    },
    "1801": {
      "op": "ISZERO"
    },
    "1802": {
      "op": "PUSH2",
      "value": "0x717"
    },
    "1805": {
      "op": "JUMPI"
    },
    "1806": {
      "op": "RETURNDATASIZE"
    },
    "1807": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1809": {
      "op": "DUP1"
    },
    "1810": {
      "op": "RETURNDATACOPY"
    },
    "1811": {
      "op": "RETURNDATASIZE"
    },
    "1812": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1814": {
      "op": "REVERT"
    },
    "1815": {
      "op": "JUMPDEST"
    },
    "1816": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4518,
        4555
      ],
      "op": "POP",
      "path": "20"
    },
    "1817": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4518,
        4555
      ],
      "op": "POP",
      "path": "20"
    },
    "1818": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4518,
        4555
      ],
      "op": "POP",
      "path": "20"
    },
    "1819": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4518,
        4555
      ],
      "op": "POP",
      "path": "20"
    },
    "1820": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4518,
        4555
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1822": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4518,
        4555
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1823": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4518,
        4555
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "1824": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1826": {
      "op": "DUP2"
    },
    "1827": {
      "op": "LT"
    },
    "1828": {
      "op": "ISZERO"
    },
    "1829": {
      "op": "PUSH2",
      "value": "0x72D"
    },
    "1832": {
      "op": "JUMPI"
    },
    "1833": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1835": {
      "op": "DUP1"
    },
    "1836": {
      "op": "REVERT"
    },
    "1837": {
      "op": "JUMPDEST"
    },
    "1838": {
      "op": "POP"
    },
    "1839": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4518,
        4555
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1840": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4518,
        4555
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1841": {
      "op": "POP"
    },
    "1842": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4569,
        4587
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1843": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4569,
        4587
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1844": {
      "branch": 79,
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4569,
        4587
      ],
      "op": "LT",
      "path": "20"
    },
    "1845": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4565,
        4705
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1846": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4565,
        4705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x766"
    },
    "1849": {
      "branch": 79,
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4565,
        4705
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1850": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4613,
        4649
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 5,
      "value": "0x751"
    },
    "1853": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4627,
        4648
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x74C"
    },
    "1856": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4627,
        4634
      ],
      "op": "DUP4",
      "path": "20"
    },
    "1857": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4639,
        4647
      ],
      "op": "DUP4",
      "path": "20"
    },
    "1858": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4627,
        4648
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "1863": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4627,
        4638
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1B24"
    },
    "1866": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4627,
        4648
      ],
      "op": "AND",
      "path": "20"
    },
    "1867": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        4627,
        4648
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1868": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4627,
        4648
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1869": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4613,
        4626
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1B6F"
    },
    "1872": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        4613,
        4649
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1873": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4613,
        4649
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1874": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4603,
        4649
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1875": {
      "op": "POP"
    },
    "1876": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4673,
        4694
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 6,
      "value": "0x763"
    },
    "1879": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4603,
        4649
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1880": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4685,
        4693
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1881": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4673,
        4694
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "1886": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4673,
        4684
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1C20"
    },
    "1889": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4673,
        4694
      ],
      "op": "AND",
      "path": "20"
    },
    "1890": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        4673,
        4694
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1891": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4673,
        4694
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1892": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4663,
        4694
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1893": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4663,
        4694
      ],
      "op": "POP",
      "path": "20"
    },
    "1894": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4565,
        4705
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1895": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4715,
        4727
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1897": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4730,
        4777
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x78F"
    },
    "1900": {
      "offset": [
        1655,
        1660
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2710"
    },
    "1903": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4730,
        4756
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x783"
    },
    "1906": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4742,
        4755
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "1908": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4742,
        4755
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1909": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4730,
        4737
      ],
      "op": "DUP7",
      "path": "20"
    },
    "1910": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4730,
        4741
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1C7A"
    },
    "1913": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4730,
        4741
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1914": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4730,
        4756
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1915": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4730,
        4756
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1916": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4730,
        4756
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "1921": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4730,
        4756
      ],
      "op": "AND",
      "path": "20"
    },
    "1922": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        4730,
        4756
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1923": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4730,
        4756
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1924": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4730,
        4760
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1925": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4730,
        4777
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "1930": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4730,
        4760
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1CD3"
    },
    "1933": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4730,
        4777
      ],
      "op": "AND",
      "path": "20"
    },
    "1934": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        4730,
        4777
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1935": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4730,
        4777
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1936": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4715,
        4777
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1937": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4715,
        4777
      ],
      "op": "POP",
      "path": "20"
    },
    "1938": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4788,
        4854
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 7,
      "value": "0x82A"
    },
    "1941": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4826,
        4836
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "1943": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4826,
        4836
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1945": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4826,
        4836
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1946": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4826,
        4836
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1947": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4826,
        4836
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1948": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4826,
        4836
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "1951": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4826,
        4836
      ],
      "op": "EXP",
      "path": "20"
    },
    "1952": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4826,
        4836
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1953": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4826,
        4836
      ],
      "op": "DIV",
      "path": "20"
    },
    "1954": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1956": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1958": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1960": {
      "op": "SHL"
    },
    "1961": {
      "op": "SUB"
    },
    "1962": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4826,
        4836
      ],
      "op": "AND",
      "path": "20"
    },
    "1963": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1965": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1967": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1969": {
      "op": "SHL"
    },
    "1970": {
      "op": "SUB"
    },
    "1971": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4814,
        4845
      ],
      "op": "AND",
      "path": "20"
    },
    "1972": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4814,
        4845
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x9EC5A894"
    },
    "1977": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4814,
        4847
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1979": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4814,
        4847
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1980": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4814,
        4847
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1981": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4814,
        4847
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "1986": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4814,
        4847
      ],
      "op": "AND",
      "path": "20"
    },
    "1987": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4814,
        4847
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xE0"
    },
    "1989": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4814,
        4847
      ],
      "op": "SHL",
      "path": "20"
    },
    "1990": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4814,
        4847
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1991": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4814,
        4847
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1992": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4814,
        4847
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1994": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4814,
        4847
      ],
      "op": "ADD",
      "path": "20"
    },
    "1995": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4814,
        4847
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1997": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4814,
        4847
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1999": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4814,
        4847
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2000": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4814,
        4847
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2001": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4814,
        4847
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2002": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4814,
        4847
      ],
      "op": "SUB",
      "path": "20"
    },
    "2003": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4814,
        4847
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2004": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4814,
        4847
      ],
      "op": "DUP7",
      "path": "20"
    },
    "2005": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4814,
        4847
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2006": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4814,
        4847
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "2007": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4814,
        4847
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2008": {
      "op": "DUP1"
    },
    "2009": {
      "op": "ISZERO"
    },
    "2010": {
      "op": "PUSH2",
      "value": "0x7E2"
    },
    "2013": {
      "op": "JUMPI"
    },
    "2014": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2016": {
      "op": "DUP1"
    },
    "2017": {
      "op": "REVERT"
    },
    "2018": {
      "op": "JUMPDEST"
    },
    "2019": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4814,
        4847
      ],
      "op": "POP",
      "path": "20"
    },
    "2020": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4814,
        4847
      ],
      "op": "GAS",
      "path": "20"
    },
    "2021": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4814,
        4847
      ],
      "op": "STATICCALL",
      "path": "20"
    },
    "2022": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4814,
        4847
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2023": {
      "op": "DUP1"
    },
    "2024": {
      "op": "ISZERO"
    },
    "2025": {
      "op": "PUSH2",
      "value": "0x7F6"
    },
    "2028": {
      "op": "JUMPI"
    },
    "2029": {
      "op": "RETURNDATASIZE"
    },
    "2030": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2032": {
      "op": "DUP1"
    },
    "2033": {
      "op": "RETURNDATACOPY"
    },
    "2034": {
      "op": "RETURNDATASIZE"
    },
    "2035": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2037": {
      "op": "REVERT"
    },
    "2038": {
      "op": "JUMPDEST"
    },
    "2039": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4814,
        4847
      ],
      "op": "POP",
      "path": "20"
    },
    "2040": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4814,
        4847
      ],
      "op": "POP",
      "path": "20"
    },
    "2041": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4814,
        4847
      ],
      "op": "POP",
      "path": "20"
    },
    "2042": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4814,
        4847
      ],
      "op": "POP",
      "path": "20"
    },
    "2043": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4814,
        4847
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2045": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4814,
        4847
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2046": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4814,
        4847
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "2047": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2049": {
      "op": "DUP2"
    },
    "2050": {
      "op": "LT"
    },
    "2051": {
      "op": "ISZERO"
    },
    "2052": {
      "op": "PUSH2",
      "value": "0x80C"
    },
    "2055": {
      "op": "JUMPI"
    },
    "2056": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2058": {
      "op": "DUP1"
    },
    "2059": {
      "op": "REVERT"
    },
    "2060": {
      "op": "JUMPDEST"
    },
    "2061": {
      "op": "POP"
    },
    "2062": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4814,
        4847
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2063": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2065": {
      "op": "DUP1"
    },
    "2066": {
      "op": "MLOAD"
    },
    "2067": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2069": {
      "op": "PUSH2",
      "value": "0x2214"
    },
    "2072": {
      "op": "DUP4"
    },
    "2073": {
      "op": "CODECOPY"
    },
    "2074": {
      "op": "DUP2"
    },
    "2075": {
      "op": "MLOAD"
    },
    "2076": {
      "op": "SWAP2"
    },
    "2077": {
      "op": "MSTORE"
    },
    "2078": {
      "offset": [
        742,
        784
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2079": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4849,
        4853
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2080": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4788,
        4854
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "2085": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4788,
        4813
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1D15"
    },
    "2088": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4788,
        4854
      ],
      "op": "AND",
      "path": "20"
    },
    "2089": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        4788,
        4854
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2090": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4788,
        4854
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2091": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4893,
        4903
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "2093": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4893,
        4903
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2094": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4881,
        4926
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2096": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4881,
        4926
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2097": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4881,
        4926
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2098": {
      "op": "PUSH4",
      "value": "0x2988BB9F"
    },
    "2103": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2105": {
      "op": "SHL"
    },
    "2106": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4881,
        4926
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2107": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4881,
        4926
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2108": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2110": {
      "op": "DUP1"
    },
    "2111": {
      "op": "MLOAD"
    },
    "2112": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2114": {
      "op": "PUSH2",
      "value": "0x2214"
    },
    "2117": {
      "op": "DUP4"
    },
    "2118": {
      "op": "CODECOPY"
    },
    "2119": {
      "op": "DUP2"
    },
    "2120": {
      "op": "MLOAD"
    },
    "2121": {
      "op": "SWAP2"
    },
    "2122": {
      "op": "MSTORE"
    },
    "2123": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4881,
        4926
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "2125": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4881,
        4926
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2126": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4881,
        4926
      ],
      "op": "ADD",
      "path": "20"
    },
    "2127": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4881,
        4926
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2128": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4881,
        4926
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2129": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4881,
        4926
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2130": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4864,
        4878
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2132": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4864,
        4878
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "2133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2137": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2139": {
      "op": "SHL"
    },
    "2140": {
      "op": "SUB"
    },
    "2141": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4893,
        4903
      ],
      "op": "AND",
      "path": "20"
    },
    "2142": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4893,
        4903
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2143": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4881,
        4911
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xA622EE7C"
    },
    "2148": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4881,
        4911
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2149": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4881,
        4926
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "2151": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4881,
        4926
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2152": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4881,
        4926
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2153": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4881,
        4926
      ],
      "op": "ADD",
      "path": "20"
    },
    "2154": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4881,
        4926
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "2155": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4881,
        4926
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2157": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4881,
        4926
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "2158": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4881,
        4926
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2159": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4881,
        4926
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2160": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4881,
        4926
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2161": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4881,
        4926
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2162": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4881,
        4926
      ],
      "op": "SUB",
      "path": "20"
    },
    "2163": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4881,
        4926
      ],
      "op": "ADD",
      "path": "20"
    },
    "2164": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4881,
        4926
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2165": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4893,
        4903
      ],
      "op": "DUP7",
      "path": "20"
    },
    "2166": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4881,
        4926
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2167": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4881,
        4926
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "2168": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4881,
        4926
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2169": {
      "op": "DUP1"
    },
    "2170": {
      "op": "ISZERO"
    },
    "2171": {
      "op": "PUSH2",
      "value": "0x883"
    },
    "2174": {
      "op": "JUMPI"
    },
    "2175": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2177": {
      "op": "DUP1"
    },
    "2178": {
      "op": "REVERT"
    },
    "2179": {
      "op": "JUMPDEST"
    },
    "2180": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4881,
        4926
      ],
      "op": "POP",
      "path": "20"
    },
    "2181": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4881,
        4926
      ],
      "op": "GAS",
      "path": "20"
    },
    "2182": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4881,
        4926
      ],
      "op": "STATICCALL",
      "path": "20"
    },
    "2183": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4881,
        4926
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2184": {
      "op": "DUP1"
    },
    "2185": {
      "op": "ISZERO"
    },
    "2186": {
      "op": "PUSH2",
      "value": "0x897"
    },
    "2189": {
      "op": "JUMPI"
    },
    "2190": {
      "op": "RETURNDATASIZE"
    },
    "2191": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2193": {
      "op": "DUP1"
    },
    "2194": {
      "op": "RETURNDATACOPY"
    },
    "2195": {
      "op": "RETURNDATASIZE"
    },
    "2196": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2198": {
      "op": "REVERT"
    },
    "2199": {
      "op": "JUMPDEST"
    },
    "2200": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4881,
        4926
      ],
      "op": "POP",
      "path": "20"
    },
    "2201": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4881,
        4926
      ],
      "op": "POP",
      "path": "20"
    },
    "2202": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4881,
        4926
      ],
      "op": "POP",
      "path": "20"
    },
    "2203": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4881,
        4926
      ],
      "op": "POP",
      "path": "20"
    },
    "2204": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4881,
        4926
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2206": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4881,
        4926
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2207": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4881,
        4926
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "2208": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2210": {
      "op": "DUP2"
    },
    "2211": {
      "op": "LT"
    },
    "2212": {
      "op": "ISZERO"
    },
    "2213": {
      "op": "PUSH2",
      "value": "0x8AD"
    },
    "2216": {
      "op": "JUMPI"
    },
    "2217": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2219": {
      "op": "DUP1"
    },
    "2220": {
      "op": "REVERT"
    },
    "2221": {
      "op": "JUMPDEST"
    },
    "2222": {
      "op": "POP"
    },
    "2223": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4881,
        4926
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2224": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4881,
        4926
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2225": {
      "op": "POP"
    },
    "2226": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2228": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2230": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2232": {
      "op": "SHL"
    },
    "2233": {
      "op": "SUB"
    },
    "2234": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4944,
        4964
      ],
      "op": "DUP2",
      "path": "20",
      "statement": 8
    },
    "2235": {
      "branch": 80,
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4944,
        4964
      ],
      "op": "AND",
      "path": "20"
    },
    "2236": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4936,
        4975
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x8F5"
    },
    "2239": {
      "branch": 80,
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4936,
        4975
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2240": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4936,
        4975
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2242": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4936,
        4975
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2243": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4936,
        4975
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2244": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2248": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2250": {
      "op": "SHL"
    },
    "2251": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4936,
        4975
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2252": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4936,
        4975
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2253": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4936,
        4975
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2255": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4936,
        4975
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "2257": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4936,
        4975
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2258": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4936,
        4975
      ],
      "op": "ADD",
      "path": "20"
    },
    "2259": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4936,
        4975
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2260": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4936,
        4975
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "2262": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4936,
        4975
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "2264": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4936,
        4975
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2265": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4936,
        4975
      ],
      "op": "ADD",
      "path": "20"
    },
    "2266": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4936,
        4975
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2267": {
      "op": "PUSH6",
      "value": "0x85D985D5B1D"
    },
    "2274": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "2276": {
      "op": "SHL"
    },
    "2277": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4936,
        4975
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "2279": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4936,
        4975
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2280": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4936,
        4975
      ],
      "op": "ADD",
      "path": "20"
    },
    "2281": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4936,
        4975
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2282": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4936,
        4975
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2283": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4936,
        4975
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2284": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4936,
        4975
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2285": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4936,
        4975
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2286": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4936,
        4975
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2287": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4936,
        4975
      ],
      "op": "SUB",
      "path": "20"
    },
    "2288": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4936,
        4975
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "2290": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4936,
        4975
      ],
      "op": "ADD",
      "path": "20"
    },
    "2291": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4936,
        4975
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2292": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4936,
        4975
      ],
      "op": "REVERT",
      "path": "20"
    },
    "2293": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4936,
        4975
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2294": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5037,
        5089
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 9,
      "value": "0x925"
    },
    "2297": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5063,
        5069
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2298": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5071,
        5088
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x909"
    },
    "2301": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5071,
        5078
      ],
      "op": "DUP7",
      "path": "20"
    },
    "2302": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5083,
        5087
      ],
      "op": "DUP6",
      "path": "20"
    },
    "2303": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5071,
        5088
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "2308": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5071,
        5082
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1B24"
    },
    "2311": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5071,
        5088
      ],
      "op": "AND",
      "path": "20"
    },
    "2312": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        5071,
        5088
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2313": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5071,
        5088
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2314": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2316": {
      "op": "DUP1"
    },
    "2317": {
      "op": "MLOAD"
    },
    "2318": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2320": {
      "op": "PUSH2",
      "value": "0x2214"
    },
    "2323": {
      "op": "DUP4"
    },
    "2324": {
      "op": "CODECOPY"
    },
    "2325": {
      "op": "DUP2"
    },
    "2326": {
      "op": "MLOAD"
    },
    "2327": {
      "op": "SWAP2"
    },
    "2328": {
      "op": "MSTORE"
    },
    "2329": {
      "offset": [
        742,
        784
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2330": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5037,
        5089
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2331": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5037,
        5089
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "2336": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5037,
        5062
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1D15"
    },
    "2339": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5037,
        5089
      ],
      "op": "AND",
      "path": "20"
    },
    "2340": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        5037,
        5089
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2341": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5037,
        5089
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2342": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4387,
        5096
      ],
      "op": "POP",
      "path": "20"
    },
    "2343": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4387,
        5096
      ],
      "op": "POP",
      "path": "20"
    },
    "2344": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4387,
        5096
      ],
      "op": "POP",
      "path": "20"
    },
    "2345": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4387,
        5096
      ],
      "op": "POP",
      "path": "20"
    },
    "2346": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "jump": "o",
      "offset": [
        4387,
        5096
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2347": {
      "offset": [
        1235,
        1317
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2348": {
      "offset": [
        1274,
        1316
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48"
    },
    "2369": {
      "offset": [
        1235,
        1317
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2370": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "jump": "o",
      "offset": [
        1235,
        1317
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2371": {
      "offset": [
        1323,
        1405
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2372": {
      "offset": [
        1362,
        1404
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2"
    },
    "2393": {
      "offset": [
        1323,
        1405
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2394": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "jump": "o",
      "offset": [
        1323,
        1405
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2395": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5851,
        7435
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2396": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5909,
        5915
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 10,
      "value": "0x9"
    },
    "2398": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5909,
        5915
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2403": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2405": {
      "op": "SHL"
    },
    "2406": {
      "op": "SUB"
    },
    "2407": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5909,
        5915
      ],
      "op": "AND",
      "path": "20"
    },
    "2408": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5895,
        5905
      ],
      "op": "CALLER",
      "path": "20"
    },
    "2409": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5895,
        5915
      ],
      "op": "EQ",
      "path": "20"
    },
    "2410": {
      "branch": 81,
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5895,
        5915
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2411": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5895,
        5943
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x97E"
    },
    "2414": {
      "branch": 81,
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5895,
        5943
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2415": {
      "op": "POP"
    },
    "2416": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5933,
        5943
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x8"
    },
    "2418": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5933,
        5943
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2421": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2423": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2425": {
      "op": "SHL"
    },
    "2426": {
      "op": "SUB"
    },
    "2427": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5933,
        5943
      ],
      "op": "AND",
      "path": "20"
    },
    "2428": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5919,
        5929
      ],
      "op": "CALLER",
      "path": "20"
    },
    "2429": {
      "branch": 82,
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5919,
        5943
      ],
      "op": "EQ",
      "path": "20"
    },
    "2430": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5895,
        5943
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2431": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5895,
        5971
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2432": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5895,
        5971
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x993"
    },
    "2435": {
      "branch": 82,
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5895,
        5971
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2436": {
      "op": "POP"
    },
    "2437": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5961,
        5971
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "2439": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5961,
        5971
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2444": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2446": {
      "op": "SHL"
    },
    "2447": {
      "op": "SUB"
    },
    "2448": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5961,
        5971
      ],
      "op": "AND",
      "path": "20"
    },
    "2449": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5947,
        5957
      ],
      "op": "CALLER",
      "path": "20"
    },
    "2450": {
      "branch": 83,
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5947,
        5971
      ],
      "op": "EQ",
      "path": "20"
    },
    "2451": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5895,
        5971
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2452": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5887,
        5984
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x9CF"
    },
    "2455": {
      "branch": 83,
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5887,
        5984
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2456": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5887,
        5984
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2458": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5887,
        5984
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2459": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5887,
        5984
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2460": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2464": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2466": {
      "op": "SHL"
    },
    "2467": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5887,
        5984
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2468": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5887,
        5984
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2469": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5887,
        5984
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2471": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5887,
        5984
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "2473": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5887,
        5984
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2474": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5887,
        5984
      ],
      "op": "ADD",
      "path": "20"
    },
    "2475": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5887,
        5984
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2476": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5887,
        5984
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x8"
    },
    "2478": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5887,
        5984
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "2480": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5887,
        5984
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2481": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5887,
        5984
      ],
      "op": "ADD",
      "path": "20"
    },
    "2482": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5887,
        5984
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2483": {
      "op": "PUSH8",
      "value": "0x216B656570657273"
    },
    "2492": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "2494": {
      "op": "SHL"
    },
    "2495": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5887,
        5984
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "2497": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5887,
        5984
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2498": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5887,
        5984
      ],
      "op": "ADD",
      "path": "20"
    },
    "2499": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5887,
        5984
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2500": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5887,
        5984
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2501": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5887,
        5984
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2502": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5887,
        5984
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2503": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5887,
        5984
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2504": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5887,
        5984
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2505": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5887,
        5984
      ],
      "op": "SUB",
      "path": "20"
    },
    "2506": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5887,
        5984
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "2508": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5887,
        5984
      ],
      "op": "ADD",
      "path": "20"
    },
    "2509": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5887,
        5984
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2510": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5887,
        5984
      ],
      "op": "REVERT",
      "path": "20"
    },
    "2511": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5887,
        5984
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2512": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6006,
        6011
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 11,
      "value": "0x4"
    },
    "2514": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6006,
        6011
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2515": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6006,
        6011
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2516": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5994,
        6027
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2518": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5994,
        6027
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2519": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5994,
        6027
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2520": {
      "op": "PUSH4",
      "value": "0x72E008F"
    },
    "2525": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2527": {
      "op": "SHL"
    },
    "2528": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5994,
        6027
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2529": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5994,
        6027
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2530": {
      "offset": [
        1008,
        1050
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0x90BB609649E0451E5AD952683D64BD2D1F245840"
    },
    "2551": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5994,
        6027
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "2552": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5994,
        6027
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2553": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5994,
        6027
      ],
      "op": "ADD",
      "path": "20"
    },
    "2554": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5994,
        6027
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "2555": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5994,
        6027
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2556": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5994,
        6027
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "2557": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5994,
        6027
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2558": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5994,
        6027
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2559": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2561": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2563": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2565": {
      "op": "SHL"
    },
    "2566": {
      "op": "SUB"
    },
    "2567": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6006,
        6011
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2568": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6006,
        6011
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2569": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6006,
        6011
      ],
      "op": "AND",
      "path": "20"
    },
    "2570": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6006,
        6011
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2571": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5994,
        6020
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xE5C011E"
    },
    "2576": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5994,
        6020
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2577": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5994,
        6027
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "2579": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5994,
        6027
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2580": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5994,
        6027
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2581": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5994,
        6027
      ],
      "op": "ADD",
      "path": "20"
    },
    "2582": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5994,
        6027
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "2583": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6006,
        6011
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2585": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6006,
        6011
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "2586": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5994,
        6027
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2587": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5994,
        6027
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2588": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5994,
        6027
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2589": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5994,
        6027
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2590": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5994,
        6027
      ],
      "op": "SUB",
      "path": "20"
    },
    "2591": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5994,
        6027
      ],
      "op": "ADD",
      "path": "20"
    },
    "2592": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5994,
        6027
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2593": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6006,
        6011
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2594": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6006,
        6011
      ],
      "op": "DUP8",
      "path": "20"
    },
    "2595": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5994,
        6027
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2596": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5994,
        6027
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "2597": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5994,
        6027
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2598": {
      "op": "DUP1"
    },
    "2599": {
      "op": "ISZERO"
    },
    "2600": {
      "op": "PUSH2",
      "value": "0xA30"
    },
    "2603": {
      "op": "JUMPI"
    },
    "2604": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2606": {
      "op": "DUP1"
    },
    "2607": {
      "op": "REVERT"
    },
    "2608": {
      "op": "JUMPDEST"
    },
    "2609": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5994,
        6027
      ],
      "op": "POP",
      "path": "20"
    },
    "2610": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5994,
        6027
      ],
      "op": "GAS",
      "path": "20"
    },
    "2611": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5994,
        6027
      ],
      "op": "CALL",
      "path": "20"
    },
    "2612": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5994,
        6027
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2613": {
      "op": "DUP1"
    },
    "2614": {
      "op": "ISZERO"
    },
    "2615": {
      "op": "PUSH2",
      "value": "0xA44"
    },
    "2618": {
      "op": "JUMPI"
    },
    "2619": {
      "op": "RETURNDATASIZE"
    },
    "2620": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2622": {
      "op": "DUP1"
    },
    "2623": {
      "op": "RETURNDATACOPY"
    },
    "2624": {
      "op": "RETURNDATASIZE"
    },
    "2625": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2627": {
      "op": "REVERT"
    },
    "2628": {
      "op": "JUMPDEST"
    },
    "2629": {
      "op": "POP"
    },
    "2630": {
      "op": "POP"
    },
    "2631": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6052,
        6088
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2633": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6052,
        6088
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2634": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6052,
        6088
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2635": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2640": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2642": {
      "op": "SHL"
    },
    "2643": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6052,
        6088
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2644": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6052,
        6088
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2645": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6082,
        6086
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "2646": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6052,
        6088
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "2648": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6052,
        6088
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2649": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6052,
        6088
      ],
      "op": "ADD",
      "path": "20"
    },
    "2650": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6052,
        6088
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2651": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6052,
        6088
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2652": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6052,
        6088
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2653": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6037,
        6049
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2655": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6037,
        6049
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "2656": {
      "op": "POP"
    },
    "2657": {
      "offset": [
        829,
        871
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xD533A949740BB3306D119CC777FA900BA034CD52"
    },
    "2678": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        829,
        871
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "2679": {
      "op": "POP"
    },
    "2680": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6052,
        6073
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x70A08231"
    },
    "2685": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6052,
        6073
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2686": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6052,
        6088
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "2688": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6052,
        6088
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2689": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6052,
        6088
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2690": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6052,
        6088
      ],
      "op": "ADD",
      "path": "20"
    },
    "2691": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6052,
        6088
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "2692": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6052,
        6088
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2694": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6052,
        6088
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "2695": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6052,
        6088
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2696": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6052,
        6088
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2697": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6052,
        6088
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2698": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6052,
        6088
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2699": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6052,
        6088
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2700": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6052,
        6088
      ],
      "op": "SUB",
      "path": "20"
    },
    "2701": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6052,
        6088
      ],
      "op": "ADD",
      "path": "20"
    },
    "2702": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6052,
        6088
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2703": {
      "offset": [
        829,
        871
      ],
      "op": "DUP7",
      "path": "20"
    },
    "2704": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6052,
        6088
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2705": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6052,
        6088
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "2706": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6052,
        6088
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2707": {
      "op": "DUP1"
    },
    "2708": {
      "op": "ISZERO"
    },
    "2709": {
      "op": "PUSH2",
      "value": "0xA9D"
    },
    "2712": {
      "op": "JUMPI"
    },
    "2713": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2715": {
      "op": "DUP1"
    },
    "2716": {
      "op": "REVERT"
    },
    "2717": {
      "op": "JUMPDEST"
    },
    "2718": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6052,
        6088
      ],
      "op": "POP",
      "path": "20"
    },
    "2719": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6052,
        6088
      ],
      "op": "GAS",
      "path": "20"
    },
    "2720": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6052,
        6088
      ],
      "op": "STATICCALL",
      "path": "20"
    },
    "2721": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6052,
        6088
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2722": {
      "op": "DUP1"
    },
    "2723": {
      "op": "ISZERO"
    },
    "2724": {
      "op": "PUSH2",
      "value": "0xAB1"
    },
    "2727": {
      "op": "JUMPI"
    },
    "2728": {
      "op": "RETURNDATASIZE"
    },
    "2729": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2731": {
      "op": "DUP1"
    },
    "2732": {
      "op": "RETURNDATACOPY"
    },
    "2733": {
      "op": "RETURNDATASIZE"
    },
    "2734": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2736": {
      "op": "REVERT"
    },
    "2737": {
      "op": "JUMPDEST"
    },
    "2738": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6052,
        6088
      ],
      "op": "POP",
      "path": "20"
    },
    "2739": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6052,
        6088
      ],
      "op": "POP",
      "path": "20"
    },
    "2740": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6052,
        6088
      ],
      "op": "POP",
      "path": "20"
    },
    "2741": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6052,
        6088
      ],
      "op": "POP",
      "path": "20"
    },
    "2742": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6052,
        6088
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2744": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6052,
        6088
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2745": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6052,
        6088
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "2746": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2748": {
      "op": "DUP2"
    },
    "2749": {
      "op": "LT"
    },
    "2750": {
      "op": "ISZERO"
    },
    "2751": {
      "op": "PUSH2",
      "value": "0xAC7"
    },
    "2754": {
      "op": "JUMPI"
    },
    "2755": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2757": {
      "op": "DUP1"
    },
    "2758": {
      "op": "REVERT"
    },
    "2759": {
      "op": "JUMPDEST"
    },
    "2760": {
      "op": "POP"
    },
    "2761": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6052,
        6088
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2762": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6052,
        6088
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2763": {
      "op": "POP"
    },
    "2764": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6102,
        6110
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2765": {
      "branch": 84,
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6102,
        6110
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2766": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6098,
        6650
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xD9F"
    },
    "2769": {
      "branch": 84,
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6098,
        6650
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2770": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6126,
        6142
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2772": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6145,
        6183
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xAEE"
    },
    "2775": {
      "offset": [
        1655,
        1660
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2710"
    },
    "2778": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6145,
        6162
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x783"
    },
    "2781": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6154,
        6161
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2783": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6154,
        6161
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2784": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6145,
        6149
      ],
      "op": "DUP6",
      "path": "20"
    },
    "2785": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6145,
        6153
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1C7A"
    },
    "2788": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6145,
        6153
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2789": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6145,
        6162
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2790": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6145,
        6162
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2791": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6145,
        6162
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "2796": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6145,
        6162
      ],
      "op": "AND",
      "path": "20"
    },
    "2797": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "jump": "i",
      "offset": [
        6145,
        6162
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2798": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6145,
        6183
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2799": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6126,
        6183
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2800": {
      "op": "POP"
    },
    "2801": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6197,
        6238
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 12,
      "value": "0xB29"
    },
    "2804": {
      "offset": [
        829,
        871
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xD533A949740BB3306D119CC777FA900BA034CD52"
    },
    "2825": {
      "offset": [
        1097,
        1139
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xF147B8125D2EF93FB6965DB97D6746952A133934"
    },
    "2846": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6126,
        6183
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2847": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6197,
        6238
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "2852": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6197,
        6221
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1D15"
    },
    "2855": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6197,
        6238
      ],
      "op": "AND",
      "path": "20"
    },
    "2856": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "jump": "i",
      "offset": [
        6197,
        6238
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2857": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6197,
        6238
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2858": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6259,
        6277
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 13,
      "value": "0xB39"
    },
    "2861": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6259,
        6263
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2862": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6268,
        6276
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2863": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6259,
        6277
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "2868": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6259,
        6267
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1B24"
    },
    "2871": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6259,
        6277
      ],
      "op": "AND",
      "path": "20"
    },
    "2872": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "jump": "i",
      "offset": [
        6259,
        6277
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2873": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6259,
        6277
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2874": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6316,
        6319
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 14,
      "value": "0x5"
    },
    "2876": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6316,
        6319
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2877": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6252,
        6277
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2878": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6252,
        6277
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "2879": {
      "op": "POP"
    },
    "2880": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6292,
        6323
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xB6F"
    },
    "2883": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6292,
        6323
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2884": {
      "offset": [
        829,
        871
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xD533A949740BB3306D119CC777FA900BA034CD52"
    },
    "2905": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        829,
        871
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2910": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2912": {
      "op": "SHL"
    },
    "2913": {
      "op": "SUB"
    },
    "2914": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6316,
        6319
      ],
      "op": "AND",
      "path": "20"
    },
    "2915": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6316,
        6319
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2917": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6292,
        6323
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "2922": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6292,
        6315
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1D6C"
    },
    "2925": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6292,
        6323
      ],
      "op": "AND",
      "path": "20"
    },
    "2926": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "jump": "i",
      "offset": [
        6292,
        6323
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2927": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6292,
        6323
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2928": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6361,
        6364
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 15,
      "value": "0x5"
    },
    "2930": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6361,
        6364
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2931": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6337,
        6371
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xBA1"
    },
    "2934": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6337,
        6371
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2935": {
      "offset": [
        829,
        871
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xD533A949740BB3306D119CC777FA900BA034CD52"
    },
    "2956": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        829,
        871
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2961": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2963": {
      "op": "SHL"
    },
    "2964": {
      "op": "SUB"
    },
    "2965": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6361,
        6364
      ],
      "op": "AND",
      "path": "20"
    },
    "2966": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6366,
        6370
      ],
      "op": "DUP5",
      "path": "20"
    },
    "2967": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6337,
        6371
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "2972": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6337,
        6360
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1D6C"
    },
    "2975": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6337,
        6371
      ],
      "op": "AND",
      "path": "20"
    },
    "2976": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "jump": "i",
      "offset": [
        6337,
        6371
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2977": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6337,
        6371
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2978": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6410,
        6426
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2980": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6410,
        6426
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2981": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6410,
        6426
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2982": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6424,
        6425
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "2984": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6410,
        6426
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2985": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6410,
        6426
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2986": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6410,
        6426
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2987": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6410,
        6426
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA0"
    },
    "2989": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6410,
        6426
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2990": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6410,
        6426
      ],
      "op": "ADD",
      "path": "20"
    },
    "2991": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6410,
        6426
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2992": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6410,
        6426
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "2993": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6410,
        6426
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2994": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6386,
        6407
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "2996": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6386,
        6407
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2997": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6410,
        6426
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2999": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6410,
        6426
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3000": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6410,
        6426
      ],
      "op": "ADD",
      "path": "20"
    },
    "3001": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3003": {
      "op": "DUP1"
    },
    "3004": {
      "op": "CODESIZE"
    },
    "3005": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6410,
        6426
      ],
      "op": "DUP4",
      "path": "20"
    },
    "3006": {
      "op": "CODECOPY"
    },
    "3007": {
      "op": "ADD"
    },
    "3008": {
      "op": "SWAP1"
    },
    "3009": {
      "op": "POP"
    },
    "3010": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6410,
        6426
      ],
      "op": "POP",
      "path": "20"
    },
    "3011": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6386,
        6426
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3012": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6386,
        6426
      ],
      "op": "POP",
      "path": "20"
    },
    "3013": {
      "offset": [
        829,
        871
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xD533A949740BB3306D119CC777FA900BA034CD52"
    },
    "3034": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6440,
        6444
      ],
      "op": "DUP2",
      "path": "20",
      "statement": 16
    },
    "3035": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6445,
        6446
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3037": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6440,
        6447
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3038": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6440,
        6447
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3039": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6440,
        6447
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3040": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6440,
        6447
      ],
      "op": "LT",
      "path": "20"
    },
    "3041": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6440,
        6447
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xBE6"
    },
    "3044": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6440,
        6447
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3045": {
      "dev": "Index out of range",
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6440,
        6447
      ],
      "op": "INVALID",
      "path": "20"
    },
    "3046": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6440,
        6447
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3047": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6440,
        6447
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3049": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6440,
        6447
      ],
      "op": "MUL",
      "path": "20"
    },
    "3050": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6440,
        6447
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3052": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6440,
        6447
      ],
      "op": "ADD",
      "path": "20"
    },
    "3053": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6440,
        6447
      ],
      "op": "ADD",
      "path": "20"
    },
    "3054": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6440,
        6453
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3059": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3061": {
      "op": "SHL"
    },
    "3062": {
      "op": "SUB"
    },
    "3063": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6440,
        6453
      ],
      "op": "AND",
      "path": "20"
    },
    "3064": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6440,
        6453
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3065": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6440,
        6453
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3068": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3070": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3072": {
      "op": "SHL"
    },
    "3073": {
      "op": "SUB"
    },
    "3074": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6440,
        6453
      ],
      "op": "AND",
      "path": "20"
    },
    "3075": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6440,
        6453
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3076": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6440,
        6453
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3077": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6440,
        6453
      ],
      "op": "POP",
      "path": "20"
    },
    "3078": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6440,
        6453
      ],
      "op": "POP",
      "path": "20"
    },
    "3079": {
      "offset": [
        1362,
        1404
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2"
    },
    "3100": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6467,
        6471
      ],
      "op": "DUP2",
      "path": "20",
      "statement": 17
    },
    "3101": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6472,
        6473
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "3103": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6467,
        6474
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3104": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6467,
        6474
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3105": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6467,
        6474
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3106": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6467,
        6474
      ],
      "op": "LT",
      "path": "20"
    },
    "3107": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6467,
        6474
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xC28"
    },
    "3110": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6467,
        6474
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3111": {
      "dev": "Index out of range",
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6467,
        6474
      ],
      "op": "INVALID",
      "path": "20"
    },
    "3112": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6467,
        6474
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3113": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6467,
        6474
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3115": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6467,
        6474
      ],
      "op": "MUL",
      "path": "20"
    },
    "3116": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6467,
        6474
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3118": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6467,
        6474
      ],
      "op": "ADD",
      "path": "20"
    },
    "3119": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6467,
        6474
      ],
      "op": "ADD",
      "path": "20"
    },
    "3120": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6467,
        6481
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3123": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3125": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3127": {
      "op": "SHL"
    },
    "3128": {
      "op": "SUB"
    },
    "3129": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6467,
        6481
      ],
      "op": "AND",
      "path": "20"
    },
    "3130": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6467,
        6481
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3131": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6467,
        6481
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3136": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3138": {
      "op": "SHL"
    },
    "3139": {
      "op": "SUB"
    },
    "3140": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6467,
        6481
      ],
      "op": "AND",
      "path": "20"
    },
    "3141": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6467,
        6481
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3142": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6467,
        6481
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3143": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6467,
        6481
      ],
      "op": "POP",
      "path": "20"
    },
    "3144": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6467,
        6481
      ],
      "op": "POP",
      "path": "20"
    },
    "3145": {
      "offset": [
        1274,
        1316
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48"
    },
    "3166": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6495,
        6499
      ],
      "op": "DUP2",
      "path": "20",
      "statement": 18
    },
    "3167": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6500,
        6501
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "3169": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6495,
        6502
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3170": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6495,
        6502
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3171": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6495,
        6502
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3172": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6495,
        6502
      ],
      "op": "LT",
      "path": "20"
    },
    "3173": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6495,
        6502
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xC6A"
    },
    "3176": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6495,
        6502
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3177": {
      "dev": "Index out of range",
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6495,
        6502
      ],
      "op": "INVALID",
      "path": "20"
    },
    "3178": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6495,
        6502
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3179": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6495,
        6502
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3181": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6495,
        6502
      ],
      "op": "MUL",
      "path": "20"
    },
    "3182": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6495,
        6502
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3184": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6495,
        6502
      ],
      "op": "ADD",
      "path": "20"
    },
    "3185": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6495,
        6502
      ],
      "op": "ADD",
      "path": "20"
    },
    "3186": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6495,
        6509
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3187": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3189": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3191": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3193": {
      "op": "SHL"
    },
    "3194": {
      "op": "SUB"
    },
    "3195": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6495,
        6509
      ],
      "op": "AND",
      "path": "20"
    },
    "3196": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6495,
        6509
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3197": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6495,
        6509
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3202": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3204": {
      "op": "SHL"
    },
    "3205": {
      "op": "SUB"
    },
    "3206": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6495,
        6509
      ],
      "op": "AND",
      "path": "20"
    },
    "3207": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6495,
        6509
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3208": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6495,
        6509
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3209": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6495,
        6509
      ],
      "op": "POP",
      "path": "20"
    },
    "3210": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6495,
        6509
      ],
      "op": "POP",
      "path": "20"
    },
    "3211": {
      "offset": [
        1186,
        1228
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xDB25F211AB05B1C97D595516F45794528A807AD8"
    },
    "3232": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6523,
        6527
      ],
      "op": "DUP2",
      "path": "20",
      "statement": 19
    },
    "3233": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6528,
        6529
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "3235": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6523,
        6530
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3236": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6523,
        6530
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3237": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6523,
        6530
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3238": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6523,
        6530
      ],
      "op": "LT",
      "path": "20"
    },
    "3239": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6523,
        6530
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xCAC"
    },
    "3242": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6523,
        6530
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3243": {
      "dev": "Index out of range",
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6523,
        6530
      ],
      "op": "INVALID",
      "path": "20"
    },
    "3244": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6523,
        6530
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3247": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3249": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3251": {
      "op": "SHL"
    },
    "3252": {
      "op": "SUB"
    },
    "3253": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6523,
        6537
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "3254": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6523,
        6537
      ],
      "op": "DUP4",
      "path": "20"
    },
    "3255": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6523,
        6537
      ],
      "op": "AND",
      "path": "20"
    },
    "3256": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6523,
        6530
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3258": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6523,
        6530
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3259": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6523,
        6530
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3260": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6523,
        6530
      ],
      "op": "MUL",
      "path": "20"
    },
    "3261": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6523,
        6530
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "3262": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6523,
        6530
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3263": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6523,
        6530
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "3264": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6523,
        6530
      ],
      "op": "ADD",
      "path": "20"
    },
    "3265": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6523,
        6530
      ],
      "op": "ADD",
      "path": "20"
    },
    "3266": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6523,
        6537
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3267": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6556,
        6559
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 20,
      "value": "0x5"
    },
    "3269": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6556,
        6559
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "3270": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6556,
        6559
      ],
      "op": "AND",
      "path": "20"
    },
    "3271": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6585
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x38ED1739"
    },
    "3276": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6586,
        6590
      ],
      "op": "DUP5",
      "path": "20"
    },
    "3277": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6556,
        6559
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3279": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6604,
        6608
      ],
      "op": "DUP5",
      "path": "20"
    },
    "3280": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6618,
        6622
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "3281": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6625,
        6638
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xCE2"
    },
    "3284": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6625,
        6628
      ],
      "op": "TIMESTAMP",
      "path": "20"
    },
    "3285": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6633,
        6637
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x708"
    },
    "3288": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6625,
        6638
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "3293": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6625,
        6632
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1C20"
    },
    "3296": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6625,
        6638
      ],
      "op": "AND",
      "path": "20"
    },
    "3297": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "jump": "i",
      "offset": [
        6625,
        6638
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3298": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6625,
        6638
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3299": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3301": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3302": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "DUP7",
      "path": "20"
    },
    "3303": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "3308": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "AND",
      "path": "20"
    },
    "3309": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xE0"
    },
    "3311": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "SHL",
      "path": "20"
    },
    "3312": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3313": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3314": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "3316": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "ADD",
      "path": "20"
    },
    "3317": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3318": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "DUP7",
      "path": "20"
    },
    "3319": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3320": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3321": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3323": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "ADD",
      "path": "20"
    },
    "3324": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "DUP6",
      "path": "20"
    },
    "3325": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3326": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3327": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3329": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "ADD",
      "path": "20"
    },
    "3330": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3331": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3333": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "ADD",
      "path": "20"
    },
    "3334": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "DUP5",
      "path": "20"
    },
    "3335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3339": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3341": {
      "op": "SHL"
    },
    "3342": {
      "op": "SUB"
    },
    "3343": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "AND",
      "path": "20"
    },
    "3344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3348": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3350": {
      "op": "SHL"
    },
    "3351": {
      "op": "SUB"
    },
    "3352": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "AND",
      "path": "20"
    },
    "3353": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3354": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3355": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3357": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "ADD",
      "path": "20"
    },
    "3358": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "DUP4",
      "path": "20"
    },
    "3359": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3360": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3361": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3363": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "ADD",
      "path": "20"
    },
    "3364": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3365": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3366": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "SUB",
      "path": "20"
    },
    "3367": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3368": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3369": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "DUP6",
      "path": "20"
    },
    "3370": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3371": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3372": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3373": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3374": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3375": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3377": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "ADD",
      "path": "20"
    },
    "3378": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3379": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "POP",
      "path": "20"
    },
    "3380": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3381": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3382": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3383": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3385": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "ADD",
      "path": "20"
    },
    "3386": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3387": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3389": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "MUL",
      "path": "20"
    },
    "3390": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3391": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "DUP4",
      "path": "20"
    },
    "3392": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "DUP4",
      "path": "20"
    },
    "3393": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3395": {
      "op": "JUMPDEST"
    },
    "3396": {
      "op": "DUP4"
    },
    "3397": {
      "op": "DUP2"
    },
    "3398": {
      "op": "LT"
    },
    "3399": {
      "op": "ISZERO"
    },
    "3400": {
      "op": "PUSH2",
      "value": "0xD5B"
    },
    "3403": {
      "op": "JUMPI"
    },
    "3404": {
      "op": "DUP2"
    },
    "3405": {
      "op": "DUP2"
    },
    "3406": {
      "op": "ADD"
    },
    "3407": {
      "op": "MLOAD"
    },
    "3408": {
      "op": "DUP4"
    },
    "3409": {
      "op": "DUP3"
    },
    "3410": {
      "op": "ADD"
    },
    "3411": {
      "op": "MSTORE"
    },
    "3412": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3414": {
      "op": "ADD"
    },
    "3415": {
      "op": "PUSH2",
      "value": "0xD43"
    },
    "3418": {
      "op": "JUMP"
    },
    "3419": {
      "op": "JUMPDEST"
    },
    "3420": {
      "op": "POP"
    },
    "3421": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "POP",
      "path": "20"
    },
    "3422": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "POP",
      "path": "20"
    },
    "3423": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "POP",
      "path": "20"
    },
    "3424": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3425": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "POP",
      "path": "20"
    },
    "3426": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "ADD",
      "path": "20"
    },
    "3427": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "SWAP7",
      "path": "20"
    },
    "3428": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "POP",
      "path": "20"
    },
    "3429": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "POP",
      "path": "20"
    },
    "3430": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "POP",
      "path": "20"
    },
    "3431": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "POP",
      "path": "20"
    },
    "3432": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "POP",
      "path": "20"
    },
    "3433": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "POP",
      "path": "20"
    },
    "3434": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "POP",
      "path": "20"
    },
    "3435": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3437": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3439": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3440": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3441": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "DUP4",
      "path": "20"
    },
    "3442": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "SUB",
      "path": "20"
    },
    "3443": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3444": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3446": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "DUP8",
      "path": "20"
    },
    "3447": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3448": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "3449": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3450": {
      "op": "DUP1"
    },
    "3451": {
      "op": "ISZERO"
    },
    "3452": {
      "op": "PUSH2",
      "value": "0xD84"
    },
    "3455": {
      "op": "JUMPI"
    },
    "3456": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3458": {
      "op": "DUP1"
    },
    "3459": {
      "op": "REVERT"
    },
    "3460": {
      "op": "JUMPDEST"
    },
    "3461": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "POP",
      "path": "20"
    },
    "3462": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "GAS",
      "path": "20"
    },
    "3463": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "CALL",
      "path": "20"
    },
    "3464": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3465": {
      "op": "DUP1"
    },
    "3466": {
      "op": "ISZERO"
    },
    "3467": {
      "op": "PUSH2",
      "value": "0xD98"
    },
    "3470": {
      "op": "JUMPI"
    },
    "3471": {
      "op": "RETURNDATASIZE"
    },
    "3472": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3474": {
      "op": "DUP1"
    },
    "3475": {
      "op": "RETURNDATACOPY"
    },
    "3476": {
      "op": "RETURNDATASIZE"
    },
    "3477": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3479": {
      "op": "REVERT"
    },
    "3480": {
      "op": "JUMPDEST"
    },
    "3481": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "POP",
      "path": "20"
    },
    "3482": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "POP",
      "path": "20"
    },
    "3483": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "POP",
      "path": "20"
    },
    "3484": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6552,
        6639
      ],
      "op": "POP",
      "path": "20"
    },
    "3485": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6098,
        6650
      ],
      "op": "POP",
      "path": "20"
    },
    "3486": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6098,
        6650
      ],
      "op": "POP",
      "path": "20"
    },
    "3487": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6098,
        6650
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3488": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6675,
        6712
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3490": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6675,
        6712
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3491": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6675,
        6712
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3492": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "3497": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3499": {
      "op": "SHL"
    },
    "3500": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6675,
        6712
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3501": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6675,
        6712
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3502": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6706,
        6710
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "3503": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6675,
        6712
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "3505": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6675,
        6712
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3506": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6675,
        6712
      ],
      "op": "ADD",
      "path": "20"
    },
    "3507": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6675,
        6712
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3508": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6675,
        6712
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3509": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6675,
        6712
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3510": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6659,
        6672
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3512": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6659,
        6672
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3513": {
      "offset": [
        1186,
        1228
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xDB25F211AB05B1C97D595516F45794528A807AD8"
    },
    "3534": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        1186,
        1228
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3535": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6675,
        6697
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x70A08231"
    },
    "3540": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6675,
        6697
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3541": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6675,
        6712
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "3543": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6675,
        6712
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3544": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6675,
        6712
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3545": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6675,
        6712
      ],
      "op": "ADD",
      "path": "20"
    },
    "3546": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6675,
        6712
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "3547": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6675,
        6712
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3549": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6675,
        6712
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "3550": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6675,
        6712
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3551": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6675,
        6712
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3552": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6675,
        6712
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3553": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6675,
        6712
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3554": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6675,
        6712
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3555": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6675,
        6712
      ],
      "op": "SUB",
      "path": "20"
    },
    "3556": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6675,
        6712
      ],
      "op": "ADD",
      "path": "20"
    },
    "3557": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6675,
        6712
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3558": {
      "offset": [
        1186,
        1228
      ],
      "op": "DUP7",
      "path": "20"
    },
    "3559": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6675,
        6712
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3560": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6675,
        6712
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "3561": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6675,
        6712
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3562": {
      "op": "DUP1"
    },
    "3563": {
      "op": "ISZERO"
    },
    "3564": {
      "op": "PUSH2",
      "value": "0xDF4"
    },
    "3567": {
      "op": "JUMPI"
    },
    "3568": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3570": {
      "op": "DUP1"
    },
    "3571": {
      "op": "REVERT"
    },
    "3572": {
      "op": "JUMPDEST"
    },
    "3573": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6675,
        6712
      ],
      "op": "POP",
      "path": "20"
    },
    "3574": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6675,
        6712
      ],
      "op": "GAS",
      "path": "20"
    },
    "3575": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6675,
        6712
      ],
      "op": "STATICCALL",
      "path": "20"
    },
    "3576": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6675,
        6712
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3577": {
      "op": "DUP1"
    },
    "3578": {
      "op": "ISZERO"
    },
    "3579": {
      "op": "PUSH2",
      "value": "0xE08"
    },
    "3582": {
      "op": "JUMPI"
    },
    "3583": {
      "op": "RETURNDATASIZE"
    },
    "3584": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3586": {
      "op": "DUP1"
    },
    "3587": {
      "op": "RETURNDATACOPY"
    },
    "3588": {
      "op": "RETURNDATASIZE"
    },
    "3589": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3591": {
      "op": "REVERT"
    },
    "3592": {
      "op": "JUMPDEST"
    },
    "3593": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6675,
        6712
      ],
      "op": "POP",
      "path": "20"
    },
    "3594": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6675,
        6712
      ],
      "op": "POP",
      "path": "20"
    },
    "3595": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6675,
        6712
      ],
      "op": "POP",
      "path": "20"
    },
    "3596": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6675,
        6712
      ],
      "op": "POP",
      "path": "20"
    },
    "3597": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6675,
        6712
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3599": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6675,
        6712
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3600": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6675,
        6712
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "3601": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3603": {
      "op": "DUP2"
    },
    "3604": {
      "op": "LT"
    },
    "3605": {
      "op": "ISZERO"
    },
    "3606": {
      "op": "PUSH2",
      "value": "0xE1E"
    },
    "3609": {
      "op": "JUMPI"
    },
    "3610": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3612": {
      "op": "DUP1"
    },
    "3613": {
      "op": "REVERT"
    },
    "3614": {
      "op": "JUMPDEST"
    },
    "3615": {
      "op": "POP"
    },
    "3616": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6675,
        6712
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3617": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6675,
        6712
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3618": {
      "op": "POP"
    },
    "3619": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6726,
        6735
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3620": {
      "branch": 85,
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6726,
        6735
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3621": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6722,
        6906
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xF43"
    },
    "3624": {
      "branch": 85,
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6722,
        6906
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3625": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6751,
        6785
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 21,
      "value": "0xE62"
    },
    "3628": {
      "offset": [
        1186,
        1228
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xDB25F211AB05B1C97D595516F45794528A807AD8"
    },
    "3649": {
      "offset": [
        919,
        961
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xCE6A5FF5217E38315F87032CF90686C96627CAA"
    },
    "3670": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6783,
        6784
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3672": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6751,
        6785
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "3677": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6751,
        6775
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1D6C"
    },
    "3680": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6751,
        6785
      ],
      "op": "AND",
      "path": "20"
    },
    "3681": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "jump": "i",
      "offset": [
        6751,
        6785
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3682": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6751,
        6785
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3683": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6799,
        6837
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 22,
      "value": "0xE9B"
    },
    "3686": {
      "offset": [
        1186,
        1228
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xDB25F211AB05B1C97D595516F45794528A807AD8"
    },
    "3707": {
      "offset": [
        919,
        961
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xCE6A5FF5217E38315F87032CF90686C96627CAA"
    },
    "3728": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6831,
        6836
      ],
      "op": "DUP4",
      "path": "20"
    },
    "3729": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6799,
        6837
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "3734": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6799,
        6823
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1D6C"
    },
    "3737": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6799,
        6837
      ],
      "op": "AND",
      "path": "20"
    },
    "3738": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "jump": "i",
      "offset": [
        6799,
        6837
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3739": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6799,
        6837
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3740": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 23,
      "value": "0x40"
    },
    "3742": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3743": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3744": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3745": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3746": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "ADD",
      "path": "20"
    },
    "3747": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3748": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3749": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3750": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3751": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3752": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3754": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3756": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3757": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "ADD",
      "path": "20"
    },
    "3758": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3759": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3760": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3761": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3762": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3763": {
      "op": "PUSH4",
      "value": "0xB4C7E4D"
    },
    "3768": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3770": {
      "op": "SHL"
    },
    "3771": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3772": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3773": {
      "offset": [
        919,
        961
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xCE6A5FF5217E38315F87032CF90686C96627CAA"
    },
    "3794": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        919,
        961
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "3795": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6880
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xB4C7E4D"
    },
    "3800": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6880
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "3801": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "3802": {
      "op": "SWAP2"
    },
    "3803": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "3805": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "ADD",
      "path": "20"
    },
    "3806": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3807": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3808": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3809": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "DUP5",
      "path": "20"
    },
    "3810": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3811": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3812": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "DUP4",
      "path": "20"
    },
    "3813": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "DUP4",
      "path": "20"
    },
    "3814": {
      "op": "DUP8"
    },
    "3815": {
      "op": "JUMPDEST"
    },
    "3816": {
      "op": "DUP4"
    },
    "3817": {
      "op": "DUP2"
    },
    "3818": {
      "op": "LT"
    },
    "3819": {
      "op": "ISZERO"
    },
    "3820": {
      "op": "PUSH2",
      "value": "0xEFF"
    },
    "3823": {
      "op": "JUMPI"
    },
    "3824": {
      "op": "DUP2"
    },
    "3825": {
      "op": "DUP2"
    },
    "3826": {
      "op": "ADD"
    },
    "3827": {
      "op": "MLOAD"
    },
    "3828": {
      "op": "DUP4"
    },
    "3829": {
      "op": "DUP3"
    },
    "3830": {
      "op": "ADD"
    },
    "3831": {
      "op": "MSTORE"
    },
    "3832": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3834": {
      "op": "ADD"
    },
    "3835": {
      "op": "PUSH2",
      "value": "0xEE7"
    },
    "3838": {
      "op": "JUMP"
    },
    "3839": {
      "op": "JUMPDEST"
    },
    "3840": {
      "op": "POP"
    },
    "3841": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "POP",
      "path": "20"
    },
    "3842": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "POP",
      "path": "20"
    },
    "3843": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "POP",
      "path": "20"
    },
    "3844": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3845": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "POP",
      "path": "20"
    },
    "3846": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "ADD",
      "path": "20"
    },
    "3847": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3848": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3849": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3850": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3852": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "ADD",
      "path": "20"
    },
    "3853": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "3854": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "POP",
      "path": "20"
    },
    "3855": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "POP",
      "path": "20"
    },
    "3856": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "POP",
      "path": "20"
    },
    "3857": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3859": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3861": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3862": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3863": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "DUP4",
      "path": "20"
    },
    "3864": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "SUB",
      "path": "20"
    },
    "3865": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3866": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3868": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "DUP8",
      "path": "20"
    },
    "3869": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3870": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "3871": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3872": {
      "op": "DUP1"
    },
    "3873": {
      "op": "ISZERO"
    },
    "3874": {
      "op": "PUSH2",
      "value": "0xF2A"
    },
    "3877": {
      "op": "JUMPI"
    },
    "3878": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3880": {
      "op": "DUP1"
    },
    "3881": {
      "op": "REVERT"
    },
    "3882": {
      "op": "JUMPDEST"
    },
    "3883": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "POP",
      "path": "20"
    },
    "3884": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "GAS",
      "path": "20"
    },
    "3885": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "CALL",
      "path": "20"
    },
    "3886": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3887": {
      "op": "DUP1"
    },
    "3888": {
      "op": "ISZERO"
    },
    "3889": {
      "op": "PUSH2",
      "value": "0xF3E"
    },
    "3892": {
      "op": "JUMPI"
    },
    "3893": {
      "op": "RETURNDATASIZE"
    },
    "3894": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3896": {
      "op": "DUP1"
    },
    "3897": {
      "op": "RETURNDATACOPY"
    },
    "3898": {
      "op": "RETURNDATASIZE"
    },
    "3899": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3901": {
      "op": "REVERT"
    },
    "3902": {
      "op": "JUMPDEST"
    },
    "3903": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "POP",
      "path": "20"
    },
    "3904": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "POP",
      "path": "20"
    },
    "3905": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "POP",
      "path": "20"
    },
    "3906": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6851,
        6895
      ],
      "op": "POP",
      "path": "20"
    },
    "3907": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6722,
        6906
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3908": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6931,
        6968
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3910": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6931,
        6968
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3911": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6931,
        6968
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3912": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "3917": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3919": {
      "op": "SHL"
    },
    "3920": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6931,
        6968
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3921": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6931,
        6968
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3922": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6962,
        6966
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "3923": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6931,
        6968
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "3925": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6931,
        6968
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3926": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6931,
        6968
      ],
      "op": "ADD",
      "path": "20"
    },
    "3927": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6931,
        6968
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3928": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6931,
        6968
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3929": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6931,
        6968
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3930": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6915,
        6928
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3932": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6915,
        6928
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3933": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3935": {
      "op": "DUP1"
    },
    "3936": {
      "op": "MLOAD"
    },
    "3937": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3939": {
      "op": "PUSH2",
      "value": "0x2214"
    },
    "3942": {
      "op": "DUP4"
    },
    "3943": {
      "op": "CODECOPY"
    },
    "3944": {
      "op": "DUP2"
    },
    "3945": {
      "op": "MLOAD"
    },
    "3946": {
      "op": "SWAP2"
    },
    "3947": {
      "op": "MSTORE"
    },
    "3948": {
      "offset": [
        742,
        784
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3949": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6931,
        6953
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x70A08231"
    },
    "3954": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6931,
        6953
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3955": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6931,
        6968
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "3957": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6931,
        6968
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3958": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6931,
        6968
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3959": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6931,
        6968
      ],
      "op": "ADD",
      "path": "20"
    },
    "3960": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6931,
        6968
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "3961": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6931,
        6968
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3963": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6931,
        6968
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "3964": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6931,
        6968
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3965": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6931,
        6968
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3966": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6931,
        6968
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3967": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6931,
        6968
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3968": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6931,
        6968
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3969": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6931,
        6968
      ],
      "op": "SUB",
      "path": "20"
    },
    "3970": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6931,
        6968
      ],
      "op": "ADD",
      "path": "20"
    },
    "3971": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6931,
        6968
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3972": {
      "offset": [
        742,
        784
      ],
      "op": "DUP7",
      "path": "20"
    },
    "3973": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6931,
        6968
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3974": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6931,
        6968
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "3975": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6931,
        6968
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3976": {
      "op": "DUP1"
    },
    "3977": {
      "op": "ISZERO"
    },
    "3978": {
      "op": "PUSH2",
      "value": "0xF92"
    },
    "3981": {
      "op": "JUMPI"
    },
    "3982": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3984": {
      "op": "DUP1"
    },
    "3985": {
      "op": "REVERT"
    },
    "3986": {
      "op": "JUMPDEST"
    },
    "3987": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6931,
        6968
      ],
      "op": "POP",
      "path": "20"
    },
    "3988": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6931,
        6968
      ],
      "op": "GAS",
      "path": "20"
    },
    "3989": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6931,
        6968
      ],
      "op": "STATICCALL",
      "path": "20"
    },
    "3990": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6931,
        6968
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3991": {
      "op": "DUP1"
    },
    "3992": {
      "op": "ISZERO"
    },
    "3993": {
      "op": "PUSH2",
      "value": "0xFA6"
    },
    "3996": {
      "op": "JUMPI"
    },
    "3997": {
      "op": "RETURNDATASIZE"
    },
    "3998": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4000": {
      "op": "DUP1"
    },
    "4001": {
      "op": "RETURNDATACOPY"
    },
    "4002": {
      "op": "RETURNDATASIZE"
    },
    "4003": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4005": {
      "op": "REVERT"
    },
    "4006": {
      "op": "JUMPDEST"
    },
    "4007": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6931,
        6968
      ],
      "op": "POP",
      "path": "20"
    },
    "4008": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6931,
        6968
      ],
      "op": "POP",
      "path": "20"
    },
    "4009": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6931,
        6968
      ],
      "op": "POP",
      "path": "20"
    },
    "4010": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6931,
        6968
      ],
      "op": "POP",
      "path": "20"
    },
    "4011": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6931,
        6968
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4013": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6931,
        6968
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4014": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6931,
        6968
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "4015": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4017": {
      "op": "DUP2"
    },
    "4018": {
      "op": "LT"
    },
    "4019": {
      "op": "ISZERO"
    },
    "4020": {
      "op": "PUSH2",
      "value": "0xFBC"
    },
    "4023": {
      "op": "JUMPI"
    },
    "4024": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4026": {
      "op": "DUP1"
    },
    "4027": {
      "op": "REVERT"
    },
    "4028": {
      "op": "JUMPDEST"
    },
    "4029": {
      "op": "POP"
    },
    "4030": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6931,
        6968
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4031": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6931,
        6968
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4032": {
      "op": "POP"
    },
    "4033": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6982,
        6991
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4034": {
      "branch": 86,
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6982,
        6991
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4035": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6978,
        7319
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x10D4"
    },
    "4038": {
      "branch": 86,
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6978,
        7319
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4039": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7007,
        7019
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4041": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7022,
        7065
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xFE3"
    },
    "4044": {
      "offset": [
        1655,
        1660
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2710"
    },
    "4047": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7022,
        7044
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x783"
    },
    "4050": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7032,
        7043
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "4052": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7032,
        7043
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4053": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7022,
        7027
      ],
      "op": "DUP6",
      "path": "20"
    },
    "4054": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7022,
        7031
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1C7A"
    },
    "4057": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7022,
        7031
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4058": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7022,
        7044
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4059": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7022,
        7044
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4060": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7022,
        7044
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "4065": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7022,
        7044
      ],
      "op": "AND",
      "path": "20"
    },
    "4066": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "jump": "i",
      "offset": [
        7022,
        7044
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4067": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7022,
        7065
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4068": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7007,
        7065
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4069": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7007,
        7065
      ],
      "op": "POP",
      "path": "20"
    },
    "4070": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7079,
        7094
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4072": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7097,
        7145
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1002"
    },
    "4075": {
      "offset": [
        1655,
        1660
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2710"
    },
    "4078": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7097,
        7124
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x783"
    },
    "4081": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7107,
        7123
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "4083": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7107,
        7123
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4084": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7097,
        7102
      ],
      "op": "DUP7",
      "path": "20"
    },
    "4085": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7097,
        7106
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1C7A"
    },
    "4088": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7097,
        7106
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4089": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7097,
        7124
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4090": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7097,
        7124
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4091": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7097,
        7124
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "4096": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7097,
        7124
      ],
      "op": "AND",
      "path": "20"
    },
    "4097": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "jump": "i",
      "offset": [
        7097,
        7124
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4098": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7097,
        7145
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4099": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7079,
        7145
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4100": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7079,
        7145
      ],
      "op": "POP",
      "path": "20"
    },
    "4101": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7159,
        7225
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 24,
      "value": "0x109D"
    },
    "4104": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7197,
        7207
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "4106": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7197,
        7207
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4108": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7197,
        7207
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4109": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7197,
        7207
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4110": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7197,
        7207
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4111": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7197,
        7207
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "4114": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7197,
        7207
      ],
      "op": "EXP",
      "path": "20"
    },
    "4115": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7197,
        7207
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4116": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7197,
        7207
      ],
      "op": "DIV",
      "path": "20"
    },
    "4117": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4121": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4123": {
      "op": "SHL"
    },
    "4124": {
      "op": "SUB"
    },
    "4125": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7197,
        7207
      ],
      "op": "AND",
      "path": "20"
    },
    "4126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4128": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4130": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4132": {
      "op": "SHL"
    },
    "4133": {
      "op": "SUB"
    },
    "4134": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7185,
        7216
      ],
      "op": "AND",
      "path": "20"
    },
    "4135": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7185,
        7216
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x9EC5A894"
    },
    "4140": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7185,
        7218
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4142": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7185,
        7218
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4143": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7185,
        7218
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4144": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7185,
        7218
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "4149": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7185,
        7218
      ],
      "op": "AND",
      "path": "20"
    },
    "4150": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7185,
        7218
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xE0"
    },
    "4152": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7185,
        7218
      ],
      "op": "SHL",
      "path": "20"
    },
    "4153": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7185,
        7218
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4154": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7185,
        7218
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4155": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7185,
        7218
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "4157": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7185,
        7218
      ],
      "op": "ADD",
      "path": "20"
    },
    "4158": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7185,
        7218
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4160": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7185,
        7218
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4162": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7185,
        7218
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4163": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7185,
        7218
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4164": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7185,
        7218
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4165": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7185,
        7218
      ],
      "op": "SUB",
      "path": "20"
    },
    "4166": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7185,
        7218
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4167": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7185,
        7218
      ],
      "op": "DUP7",
      "path": "20"
    },
    "4168": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7185,
        7218
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4169": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7185,
        7218
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "4170": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7185,
        7218
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4171": {
      "op": "DUP1"
    },
    "4172": {
      "op": "ISZERO"
    },
    "4173": {
      "op": "PUSH2",
      "value": "0x1055"
    },
    "4176": {
      "op": "JUMPI"
    },
    "4177": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4179": {
      "op": "DUP1"
    },
    "4180": {
      "op": "REVERT"
    },
    "4181": {
      "op": "JUMPDEST"
    },
    "4182": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7185,
        7218
      ],
      "op": "POP",
      "path": "20"
    },
    "4183": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7185,
        7218
      ],
      "op": "GAS",
      "path": "20"
    },
    "4184": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7185,
        7218
      ],
      "op": "STATICCALL",
      "path": "20"
    },
    "4185": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7185,
        7218
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4186": {
      "op": "DUP1"
    },
    "4187": {
      "op": "ISZERO"
    },
    "4188": {
      "op": "PUSH2",
      "value": "0x1069"
    },
    "4191": {
      "op": "JUMPI"
    },
    "4192": {
      "op": "RETURNDATASIZE"
    },
    "4193": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4195": {
      "op": "DUP1"
    },
    "4196": {
      "op": "RETURNDATACOPY"
    },
    "4197": {
      "op": "RETURNDATASIZE"
    },
    "4198": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4200": {
      "op": "REVERT"
    },
    "4201": {
      "op": "JUMPDEST"
    },
    "4202": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7185,
        7218
      ],
      "op": "POP",
      "path": "20"
    },
    "4203": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7185,
        7218
      ],
      "op": "POP",
      "path": "20"
    },
    "4204": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7185,
        7218
      ],
      "op": "POP",
      "path": "20"
    },
    "4205": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7185,
        7218
      ],
      "op": "POP",
      "path": "20"
    },
    "4206": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7185,
        7218
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4208": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7185,
        7218
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4209": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7185,
        7218
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "4210": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4212": {
      "op": "DUP2"
    },
    "4213": {
      "op": "LT"
    },
    "4214": {
      "op": "ISZERO"
    },
    "4215": {
      "op": "PUSH2",
      "value": "0x107F"
    },
    "4218": {
      "op": "JUMPI"
    },
    "4219": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4221": {
      "op": "DUP1"
    },
    "4222": {
      "op": "REVERT"
    },
    "4223": {
      "op": "JUMPDEST"
    },
    "4224": {
      "op": "POP"
    },
    "4225": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7185,
        7218
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4226": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4228": {
      "op": "DUP1"
    },
    "4229": {
      "op": "MLOAD"
    },
    "4230": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4232": {
      "op": "PUSH2",
      "value": "0x2214"
    },
    "4235": {
      "op": "DUP4"
    },
    "4236": {
      "op": "CODECOPY"
    },
    "4237": {
      "op": "DUP2"
    },
    "4238": {
      "op": "MLOAD"
    },
    "4239": {
      "op": "SWAP2"
    },
    "4240": {
      "op": "MSTORE"
    },
    "4241": {
      "offset": [
        742,
        784
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4242": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7220,
        7224
      ],
      "op": "DUP5",
      "path": "20"
    },
    "4243": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7159,
        7225
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "4248": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7159,
        7184
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1D15"
    },
    "4251": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7159,
        7225
      ],
      "op": "AND",
      "path": "20"
    },
    "4252": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "jump": "i",
      "offset": [
        7159,
        7225
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4253": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7159,
        7225
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4254": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7265,
        7275
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 25,
      "value": "0x8"
    },
    "4256": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7265,
        7275
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4257": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7239,
        7285
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x10C9"
    },
    "4260": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7239,
        7285
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4261": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4263": {
      "op": "DUP1"
    },
    "4264": {
      "op": "MLOAD"
    },
    "4265": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4267": {
      "op": "PUSH2",
      "value": "0x2214"
    },
    "4270": {
      "op": "DUP4"
    },
    "4271": {
      "op": "CODECOPY"
    },
    "4272": {
      "op": "DUP2"
    },
    "4273": {
      "op": "MLOAD"
    },
    "4274": {
      "op": "SWAP2"
    },
    "4275": {
      "op": "MSTORE"
    },
    "4276": {
      "offset": [
        742,
        784
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4281": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4283": {
      "op": "SHL"
    },
    "4284": {
      "op": "SUB"
    },
    "4285": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7265,
        7275
      ],
      "op": "AND",
      "path": "20"
    },
    "4286": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7277,
        7284
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4287": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7239,
        7285
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "4292": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7239,
        7264
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1D15"
    },
    "4295": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7239,
        7285
      ],
      "op": "AND",
      "path": "20"
    },
    "4296": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "jump": "i",
      "offset": [
        7239,
        7285
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4297": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7239,
        7285
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4298": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7299,
        7308
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 26,
      "value": "0x10D1"
    },
    "4301": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7299,
        7306
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x19BA"
    },
    "4304": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "jump": "i",
      "offset": [
        7299,
        7308
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4305": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7299,
        7308
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4306": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6978,
        7319
      ],
      "op": "POP",
      "path": "20"
    },
    "4307": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6978,
        7319
      ],
      "op": "POP",
      "path": "20"
    },
    "4308": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6978,
        7319
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4309": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7340,
        7345
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 27,
      "value": "0x4"
    },
    "4311": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7340,
        7345
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4312": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7340,
        7345
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4313": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7328,
        7353
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4315": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7328,
        7353
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4316": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7328,
        7353
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4317": {
      "op": "PUSH4",
      "value": "0x7C1E845D"
    },
    "4322": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4324": {
      "op": "SHL"
    },
    "4325": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7328,
        7353
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4326": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7328,
        7353
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4327": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7328,
        7353
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4328": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7328,
        7353
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4329": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4331": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4333": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4335": {
      "op": "SHL"
    },
    "4336": {
      "op": "SUB"
    },
    "4337": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7340,
        7345
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4338": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7340,
        7345
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "4339": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7340,
        7345
      ],
      "op": "AND",
      "path": "20"
    },
    "4340": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7340,
        7345
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "4341": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7328,
        7351
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xF83D08BA"
    },
    "4346": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7328,
        7351
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "4347": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7328,
        7353
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4348": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7328,
        7353
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4349": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7328,
        7353
      ],
      "op": "ADD",
      "path": "20"
    },
    "4350": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7328,
        7353
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "4351": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7340,
        7345
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4353": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7340,
        7345
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "4354": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7328,
        7353
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4355": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7328,
        7353
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4356": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7328,
        7353
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4357": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7328,
        7353
      ],
      "op": "SUB",
      "path": "20"
    },
    "4358": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7328,
        7353
      ],
      "op": "ADD",
      "path": "20"
    },
    "4359": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7328,
        7353
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4360": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7340,
        7345
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4361": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7340,
        7345
      ],
      "op": "DUP8",
      "path": "20"
    },
    "4362": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7328,
        7353
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4363": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7328,
        7353
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "4364": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7328,
        7353
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4365": {
      "op": "DUP1"
    },
    "4366": {
      "op": "ISZERO"
    },
    "4367": {
      "op": "PUSH2",
      "value": "0x1117"
    },
    "4370": {
      "op": "JUMPI"
    },
    "4371": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4373": {
      "op": "DUP1"
    },
    "4374": {
      "op": "REVERT"
    },
    "4375": {
      "op": "JUMPDEST"
    },
    "4376": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7328,
        7353
      ],
      "op": "POP",
      "path": "20"
    },
    "4377": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7328,
        7353
      ],
      "op": "GAS",
      "path": "20"
    },
    "4378": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7328,
        7353
      ],
      "op": "CALL",
      "path": "20"
    },
    "4379": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7328,
        7353
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4380": {
      "op": "DUP1"
    },
    "4381": {
      "op": "ISZERO"
    },
    "4382": {
      "op": "PUSH2",
      "value": "0x112B"
    },
    "4385": {
      "op": "JUMPI"
    },
    "4386": {
      "op": "RETURNDATASIZE"
    },
    "4387": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4389": {
      "op": "DUP1"
    },
    "4390": {
      "op": "RETURNDATACOPY"
    },
    "4391": {
      "op": "RETURNDATASIZE"
    },
    "4392": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4394": {
      "op": "REVERT"
    },
    "4395": {
      "op": "JUMPDEST"
    },
    "4396": {
      "op": "POP"
    },
    "4397": {
      "op": "POP"
    },
    "4398": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7372,
        7378
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 28,
      "value": "0xA"
    },
    "4400": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7372,
        7378
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4401": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7372,
        7389
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1143"
    },
    "4404": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7372,
        7389
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "4405": {
      "op": "POP"
    },
    "4406": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7372,
        7378
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4407": {
      "op": "POP"
    },
    "4408": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7383,
        7388
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4409": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7372,
        7389
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "4414": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7372,
        7382
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1C20"
    },
    "4417": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7372,
        7389
      ],
      "op": "AND",
      "path": "20"
    },
    "4418": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "jump": "i",
      "offset": [
        7372,
        7389
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4419": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7372,
        7389
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4420": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7363,
        7369
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA"
    },
    "4422": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7363,
        7389
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4423": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7363,
        7389
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4424": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7363,
        7389
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "4425": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7404,
        7428
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 29,
      "value": "0x40"
    },
    "4427": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7404,
        7428
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4428": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7404,
        7428
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4429": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7404,
        7428
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4430": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7404,
        7428
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4431": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7404,
        7428
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4432": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7404,
        7428
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4434": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7404,
        7428
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4435": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7404,
        7428
      ],
      "op": "ADD",
      "path": "20"
    },
    "4436": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7404,
        7428
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "4437": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7404,
        7428
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4438": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7404,
        7428
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "4439": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7404,
        7428
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4440": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7404,
        7428
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4441": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7404,
        7428
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4442": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7404,
        7428
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0xFA07446FAD45314351EB89109A154880278451332BB87F1824D435FE58DA5939"
    },
    "4475": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7404,
        7428
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "4476": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7404,
        7428
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4477": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7404,
        7428
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4478": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7404,
        7428
      ],
      "op": "SUB",
      "path": "20"
    },
    "4479": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7404,
        7428
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4480": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7404,
        7428
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4481": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7404,
        7428
      ],
      "op": "ADD",
      "path": "20"
    },
    "4482": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7404,
        7428
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4483": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7404,
        7428
      ],
      "op": "LOG1",
      "path": "20"
    },
    "4484": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5851,
        7435
      ],
      "op": "POP",
      "path": "20"
    },
    "4485": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5851,
        7435
      ],
      "op": "POP",
      "path": "20"
    },
    "4486": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        5851,
        7435
      ],
      "op": "POP",
      "path": "20"
    },
    "4487": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "jump": "o",
      "offset": [
        5851,
        7435
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4488": {
      "offset": [
        1057,
        1140
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4489": {
      "offset": [
        1097,
        1139
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xF147B8125D2EF93FB6965DB97D6746952A133934"
    },
    "4510": {
      "offset": [
        1057,
        1140
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4511": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "jump": "o",
      "offset": [
        1057,
        1140
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4512": {
      "offset": [
        1147,
        1229
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4513": {
      "offset": [
        1186,
        1228
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xDB25F211AB05B1C97D595516F45794528A807AD8"
    },
    "4534": {
      "offset": [
        1147,
        1229
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4535": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "jump": "o",
      "offset": [
        1147,
        1229
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4536": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        3930,
        4312
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4537": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4030,
        4040
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 30,
      "value": "0x7"
    },
    "4539": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4030,
        4040
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4540": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        3981,
        3996
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4542": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        3981,
        3996
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4547": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4549": {
      "op": "SHL"
    },
    "4550": {
      "op": "SUB"
    },
    "4551": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4030,
        4040
      ],
      "op": "AND",
      "path": "20"
    },
    "4552": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4016,
        4026
      ],
      "op": "CALLER",
      "path": "20"
    },
    "4553": {
      "branch": 87,
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4016,
        4040
      ],
      "op": "EQ",
      "path": "20"
    },
    "4554": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4008,
        4056
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1208"
    },
    "4557": {
      "branch": 87,
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4008,
        4056
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4558": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4008,
        4056
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4560": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4008,
        4056
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4561": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4008,
        4056
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4562": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4566": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4568": {
      "op": "SHL"
    },
    "4569": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4008,
        4056
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4570": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4008,
        4056
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4571": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4008,
        4056
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4573": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4008,
        4056
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "4575": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4008,
        4056
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4576": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4008,
        4056
      ],
      "op": "ADD",
      "path": "20"
    },
    "4577": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4008,
        4056
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4578": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4008,
        4056
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "4580": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4008,
        4056
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "4582": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4008,
        4056
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4583": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4008,
        4056
      ],
      "op": "ADD",
      "path": "20"
    },
    "4584": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4008,
        4056
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4585": {
      "op": "PUSH11",
      "value": "0x10B1B7B73A3937B63632B9"
    },
    "4597": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "4599": {
      "op": "SHL"
    },
    "4600": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4008,
        4056
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "4602": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4008,
        4056
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4603": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4008,
        4056
      ],
      "op": "ADD",
      "path": "20"
    },
    "4604": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4008,
        4056
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4605": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4008,
        4056
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4606": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4008,
        4056
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4607": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4008,
        4056
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4608": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4008,
        4056
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4609": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4008,
        4056
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4610": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4008,
        4056
      ],
      "op": "SUB",
      "path": "20"
    },
    "4611": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4008,
        4056
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "4613": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4008,
        4056
      ],
      "op": "ADD",
      "path": "20"
    },
    "4614": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4008,
        4056
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4615": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4008,
        4056
      ],
      "op": "REVERT",
      "path": "20"
    },
    "4616": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4008,
        4056
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4617": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4619": {
      "op": "DUP1"
    },
    "4620": {
      "op": "MLOAD"
    },
    "4621": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4623": {
      "op": "PUSH2",
      "value": "0x2214"
    },
    "4626": {
      "op": "DUP4"
    },
    "4627": {
      "op": "CODECOPY"
    },
    "4628": {
      "op": "DUP2"
    },
    "4629": {
      "op": "MLOAD"
    },
    "4630": {
      "op": "SWAP2"
    },
    "4631": {
      "op": "MSTORE"
    },
    "4632": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4634": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4636": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4638": {
      "op": "SHL"
    },
    "4639": {
      "op": "SUB"
    },
    "4640": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4074,
        4097
      ],
      "op": "DUP4",
      "path": "20",
      "statement": 31
    },
    "4641": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4074,
        4097
      ],
      "op": "AND",
      "path": "20"
    },
    "4642": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4074,
        4097
      ],
      "op": "EQ",
      "path": "20"
    },
    "4643": {
      "branch": 88,
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4074,
        4097
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4644": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4066,
        4106
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x125D"
    },
    "4647": {
      "branch": 88,
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4066,
        4106
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4648": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4066,
        4106
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4650": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4066,
        4106
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4651": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4066,
        4106
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4652": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4656": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4658": {
      "op": "SHL"
    },
    "4659": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4066,
        4106
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4660": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4066,
        4106
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4661": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4066,
        4106
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4663": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4066,
        4106
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "4665": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4066,
        4106
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4666": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4066,
        4106
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4667": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4066,
        4106
      ],
      "op": "ADD",
      "path": "20"
    },
    "4668": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4066,
        4106
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4669": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4066,
        4106
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4670": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4066,
        4106
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4671": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4066,
        4106
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4672": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4066,
        4106
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "4674": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4066,
        4106
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4675": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4066,
        4106
      ],
      "op": "ADD",
      "path": "20"
    },
    "4676": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4066,
        4106
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4677": {
      "op": "PUSH4",
      "value": "0x1DD85B9D"
    },
    "4682": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "4684": {
      "op": "SHL"
    },
    "4685": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4066,
        4106
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "4687": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4066,
        4106
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4688": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4066,
        4106
      ],
      "op": "ADD",
      "path": "20"
    },
    "4689": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4066,
        4106
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4690": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4066,
        4106
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4691": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4066,
        4106
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4692": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4066,
        4106
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4693": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4066,
        4106
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4694": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4066,
        4106
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4695": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4066,
        4106
      ],
      "op": "SUB",
      "path": "20"
    },
    "4696": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4066,
        4106
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "4698": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4066,
        4106
      ],
      "op": "ADD",
      "path": "20"
    },
    "4699": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4066,
        4106
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4700": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4066,
        4106
      ],
      "op": "REVERT",
      "path": "20"
    },
    "4701": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4066,
        4106
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4702": {
      "offset": [
        829,
        871
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xD533A949740BB3306D119CC777FA900BA034CD52"
    },
    "4723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4727": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4729": {
      "op": "SHL"
    },
    "4730": {
      "op": "SUB"
    },
    "4731": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4124,
        4146
      ],
      "op": "DUP4",
      "path": "20",
      "statement": 32
    },
    "4732": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4124,
        4146
      ],
      "op": "AND",
      "path": "20"
    },
    "4733": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4124,
        4146
      ],
      "op": "EQ",
      "path": "20"
    },
    "4734": {
      "branch": 89,
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4124,
        4146
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4735": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4116,
        4154
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x12B5"
    },
    "4738": {
      "branch": 89,
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4116,
        4154
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4739": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4116,
        4154
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4741": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4116,
        4154
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4742": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4116,
        4154
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4743": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4747": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4749": {
      "op": "SHL"
    },
    "4750": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4116,
        4154
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4751": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4116,
        4154
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4752": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4116,
        4154
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4754": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4116,
        4154
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "4756": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4116,
        4154
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4757": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4116,
        4154
      ],
      "op": "ADD",
      "path": "20"
    },
    "4758": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4116,
        4154
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4759": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4116,
        4154
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "4761": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4116,
        4154
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "4763": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4116,
        4154
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4764": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4116,
        4154
      ],
      "op": "ADD",
      "path": "20"
    },
    "4765": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4116,
        4154
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4766": {
      "op": "PUSH3",
      "value": "0x31B93B"
    },
    "4770": {
      "op": "PUSH1",
      "value": "0xE9"
    },
    "4772": {
      "op": "SHL"
    },
    "4773": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4116,
        4154
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "4775": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4116,
        4154
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4776": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4116,
        4154
      ],
      "op": "ADD",
      "path": "20"
    },
    "4777": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4116,
        4154
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4778": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4116,
        4154
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4779": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4116,
        4154
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4780": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4116,
        4154
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4781": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4116,
        4154
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4782": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4116,
        4154
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4783": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4116,
        4154
      ],
      "op": "SUB",
      "path": "20"
    },
    "4784": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4116,
        4154
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "4786": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4116,
        4154
      ],
      "op": "ADD",
      "path": "20"
    },
    "4787": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4116,
        4154
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4788": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4116,
        4154
      ],
      "op": "REVERT",
      "path": "20"
    },
    "4789": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4116,
        4154
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4790": {
      "offset": [
        1186,
        1228
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xDB25F211AB05B1C97D595516F45794528A807AD8"
    },
    "4811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4815": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4817": {
      "op": "SHL"
    },
    "4818": {
      "op": "SUB"
    },
    "4819": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4172,
        4195
      ],
      "op": "DUP4",
      "path": "20",
      "statement": 33
    },
    "4820": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4172,
        4195
      ],
      "op": "AND",
      "path": "20"
    },
    "4821": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4172,
        4195
      ],
      "op": "EQ",
      "path": "20"
    },
    "4822": {
      "branch": 90,
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4172,
        4195
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4823": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4164,
        4204
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1310"
    },
    "4826": {
      "branch": 90,
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4164,
        4204
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4827": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4164,
        4204
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4829": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4164,
        4204
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4830": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4164,
        4204
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4831": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4835": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4837": {
      "op": "SHL"
    },
    "4838": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4164,
        4204
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4839": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4164,
        4204
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4840": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4164,
        4204
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4842": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4164,
        4204
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "4844": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4164,
        4204
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4845": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4164,
        4204
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4846": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4164,
        4204
      ],
      "op": "ADD",
      "path": "20"
    },
    "4847": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4164,
        4204
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4848": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4164,
        4204
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4849": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4164,
        4204
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4850": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4164,
        4204
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4851": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4164,
        4204
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "4853": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4164,
        4204
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4854": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4164,
        4204
      ],
      "op": "ADD",
      "path": "20"
    },
    "4855": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4164,
        4204
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4856": {
      "op": "PUSH4",
      "value": "0x65757273"
    },
    "4861": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4863": {
      "op": "SHL"
    },
    "4864": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4164,
        4204
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "4866": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4164,
        4204
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4867": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4164,
        4204
      ],
      "op": "ADD",
      "path": "20"
    },
    "4868": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4164,
        4204
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4869": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4164,
        4204
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4870": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4164,
        4204
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4871": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4164,
        4204
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4872": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4164,
        4204
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4873": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4164,
        4204
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4874": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4164,
        4204
      ],
      "op": "SUB",
      "path": "20"
    },
    "4875": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4164,
        4204
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "4877": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4164,
        4204
      ],
      "op": "ADD",
      "path": "20"
    },
    "4878": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4164,
        4204
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4879": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4164,
        4204
      ],
      "op": "REVERT",
      "path": "20"
    },
    "4880": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4164,
        4204
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4881": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4224,
        4255
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 34,
      "value": "0x40"
    },
    "4883": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4224,
        4255
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4884": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4224,
        4255
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4885": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "4890": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4892": {
      "op": "SHL"
    },
    "4893": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4224,
        4255
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4894": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4224,
        4255
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4895": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4249,
        4253
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "4896": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4224,
        4255
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "4898": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4224,
        4255
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4899": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4224,
        4255
      ],
      "op": "ADD",
      "path": "20"
    },
    "4900": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4224,
        4255
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4901": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4224,
        4255
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4902": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4224,
        4255
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4903": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4905": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4907": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4909": {
      "op": "SHL"
    },
    "4910": {
      "op": "SUB"
    },
    "4911": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4224,
        4240
      ],
      "op": "DUP5",
      "path": "20"
    },
    "4912": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4224,
        4240
      ],
      "op": "AND",
      "path": "20"
    },
    "4913": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4224,
        4240
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4914": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4224,
        4240
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x70A08231"
    },
    "4919": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4224,
        4240
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4920": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4224,
        4255
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "4922": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4224,
        4255
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4923": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4224,
        4255
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4924": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4224,
        4255
      ],
      "op": "ADD",
      "path": "20"
    },
    "4925": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4224,
        4255
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "4926": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4224,
        4255
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4928": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4224,
        4255
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "4929": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4224,
        4255
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4930": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4224,
        4255
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4931": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4224,
        4255
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4932": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4224,
        4255
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4933": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4224,
        4255
      ],
      "op": "SUB",
      "path": "20"
    },
    "4934": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4224,
        4255
      ],
      "op": "ADD",
      "path": "20"
    },
    "4935": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4224,
        4255
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4936": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4224,
        4240
      ],
      "op": "DUP7",
      "path": "20"
    },
    "4937": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4224,
        4255
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4938": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4224,
        4255
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "4939": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4224,
        4255
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4940": {
      "op": "DUP1"
    },
    "4941": {
      "op": "ISZERO"
    },
    "4942": {
      "op": "PUSH2",
      "value": "0x1356"
    },
    "4945": {
      "op": "JUMPI"
    },
    "4946": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4948": {
      "op": "DUP1"
    },
    "4949": {
      "op": "REVERT"
    },
    "4950": {
      "op": "JUMPDEST"
    },
    "4951": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4224,
        4255
      ],
      "op": "POP",
      "path": "20"
    },
    "4952": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4224,
        4255
      ],
      "op": "GAS",
      "path": "20"
    },
    "4953": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4224,
        4255
      ],
      "op": "STATICCALL",
      "path": "20"
    },
    "4954": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4224,
        4255
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4955": {
      "op": "DUP1"
    },
    "4956": {
      "op": "ISZERO"
    },
    "4957": {
      "op": "PUSH2",
      "value": "0x136A"
    },
    "4960": {
      "op": "JUMPI"
    },
    "4961": {
      "op": "RETURNDATASIZE"
    },
    "4962": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4964": {
      "op": "DUP1"
    },
    "4965": {
      "op": "RETURNDATACOPY"
    },
    "4966": {
      "op": "RETURNDATASIZE"
    },
    "4967": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4969": {
      "op": "REVERT"
    },
    "4970": {
      "op": "JUMPDEST"
    },
    "4971": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4224,
        4255
      ],
      "op": "POP",
      "path": "20"
    },
    "4972": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4224,
        4255
      ],
      "op": "POP",
      "path": "20"
    },
    "4973": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4224,
        4255
      ],
      "op": "POP",
      "path": "20"
    },
    "4974": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4224,
        4255
      ],
      "op": "POP",
      "path": "20"
    },
    "4975": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4224,
        4255
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4977": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4224,
        4255
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4978": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4224,
        4255
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "4979": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4981": {
      "op": "DUP2"
    },
    "4982": {
      "op": "LT"
    },
    "4983": {
      "op": "ISZERO"
    },
    "4984": {
      "op": "PUSH2",
      "value": "0x1380"
    },
    "4987": {
      "op": "JUMPI"
    },
    "4988": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4990": {
      "op": "DUP1"
    },
    "4991": {
      "op": "REVERT"
    },
    "4992": {
      "op": "JUMPDEST"
    },
    "4993": {
      "op": "POP"
    },
    "4994": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4224,
        4255
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4995": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4285,
        4295
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 35,
      "value": "0x7"
    },
    "4997": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4285,
        4295
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4998": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4224,
        4255
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4999": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4224,
        4255
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5000": {
      "op": "POP"
    },
    "5001": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4265,
        4305
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x13A5"
    },
    "5004": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4265,
        4305
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5005": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5007": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5009": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5011": {
      "op": "SHL"
    },
    "5012": {
      "op": "SUB"
    },
    "5013": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4265,
        4284
      ],
      "op": "DUP5",
      "path": "20"
    },
    "5014": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4265,
        4284
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5015": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4265,
        4284
      ],
      "op": "AND",
      "path": "20"
    },
    "5016": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4265,
        4284
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5017": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4285,
        4295
      ],
      "op": "AND",
      "path": "20"
    },
    "5018": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4224,
        4255
      ],
      "op": "DUP4",
      "path": "20"
    },
    "5019": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4265,
        4305
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "5024": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4265,
        4284
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1D15"
    },
    "5027": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4265,
        4305
      ],
      "op": "AND",
      "path": "20"
    },
    "5028": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        4265,
        4305
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5029": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4265,
        4305
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5030": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        3930,
        4312
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5031": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        3930,
        4312
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5032": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        3930,
        4312
      ],
      "op": "POP",
      "path": "20"
    },
    "5033": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "jump": "o",
      "offset": [
        3930,
        4312
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5034": {
      "offset": [
        1718,
        1743
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5035": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        1718,
        1743
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "5037": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        1718,
        1743
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5040": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5042": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5044": {
      "op": "SHL"
    },
    "5045": {
      "op": "SUB"
    },
    "5046": {
      "offset": [
        1718,
        1743
      ],
      "op": "AND",
      "path": "20"
    },
    "5047": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        1718,
        1743
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5048": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "jump": "o",
      "offset": [
        1718,
        1743
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5049": {
      "offset": [
        1693,
        1711
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5050": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        1693,
        1711
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x5"
    },
    "5052": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        1693,
        1711
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5057": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5059": {
      "op": "SHL"
    },
    "5060": {
      "op": "SUB"
    },
    "5061": {
      "offset": [
        1693,
        1711
      ],
      "op": "AND",
      "path": "20"
    },
    "5062": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        1693,
        1711
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5063": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "jump": "o",
      "offset": [
        1693,
        1711
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5064": {
      "offset": [
        791,
        872
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5065": {
      "offset": [
        829,
        871
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xD533A949740BB3306D119CC777FA900BA034CD52"
    },
    "5086": {
      "offset": [
        791,
        872
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5087": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "jump": "o",
      "offset": [
        791,
        872
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5088": {
      "offset": [
        879,
        962
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5089": {
      "offset": [
        919,
        961
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xCE6A5FF5217E38315F87032CF90686C96627CAA"
    },
    "5110": {
      "offset": [
        879,
        962
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5111": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "jump": "o",
      "offset": [
        879,
        962
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5112": {
      "fn": "StrategyCurveEURVoterProxy.balanceOf",
      "offset": [
        7683,
        7794
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5113": {
      "fn": "StrategyCurveEURVoterProxy.balanceOf",
      "offset": [
        7725,
        7732
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "5115": {
      "fn": "StrategyCurveEURVoterProxy.balanceOf",
      "offset": [
        7751,
        7787
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 36,
      "value": "0x1419"
    },
    "5118": {
      "fn": "StrategyCurveEURVoterProxy.balanceOf",
      "offset": [
        7771,
        7786
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1405"
    },
    "5121": {
      "fn": "StrategyCurveEURVoterProxy.balanceOf",
      "offset": [
        7771,
        7784
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x57B"
    },
    "5124": {
      "fn": "StrategyCurveEURVoterProxy.balanceOf",
      "jump": "i",
      "offset": [
        7771,
        7786
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5125": {
      "fn": "StrategyCurveEURVoterProxy.balanceOf",
      "offset": [
        7771,
        7786
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5126": {
      "fn": "StrategyCurveEURVoterProxy.balanceOf",
      "offset": [
        7751,
        7766
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x140D"
    },
    "5129": {
      "fn": "StrategyCurveEURVoterProxy.balanceOf",
      "offset": [
        7751,
        7764
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x18E1"
    },
    "5132": {
      "fn": "StrategyCurveEURVoterProxy.balanceOf",
      "jump": "i",
      "offset": [
        7751,
        7766
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5133": {
      "fn": "StrategyCurveEURVoterProxy.balanceOf",
      "offset": [
        7751,
        7766
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5134": {
      "fn": "StrategyCurveEURVoterProxy.balanceOf",
      "offset": [
        7751,
        7770
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5135": {
      "fn": "StrategyCurveEURVoterProxy.balanceOf",
      "offset": [
        7751,
        7787
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "5140": {
      "fn": "StrategyCurveEURVoterProxy.balanceOf",
      "offset": [
        7751,
        7770
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1C20"
    },
    "5143": {
      "fn": "StrategyCurveEURVoterProxy.balanceOf",
      "offset": [
        7751,
        7787
      ],
      "op": "AND",
      "path": "20"
    },
    "5144": {
      "fn": "StrategyCurveEURVoterProxy.balanceOf",
      "jump": "i",
      "offset": [
        7751,
        7787
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5145": {
      "fn": "StrategyCurveEURVoterProxy.balanceOf",
      "offset": [
        7751,
        7787
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5146": {
      "fn": "StrategyCurveEURVoterProxy.balanceOf",
      "offset": [
        7744,
        7787
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5147": {
      "fn": "StrategyCurveEURVoterProxy.balanceOf",
      "offset": [
        7744,
        7787
      ],
      "op": "POP",
      "path": "20"
    },
    "5148": {
      "fn": "StrategyCurveEURVoterProxy.balanceOf",
      "offset": [
        7683,
        7794
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5149": {
      "fn": "StrategyCurveEURVoterProxy.balanceOf",
      "jump": "o",
      "offset": [
        7683,
        7794
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5150": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2645,
        2809
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5151": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2722,
        2732
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 37,
      "value": "0x8"
    },
    "5153": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2722,
        2732
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5158": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5160": {
      "op": "SHL"
    },
    "5161": {
      "op": "SUB"
    },
    "5162": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2722,
        2732
      ],
      "op": "AND",
      "path": "20"
    },
    "5163": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2708,
        2718
      ],
      "op": "CALLER",
      "path": "20"
    },
    "5164": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2708,
        2732
      ],
      "op": "EQ",
      "path": "20"
    },
    "5165": {
      "branch": 91,
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2708,
        2732
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5166": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2708,
        2760
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1441"
    },
    "5169": {
      "branch": 91,
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2708,
        2760
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "5170": {
      "op": "POP"
    },
    "5171": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2750,
        2760
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "5173": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2750,
        2760
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5178": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5180": {
      "op": "SHL"
    },
    "5181": {
      "op": "SUB"
    },
    "5182": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2750,
        2760
      ],
      "op": "AND",
      "path": "20"
    },
    "5183": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2736,
        2746
      ],
      "op": "CALLER",
      "path": "20"
    },
    "5184": {
      "branch": 92,
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2736,
        2760
      ],
      "op": "EQ",
      "path": "20"
    },
    "5185": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2708,
        2760
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5186": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2700,
        2776
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1480"
    },
    "5189": {
      "branch": 92,
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2700,
        2776
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "5190": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2700,
        2776
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5192": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2700,
        2776
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5193": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2700,
        2776
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5194": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5198": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5200": {
      "op": "SHL"
    },
    "5201": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2700,
        2776
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5202": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2700,
        2776
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5203": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2700,
        2776
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "5205": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2700,
        2776
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "5207": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2700,
        2776
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5208": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2700,
        2776
      ],
      "op": "ADD",
      "path": "20"
    },
    "5209": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2700,
        2776
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5210": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2700,
        2776
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "5212": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2700,
        2776
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "5214": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2700,
        2776
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5215": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2700,
        2776
      ],
      "op": "ADD",
      "path": "20"
    },
    "5216": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2700,
        2776
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5217": {
      "op": "PUSH11",
      "value": "0x8585D5D1A1BDC9A5E9959"
    },
    "5229": {
      "op": "PUSH1",
      "value": "0xAA"
    },
    "5231": {
      "op": "SHL"
    },
    "5232": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2700,
        2776
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "5234": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2700,
        2776
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5235": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2700,
        2776
      ],
      "op": "ADD",
      "path": "20"
    },
    "5236": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2700,
        2776
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5237": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2700,
        2776
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5238": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2700,
        2776
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5239": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2700,
        2776
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5240": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2700,
        2776
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5241": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2700,
        2776
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5242": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2700,
        2776
      ],
      "op": "SUB",
      "path": "20"
    },
    "5243": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2700,
        2776
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "5245": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2700,
        2776
      ],
      "op": "ADD",
      "path": "20"
    },
    "5246": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2700,
        2776
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5247": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2700,
        2776
      ],
      "op": "REVERT",
      "path": "20"
    },
    "5248": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2700,
        2776
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5249": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2786,
        2792
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 38,
      "value": "0x9"
    },
    "5251": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2786,
        2802
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5252": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2786,
        2802
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5253": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5257": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5259": {
      "op": "SHL"
    },
    "5260": {
      "op": "SUB"
    },
    "5261": {
      "op": "NOT"
    },
    "5262": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2786,
        2802
      ],
      "op": "AND",
      "path": "20"
    },
    "5263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5265": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5267": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5269": {
      "op": "SHL"
    },
    "5270": {
      "op": "SUB"
    },
    "5271": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2786,
        2802
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "5272": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2786,
        2802
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5273": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2786,
        2802
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "5274": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2786,
        2802
      ],
      "op": "AND",
      "path": "20"
    },
    "5275": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2786,
        2802
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5276": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2786,
        2802
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5277": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2786,
        2802
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5278": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2786,
        2802
      ],
      "op": "OR",
      "path": "20"
    },
    "5279": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2786,
        2802
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5280": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2786,
        2802
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "5281": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "jump": "o",
      "offset": [
        2645,
        2809
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5282": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3131,
        3287
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5283": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3218,
        3228
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 39,
      "value": "0x6"
    },
    "5285": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3218,
        3228
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5290": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5292": {
      "op": "SHL"
    },
    "5293": {
      "op": "SUB"
    },
    "5294": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3218,
        3228
      ],
      "op": "AND",
      "path": "20"
    },
    "5295": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3204,
        3214
      ],
      "op": "CALLER",
      "path": "20"
    },
    "5296": {
      "branch": 93,
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3204,
        3228
      ],
      "op": "EQ",
      "path": "20"
    },
    "5297": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3196,
        3244
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x14EF"
    },
    "5300": {
      "branch": 93,
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3196,
        3244
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "5301": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3196,
        3244
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5303": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3196,
        3244
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5304": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3196,
        3244
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5305": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5309": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5311": {
      "op": "SHL"
    },
    "5312": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3196,
        3244
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5313": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3196,
        3244
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5314": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3196,
        3244
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "5316": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3196,
        3244
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "5318": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3196,
        3244
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5319": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3196,
        3244
      ],
      "op": "ADD",
      "path": "20"
    },
    "5320": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3196,
        3244
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5321": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3196,
        3244
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "5323": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3196,
        3244
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "5325": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3196,
        3244
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5326": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3196,
        3244
      ],
      "op": "ADD",
      "path": "20"
    },
    "5327": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3196,
        3244
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5328": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "5340": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "5342": {
      "op": "SHL"
    },
    "5343": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3196,
        3244
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "5345": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3196,
        3244
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5346": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3196,
        3244
      ],
      "op": "ADD",
      "path": "20"
    },
    "5347": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3196,
        3244
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5348": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3196,
        3244
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5349": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3196,
        3244
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5350": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3196,
        3244
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5351": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3196,
        3244
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5352": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3196,
        3244
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5353": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3196,
        3244
      ],
      "op": "SUB",
      "path": "20"
    },
    "5354": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3196,
        3244
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "5356": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3196,
        3244
      ],
      "op": "ADD",
      "path": "20"
    },
    "5357": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3196,
        3244
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5358": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3196,
        3244
      ],
      "op": "REVERT",
      "path": "20"
    },
    "5359": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3196,
        3244
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5360": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3254,
        3265
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 40,
      "value": "0x1"
    },
    "5362": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3254,
        3280
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "5363": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "jump": "o",
      "offset": [
        3131,
        3287
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5364": {
      "offset": [
        1458,
        1486
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5365": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        1458,
        1486
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "5367": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        1458,
        1486
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5368": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        1458,
        1486
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5369": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "jump": "o",
      "offset": [
        1458,
        1486
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5370": {
      "offset": [
        1531,
        1569
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5371": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        1531,
        1569
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "5373": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        1531,
        1569
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5374": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        1531,
        1569
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5375": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "jump": "o",
      "offset": [
        1531,
        1569
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5376": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5315,
        5746
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5377": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5405,
        5415
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 41,
      "value": "0x7"
    },
    "5379": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5405,
        5415
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5380": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5356,
        5371
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "5382": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5356,
        5371
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5387": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5389": {
      "op": "SHL"
    },
    "5390": {
      "op": "SUB"
    },
    "5391": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5405,
        5415
      ],
      "op": "AND",
      "path": "20"
    },
    "5392": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5391,
        5401
      ],
      "op": "CALLER",
      "path": "20"
    },
    "5393": {
      "branch": 94,
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5391,
        5415
      ],
      "op": "EQ",
      "path": "20"
    },
    "5394": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5383,
        5431
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1550"
    },
    "5397": {
      "branch": 94,
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5383,
        5431
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "5398": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5383,
        5431
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5400": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5383,
        5431
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5401": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5383,
        5431
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5402": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5406": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5408": {
      "op": "SHL"
    },
    "5409": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5383,
        5431
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5410": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5383,
        5431
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5411": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5383,
        5431
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "5413": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5383,
        5431
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "5415": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5383,
        5431
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5416": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5383,
        5431
      ],
      "op": "ADD",
      "path": "20"
    },
    "5417": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5383,
        5431
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5418": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5383,
        5431
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "5420": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5383,
        5431
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "5422": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5383,
        5431
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5423": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5383,
        5431
      ],
      "op": "ADD",
      "path": "20"
    },
    "5424": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5383,
        5431
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5425": {
      "op": "PUSH11",
      "value": "0x10B1B7B73A3937B63632B9"
    },
    "5437": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "5439": {
      "op": "SHL"
    },
    "5440": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5383,
        5431
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "5442": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5383,
        5431
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5443": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5383,
        5431
      ],
      "op": "ADD",
      "path": "20"
    },
    "5444": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5383,
        5431
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5445": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5383,
        5431
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5446": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5383,
        5431
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5447": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5383,
        5431
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5448": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5383,
        5431
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5449": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5383,
        5431
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5450": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5383,
        5431
      ],
      "op": "SUB",
      "path": "20"
    },
    "5451": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5383,
        5431
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "5453": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5383,
        5431
      ],
      "op": "ADD",
      "path": "20"
    },
    "5454": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5383,
        5431
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5455": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5383,
        5431
      ],
      "op": "REVERT",
      "path": "20"
    },
    "5456": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5383,
        5431
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5457": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5441,
        5455
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 42,
      "value": "0x1558"
    },
    "5460": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5441,
        5453
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1E7F"
    },
    "5463": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "jump": "i",
      "offset": [
        5441,
        5455
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5464": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5441,
        5455
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5465": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5476,
        5513
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 43,
      "value": "0x40"
    },
    "5467": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5476,
        5513
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5468": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5476,
        5513
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5469": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "5474": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5476": {
      "op": "SHL"
    },
    "5477": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5476,
        5513
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5478": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5476,
        5513
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5479": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5507,
        5511
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "5480": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5476,
        5513
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "5482": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5476,
        5513
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5483": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5476,
        5513
      ],
      "op": "ADD",
      "path": "20"
    },
    "5484": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5476,
        5513
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5485": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5476,
        5513
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5486": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5476,
        5513
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5487": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5489": {
      "op": "DUP1"
    },
    "5490": {
      "op": "MLOAD"
    },
    "5491": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5493": {
      "op": "PUSH2",
      "value": "0x2214"
    },
    "5496": {
      "op": "DUP4"
    },
    "5497": {
      "op": "CODECOPY"
    },
    "5498": {
      "op": "DUP2"
    },
    "5499": {
      "op": "MLOAD"
    },
    "5500": {
      "op": "SWAP2"
    },
    "5501": {
      "op": "MSTORE"
    },
    "5502": {
      "offset": [
        742,
        784
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5503": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5476,
        5498
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x70A08231"
    },
    "5508": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5476,
        5498
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5509": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5476,
        5513
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "5511": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5476,
        5513
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5512": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5476,
        5513
      ],
      "op": "DUP4",
      "path": "20"
    },
    "5513": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5476,
        5513
      ],
      "op": "ADD",
      "path": "20"
    },
    "5514": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5476,
        5513
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "5515": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5476,
        5513
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "5517": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5476,
        5513
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "5518": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5476,
        5513
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5519": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5476,
        5513
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5520": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5476,
        5513
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5521": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5476,
        5513
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5522": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5476,
        5513
      ],
      "op": "SUB",
      "path": "20"
    },
    "5523": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5476,
        5513
      ],
      "op": "ADD",
      "path": "20"
    },
    "5524": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5476,
        5513
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5525": {
      "offset": [
        742,
        784
      ],
      "op": "DUP7",
      "path": "20"
    },
    "5526": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5476,
        5513
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5527": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5476,
        5513
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "5528": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5476,
        5513
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "5529": {
      "op": "DUP1"
    },
    "5530": {
      "op": "ISZERO"
    },
    "5531": {
      "op": "PUSH2",
      "value": "0x15A3"
    },
    "5534": {
      "op": "JUMPI"
    },
    "5535": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5537": {
      "op": "DUP1"
    },
    "5538": {
      "op": "REVERT"
    },
    "5539": {
      "op": "JUMPDEST"
    },
    "5540": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5476,
        5513
      ],
      "op": "POP",
      "path": "20"
    },
    "5541": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5476,
        5513
      ],
      "op": "GAS",
      "path": "20"
    },
    "5542": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5476,
        5513
      ],
      "op": "STATICCALL",
      "path": "20"
    },
    "5543": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5476,
        5513
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "5544": {
      "op": "DUP1"
    },
    "5545": {
      "op": "ISZERO"
    },
    "5546": {
      "op": "PUSH2",
      "value": "0x15B7"
    },
    "5549": {
      "op": "JUMPI"
    },
    "5550": {
      "op": "RETURNDATASIZE"
    },
    "5551": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5553": {
      "op": "DUP1"
    },
    "5554": {
      "op": "RETURNDATACOPY"
    },
    "5555": {
      "op": "RETURNDATASIZE"
    },
    "5556": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5558": {
      "op": "REVERT"
    },
    "5559": {
      "op": "JUMPDEST"
    },
    "5560": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5476,
        5513
      ],
      "op": "POP",
      "path": "20"
    },
    "5561": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5476,
        5513
      ],
      "op": "POP",
      "path": "20"
    },
    "5562": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5476,
        5513
      ],
      "op": "POP",
      "path": "20"
    },
    "5563": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5476,
        5513
      ],
      "op": "POP",
      "path": "20"
    },
    "5564": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5476,
        5513
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5566": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5476,
        5513
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5567": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5476,
        5513
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "5568": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5570": {
      "op": "DUP2"
    },
    "5571": {
      "op": "LT"
    },
    "5572": {
      "op": "ISZERO"
    },
    "5573": {
      "op": "PUSH2",
      "value": "0x15CD"
    },
    "5576": {
      "op": "JUMPI"
    },
    "5577": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5579": {
      "op": "DUP1"
    },
    "5580": {
      "op": "REVERT"
    },
    "5581": {
      "op": "JUMPDEST"
    },
    "5582": {
      "op": "POP"
    },
    "5583": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5476,
        5513
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5584": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5553,
        5563
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "5586": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5553,
        5563
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5587": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5541,
        5586
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5589": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5541,
        5586
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5590": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5541,
        5586
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5591": {
      "op": "PUSH4",
      "value": "0x2988BB9F"
    },
    "5596": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "5598": {
      "op": "SHL"
    },
    "5599": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5541,
        5586
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5600": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5541,
        5586
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5601": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5603": {
      "op": "DUP1"
    },
    "5604": {
      "op": "MLOAD"
    },
    "5605": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5607": {
      "op": "PUSH2",
      "value": "0x2214"
    },
    "5610": {
      "op": "DUP4"
    },
    "5611": {
      "op": "CODECOPY"
    },
    "5612": {
      "op": "DUP2"
    },
    "5613": {
      "op": "MLOAD"
    },
    "5614": {
      "op": "SWAP2"
    },
    "5615": {
      "op": "MSTORE"
    },
    "5616": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5541,
        5586
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "5618": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5541,
        5586
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5619": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5541,
        5586
      ],
      "op": "ADD",
      "path": "20"
    },
    "5620": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5541,
        5586
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5621": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5541,
        5586
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5622": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5541,
        5586
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5623": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5476,
        5513
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "5624": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5476,
        5513
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "5625": {
      "op": "POP"
    },
    "5626": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5524,
        5538
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "5628": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5524,
        5538
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "5629": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5633": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5635": {
      "op": "SHL"
    },
    "5636": {
      "op": "SUB"
    },
    "5637": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5553,
        5563
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5638": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5553,
        5563
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "5639": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5553,
        5563
      ],
      "op": "AND",
      "path": "20"
    },
    "5640": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5553,
        5563
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5641": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5541,
        5571
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xA622EE7C"
    },
    "5646": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5541,
        5571
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5647": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5541,
        5586
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "5649": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5541,
        5586
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5650": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5541,
        5586
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5651": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5541,
        5586
      ],
      "op": "ADD",
      "path": "20"
    },
    "5652": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5541,
        5586
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "5653": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5476,
        5513
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "5655": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5476,
        5513
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "5656": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5541,
        5586
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5657": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5541,
        5586
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5658": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5541,
        5586
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5659": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5541,
        5586
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5660": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5541,
        5586
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5661": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5541,
        5586
      ],
      "op": "SUB",
      "path": "20"
    },
    "5662": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5541,
        5586
      ],
      "op": "ADD",
      "path": "20"
    },
    "5663": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5541,
        5586
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5664": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5553,
        5563
      ],
      "op": "DUP7",
      "path": "20"
    },
    "5665": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5541,
        5586
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5666": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5541,
        5586
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "5667": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5541,
        5586
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "5668": {
      "op": "DUP1"
    },
    "5669": {
      "op": "ISZERO"
    },
    "5670": {
      "op": "PUSH2",
      "value": "0x162E"
    },
    "5673": {
      "op": "JUMPI"
    },
    "5674": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5676": {
      "op": "DUP1"
    },
    "5677": {
      "op": "REVERT"
    },
    "5678": {
      "op": "JUMPDEST"
    },
    "5679": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5541,
        5586
      ],
      "op": "POP",
      "path": "20"
    },
    "5680": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5541,
        5586
      ],
      "op": "GAS",
      "path": "20"
    },
    "5681": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5541,
        5586
      ],
      "op": "STATICCALL",
      "path": "20"
    },
    "5682": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5541,
        5586
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "5683": {
      "op": "DUP1"
    },
    "5684": {
      "op": "ISZERO"
    },
    "5685": {
      "op": "PUSH2",
      "value": "0x1642"
    },
    "5688": {
      "op": "JUMPI"
    },
    "5689": {
      "op": "RETURNDATASIZE"
    },
    "5690": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5692": {
      "op": "DUP1"
    },
    "5693": {
      "op": "RETURNDATACOPY"
    },
    "5694": {
      "op": "RETURNDATASIZE"
    },
    "5695": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5697": {
      "op": "REVERT"
    },
    "5698": {
      "op": "JUMPDEST"
    },
    "5699": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5541,
        5586
      ],
      "op": "POP",
      "path": "20"
    },
    "5700": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5541,
        5586
      ],
      "op": "POP",
      "path": "20"
    },
    "5701": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5541,
        5586
      ],
      "op": "POP",
      "path": "20"
    },
    "5702": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5541,
        5586
      ],
      "op": "POP",
      "path": "20"
    },
    "5703": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5541,
        5586
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5705": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5541,
        5586
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5706": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5541,
        5586
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "5707": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5709": {
      "op": "DUP2"
    },
    "5710": {
      "op": "LT"
    },
    "5711": {
      "op": "ISZERO"
    },
    "5712": {
      "op": "PUSH2",
      "value": "0x1658"
    },
    "5715": {
      "op": "JUMPI"
    },
    "5716": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5718": {
      "op": "DUP1"
    },
    "5719": {
      "op": "REVERT"
    },
    "5720": {
      "op": "JUMPDEST"
    },
    "5721": {
      "op": "POP"
    },
    "5722": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5541,
        5586
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5723": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5541,
        5586
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5724": {
      "op": "POP"
    },
    "5725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5729": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5731": {
      "op": "SHL"
    },
    "5732": {
      "op": "SUB"
    },
    "5733": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5604,
        5624
      ],
      "op": "DUP2",
      "path": "20",
      "statement": 44
    },
    "5734": {
      "branch": 95,
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5604,
        5624
      ],
      "op": "AND",
      "path": "20"
    },
    "5735": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5596,
        5635
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x16A0"
    },
    "5738": {
      "branch": 95,
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5596,
        5635
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "5739": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5596,
        5635
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5741": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5596,
        5635
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5742": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5596,
        5635
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5743": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5747": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5749": {
      "op": "SHL"
    },
    "5750": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5596,
        5635
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5751": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5596,
        5635
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5752": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5596,
        5635
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "5754": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5596,
        5635
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "5756": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5596,
        5635
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5757": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5596,
        5635
      ],
      "op": "ADD",
      "path": "20"
    },
    "5758": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5596,
        5635
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5759": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5596,
        5635
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "5761": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5596,
        5635
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "5763": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5596,
        5635
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5764": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5596,
        5635
      ],
      "op": "ADD",
      "path": "20"
    },
    "5765": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5596,
        5635
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5766": {
      "op": "PUSH6",
      "value": "0x85D985D5B1D"
    },
    "5773": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "5775": {
      "op": "SHL"
    },
    "5776": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5596,
        5635
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "5778": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5596,
        5635
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5779": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5596,
        5635
      ],
      "op": "ADD",
      "path": "20"
    },
    "5780": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5596,
        5635
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5781": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5596,
        5635
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5782": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5596,
        5635
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5783": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5596,
        5635
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5784": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5596,
        5635
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5785": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5596,
        5635
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5786": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5596,
        5635
      ],
      "op": "SUB",
      "path": "20"
    },
    "5787": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5596,
        5635
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "5789": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5596,
        5635
      ],
      "op": "ADD",
      "path": "20"
    },
    "5790": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5596,
        5635
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5791": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5596,
        5635
      ],
      "op": "REVERT",
      "path": "20"
    },
    "5792": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5596,
        5635
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5793": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5697,
        5739
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 45,
      "value": "0x16BF"
    },
    "5796": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5798": {
      "op": "DUP1"
    },
    "5799": {
      "op": "MLOAD"
    },
    "5800": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5802": {
      "op": "PUSH2",
      "value": "0x2214"
    },
    "5805": {
      "op": "DUP4"
    },
    "5806": {
      "op": "CODECOPY"
    },
    "5807": {
      "op": "DUP2"
    },
    "5808": {
      "op": "MLOAD"
    },
    "5809": {
      "op": "SWAP2"
    },
    "5810": {
      "op": "MSTORE"
    },
    "5811": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5723,
        5729
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5812": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5731,
        5738
      ],
      "op": "DUP5",
      "path": "20"
    },
    "5813": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5697,
        5739
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "5818": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5697,
        5722
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1D15"
    },
    "5821": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5697,
        5739
      ],
      "op": "AND",
      "path": "20"
    },
    "5822": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "jump": "i",
      "offset": [
        5697,
        5739
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5823": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5697,
        5739
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5824": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5315,
        5746
      ],
      "op": "POP",
      "path": "20"
    },
    "5825": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5315,
        5746
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5826": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "jump": "o",
      "offset": [
        5315,
        5746
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5827": {
      "offset": [
        1575,
        1607
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5828": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        1575,
        1607
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "5830": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        1575,
        1607
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5831": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        1575,
        1607
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5832": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "jump": "o",
      "offset": [
        1575,
        1607
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5833": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        7958,
        8110
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5834": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        8043,
        8053
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 46,
      "value": "0x6"
    },
    "5836": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        8043,
        8053
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5839": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5841": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5843": {
      "op": "SHL"
    },
    "5844": {
      "op": "SUB"
    },
    "5845": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        8043,
        8053
      ],
      "op": "AND",
      "path": "20"
    },
    "5846": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        8029,
        8039
      ],
      "op": "CALLER",
      "path": "20"
    },
    "5847": {
      "branch": 96,
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        8029,
        8053
      ],
      "op": "EQ",
      "path": "20"
    },
    "5848": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        8021,
        8069
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1716"
    },
    "5851": {
      "branch": 96,
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        8021,
        8069
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "5852": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        8021,
        8069
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5854": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        8021,
        8069
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5855": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        8021,
        8069
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5856": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5860": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5862": {
      "op": "SHL"
    },
    "5863": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        8021,
        8069
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5864": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        8021,
        8069
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5865": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        8021,
        8069
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "5867": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        8021,
        8069
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "5869": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        8021,
        8069
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5870": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        8021,
        8069
      ],
      "op": "ADD",
      "path": "20"
    },
    "5871": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        8021,
        8069
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5872": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        8021,
        8069
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "5874": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        8021,
        8069
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "5876": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        8021,
        8069
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5877": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        8021,
        8069
      ],
      "op": "ADD",
      "path": "20"
    },
    "5878": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        8021,
        8069
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5879": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "5891": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "5893": {
      "op": "SHL"
    },
    "5894": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        8021,
        8069
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "5896": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        8021,
        8069
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5897": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        8021,
        8069
      ],
      "op": "ADD",
      "path": "20"
    },
    "5898": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        8021,
        8069
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5899": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        8021,
        8069
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5900": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        8021,
        8069
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5901": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        8021,
        8069
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5902": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        8021,
        8069
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5903": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        8021,
        8069
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5904": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        8021,
        8069
      ],
      "op": "SUB",
      "path": "20"
    },
    "5905": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        8021,
        8069
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "5907": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        8021,
        8069
      ],
      "op": "ADD",
      "path": "20"
    },
    "5908": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        8021,
        8069
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5909": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        8021,
        8069
      ],
      "op": "REVERT",
      "path": "20"
    },
    "5910": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        8021,
        8069
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5911": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        8079,
        8089
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 47,
      "value": "0x7"
    },
    "5913": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        8079,
        8103
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5914": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        8079,
        8103
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5919": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5921": {
      "op": "SHL"
    },
    "5922": {
      "op": "SUB"
    },
    "5923": {
      "op": "NOT"
    },
    "5924": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        8079,
        8103
      ],
      "op": "AND",
      "path": "20"
    },
    "5925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5929": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5931": {
      "op": "SHL"
    },
    "5932": {
      "op": "SUB"
    },
    "5933": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        8079,
        8103
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "5934": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        8079,
        8103
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5935": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        8079,
        8103
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "5936": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        8079,
        8103
      ],
      "op": "AND",
      "path": "20"
    },
    "5937": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        8079,
        8103
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5938": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        8079,
        8103
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5939": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        8079,
        8103
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5940": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        8079,
        8103
      ],
      "op": "OR",
      "path": "20"
    },
    "5941": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        8079,
        8103
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5942": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        8079,
        8103
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "5943": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "jump": "o",
      "offset": [
        7958,
        8110
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5944": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        2815,
        2955
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5945": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        2894,
        2904
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 48,
      "value": "0x6"
    },
    "5947": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        2894,
        2904
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5948": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5952": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5954": {
      "op": "SHL"
    },
    "5955": {
      "op": "SUB"
    },
    "5956": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        2894,
        2904
      ],
      "op": "AND",
      "path": "20"
    },
    "5957": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        2880,
        2890
      ],
      "op": "CALLER",
      "path": "20"
    },
    "5958": {
      "branch": 97,
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        2880,
        2904
      ],
      "op": "EQ",
      "path": "20"
    },
    "5959": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        2872,
        2920
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1785"
    },
    "5962": {
      "branch": 97,
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        2872,
        2920
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "5963": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        2872,
        2920
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5965": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        2872,
        2920
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5966": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        2872,
        2920
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5967": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5971": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5973": {
      "op": "SHL"
    },
    "5974": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        2872,
        2920
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5975": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        2872,
        2920
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5976": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        2872,
        2920
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "5978": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        2872,
        2920
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "5980": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        2872,
        2920
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5981": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        2872,
        2920
      ],
      "op": "ADD",
      "path": "20"
    },
    "5982": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        2872,
        2920
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5983": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        2872,
        2920
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "5985": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        2872,
        2920
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "5987": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        2872,
        2920
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5988": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        2872,
        2920
      ],
      "op": "ADD",
      "path": "20"
    },
    "5989": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        2872,
        2920
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5990": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "6002": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "6004": {
      "op": "SHL"
    },
    "6005": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        2872,
        2920
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "6007": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        2872,
        2920
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6008": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        2872,
        2920
      ],
      "op": "ADD",
      "path": "20"
    },
    "6009": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        2872,
        2920
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6010": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        2872,
        2920
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6011": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        2872,
        2920
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6012": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        2872,
        2920
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6013": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        2872,
        2920
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6014": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        2872,
        2920
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6015": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        2872,
        2920
      ],
      "op": "SUB",
      "path": "20"
    },
    "6016": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        2872,
        2920
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "6018": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        2872,
        2920
      ],
      "op": "ADD",
      "path": "20"
    },
    "6019": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        2872,
        2920
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6020": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        2872,
        2920
      ],
      "op": "REVERT",
      "path": "20"
    },
    "6021": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        2872,
        2920
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6022": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        2930,
        2937
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 49,
      "value": "0x0"
    },
    "6024": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        2930,
        2948
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "6025": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "jump": "o",
      "offset": [
        2815,
        2955
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6026": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3475,
        3607
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6027": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3550,
        3560
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 50,
      "value": "0x6"
    },
    "6029": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3550,
        3560
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6030": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6032": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6034": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6036": {
      "op": "SHL"
    },
    "6037": {
      "op": "SUB"
    },
    "6038": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3550,
        3560
      ],
      "op": "AND",
      "path": "20"
    },
    "6039": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3536,
        3546
      ],
      "op": "CALLER",
      "path": "20"
    },
    "6040": {
      "branch": 98,
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3536,
        3560
      ],
      "op": "EQ",
      "path": "20"
    },
    "6041": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3528,
        3576
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x17D7"
    },
    "6044": {
      "branch": 98,
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3528,
        3576
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "6045": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3528,
        3576
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6047": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3528,
        3576
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6048": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3528,
        3576
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6049": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6053": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6055": {
      "op": "SHL"
    },
    "6056": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3528,
        3576
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6057": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3528,
        3576
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6058": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3528,
        3576
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "6060": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3528,
        3576
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "6062": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3528,
        3576
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6063": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3528,
        3576
      ],
      "op": "ADD",
      "path": "20"
    },
    "6064": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3528,
        3576
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6065": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3528,
        3576
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "6067": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3528,
        3576
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "6069": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3528,
        3576
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6070": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3528,
        3576
      ],
      "op": "ADD",
      "path": "20"
    },
    "6071": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3528,
        3576
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6072": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "6084": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "6086": {
      "op": "SHL"
    },
    "6087": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3528,
        3576
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "6089": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3528,
        3576
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6090": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3528,
        3576
      ],
      "op": "ADD",
      "path": "20"
    },
    "6091": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3528,
        3576
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6092": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3528,
        3576
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6093": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3528,
        3576
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6094": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3528,
        3576
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6095": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3528,
        3576
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6096": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3528,
        3576
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6097": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3528,
        3576
      ],
      "op": "SUB",
      "path": "20"
    },
    "6098": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3528,
        3576
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "6100": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3528,
        3576
      ],
      "op": "ADD",
      "path": "20"
    },
    "6101": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3528,
        3576
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6102": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3528,
        3576
      ],
      "op": "REVERT",
      "path": "20"
    },
    "6103": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3528,
        3576
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6104": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3586,
        3591
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 51,
      "value": "0x4"
    },
    "6106": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3586,
        3600
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6107": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3586,
        3600
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6108": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6110": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6112": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6114": {
      "op": "SHL"
    },
    "6115": {
      "op": "SUB"
    },
    "6116": {
      "op": "NOT"
    },
    "6117": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3586,
        3600
      ],
      "op": "AND",
      "path": "20"
    },
    "6118": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6120": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6122": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6124": {
      "op": "SHL"
    },
    "6125": {
      "op": "SUB"
    },
    "6126": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3586,
        3600
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6127": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3586,
        3600
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6128": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3586,
        3600
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6129": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3586,
        3600
      ],
      "op": "AND",
      "path": "20"
    },
    "6130": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3586,
        3600
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6131": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3586,
        3600
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6132": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3586,
        3600
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6133": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3586,
        3600
      ],
      "op": "OR",
      "path": "20"
    },
    "6134": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3586,
        3600
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6135": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3586,
        3600
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "6136": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "jump": "o",
      "offset": [
        3475,
        3607
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6137": {
      "offset": [
        968,
        1051
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6138": {
      "offset": [
        1008,
        1050
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0x90BB609649E0451E5AD952683D64BD2D1F245840"
    },
    "6159": {
      "offset": [
        968,
        1051
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6160": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "jump": "o",
      "offset": [
        968,
        1051
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6161": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7800,
        7952
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6162": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7885,
        7895
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 52,
      "value": "0x6"
    },
    "6164": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7885,
        7895
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6165": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6167": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6169": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6171": {
      "op": "SHL"
    },
    "6172": {
      "op": "SUB"
    },
    "6173": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7885,
        7895
      ],
      "op": "AND",
      "path": "20"
    },
    "6174": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7871,
        7881
      ],
      "op": "CALLER",
      "path": "20"
    },
    "6175": {
      "branch": 99,
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7871,
        7895
      ],
      "op": "EQ",
      "path": "20"
    },
    "6176": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7863,
        7911
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x185E"
    },
    "6179": {
      "branch": 99,
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7863,
        7911
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "6180": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7863,
        7911
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6182": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7863,
        7911
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6183": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7863,
        7911
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6184": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6188": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6190": {
      "op": "SHL"
    },
    "6191": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7863,
        7911
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6192": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7863,
        7911
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6193": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7863,
        7911
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "6195": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7863,
        7911
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "6197": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7863,
        7911
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6198": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7863,
        7911
      ],
      "op": "ADD",
      "path": "20"
    },
    "6199": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7863,
        7911
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6200": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7863,
        7911
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "6202": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7863,
        7911
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "6204": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7863,
        7911
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6205": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7863,
        7911
      ],
      "op": "ADD",
      "path": "20"
    },
    "6206": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7863,
        7911
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6207": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "6219": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "6221": {
      "op": "SHL"
    },
    "6222": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7863,
        7911
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "6224": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7863,
        7911
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6225": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7863,
        7911
      ],
      "op": "ADD",
      "path": "20"
    },
    "6226": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7863,
        7911
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6227": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7863,
        7911
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6228": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7863,
        7911
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6229": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7863,
        7911
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6230": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7863,
        7911
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6231": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7863,
        7911
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6232": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7863,
        7911
      ],
      "op": "SUB",
      "path": "20"
    },
    "6233": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7863,
        7911
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "6235": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7863,
        7911
      ],
      "op": "ADD",
      "path": "20"
    },
    "6236": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7863,
        7911
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6237": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7863,
        7911
      ],
      "op": "REVERT",
      "path": "20"
    },
    "6238": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7863,
        7911
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6239": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7921,
        7931
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 53,
      "value": "0x6"
    },
    "6241": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7921,
        7945
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6242": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7921,
        7945
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6247": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6249": {
      "op": "SHL"
    },
    "6250": {
      "op": "SUB"
    },
    "6251": {
      "op": "NOT"
    },
    "6252": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7921,
        7945
      ],
      "op": "AND",
      "path": "20"
    },
    "6253": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6257": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6259": {
      "op": "SHL"
    },
    "6260": {
      "op": "SUB"
    },
    "6261": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7921,
        7945
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6262": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7921,
        7945
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6263": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7921,
        7945
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6264": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7921,
        7945
      ],
      "op": "AND",
      "path": "20"
    },
    "6265": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7921,
        7945
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6266": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7921,
        7945
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6267": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7921,
        7945
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6268": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7921,
        7945
      ],
      "op": "OR",
      "path": "20"
    },
    "6269": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7921,
        7945
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6270": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        7921,
        7945
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "6271": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "jump": "o",
      "offset": [
        7800,
        7952
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6272": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        2961,
        3125
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6273": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3052,
        3062
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 54,
      "value": "0x6"
    },
    "6275": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3052,
        3062
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6280": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6282": {
      "op": "SHL"
    },
    "6283": {
      "op": "SUB"
    },
    "6284": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3052,
        3062
      ],
      "op": "AND",
      "path": "20"
    },
    "6285": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3038,
        3048
      ],
      "op": "CALLER",
      "path": "20"
    },
    "6286": {
      "branch": 100,
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3038,
        3062
      ],
      "op": "EQ",
      "path": "20"
    },
    "6287": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3030,
        3078
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x18CD"
    },
    "6290": {
      "branch": 100,
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3030,
        3078
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "6291": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3030,
        3078
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6293": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3030,
        3078
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6294": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3030,
        3078
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6295": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6299": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6301": {
      "op": "SHL"
    },
    "6302": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3030,
        3078
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6303": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3030,
        3078
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6304": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3030,
        3078
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "6306": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3030,
        3078
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "6308": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3030,
        3078
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6309": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3030,
        3078
      ],
      "op": "ADD",
      "path": "20"
    },
    "6310": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3030,
        3078
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6311": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3030,
        3078
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "6313": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3030,
        3078
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "6315": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3030,
        3078
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6316": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3030,
        3078
      ],
      "op": "ADD",
      "path": "20"
    },
    "6317": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3030,
        3078
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6318": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "6330": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "6332": {
      "op": "SHL"
    },
    "6333": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3030,
        3078
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "6335": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3030,
        3078
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6336": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3030,
        3078
      ],
      "op": "ADD",
      "path": "20"
    },
    "6337": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3030,
        3078
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6338": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3030,
        3078
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6339": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3030,
        3078
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6340": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3030,
        3078
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6341": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3030,
        3078
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6342": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3030,
        3078
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6343": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3030,
        3078
      ],
      "op": "SUB",
      "path": "20"
    },
    "6344": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3030,
        3078
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "6346": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3030,
        3078
      ],
      "op": "ADD",
      "path": "20"
    },
    "6347": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3030,
        3078
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6348": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3030,
        3078
      ],
      "op": "REVERT",
      "path": "20"
    },
    "6349": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3030,
        3078
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6350": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3088,
        3101
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 55,
      "value": "0x3"
    },
    "6352": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3088,
        3118
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "6353": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "jump": "o",
      "offset": [
        2961,
        3125
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6354": {
      "offset": [
        1811,
        1832
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6355": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        1811,
        1832
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x9"
    },
    "6357": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        1811,
        1832
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6362": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6364": {
      "op": "SHL"
    },
    "6365": {
      "op": "SUB"
    },
    "6366": {
      "offset": [
        1811,
        1832
      ],
      "op": "AND",
      "path": "20"
    },
    "6367": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        1811,
        1832
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6368": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "jump": "o",
      "offset": [
        1811,
        1832
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6369": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        7441,
        7557
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6370": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        7513,
        7550
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 56,
      "value": "0x40"
    },
    "6372": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        7513,
        7550
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6373": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        7513,
        7550
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6374": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "6379": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6381": {
      "op": "SHL"
    },
    "6382": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        7513,
        7550
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6383": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        7513,
        7550
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6384": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        7544,
        7548
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "6385": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        7513,
        7550
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "6387": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        7513,
        7550
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6388": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        7513,
        7550
      ],
      "op": "ADD",
      "path": "20"
    },
    "6389": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        7513,
        7550
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6390": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        7513,
        7550
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6391": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        7513,
        7550
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6392": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        7487,
        7494
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "6394": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        7487,
        7494
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6395": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6397": {
      "op": "DUP1"
    },
    "6398": {
      "op": "MLOAD"
    },
    "6399": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6401": {
      "op": "PUSH2",
      "value": "0x2214"
    },
    "6404": {
      "op": "DUP4"
    },
    "6405": {
      "op": "CODECOPY"
    },
    "6406": {
      "op": "DUP2"
    },
    "6407": {
      "op": "MLOAD"
    },
    "6408": {
      "op": "SWAP2"
    },
    "6409": {
      "op": "MSTORE"
    },
    "6410": {
      "offset": [
        742,
        784
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6411": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        7513,
        7535
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x70A08231"
    },
    "6416": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        7513,
        7535
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6417": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        7513,
        7550
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "6419": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        7513,
        7550
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6420": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        7513,
        7550
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6421": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        7513,
        7550
      ],
      "op": "ADD",
      "path": "20"
    },
    "6422": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        7513,
        7550
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6423": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        7513,
        7550
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "6425": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        7513,
        7550
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6426": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        7513,
        7550
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6427": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        7513,
        7550
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6428": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        7513,
        7550
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6429": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        7513,
        7550
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6430": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        7513,
        7550
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6431": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        7513,
        7550
      ],
      "op": "SUB",
      "path": "20"
    },
    "6432": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        7513,
        7550
      ],
      "op": "ADD",
      "path": "20"
    },
    "6433": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        7513,
        7550
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6434": {
      "offset": [
        742,
        784
      ],
      "op": "DUP7",
      "path": "20"
    },
    "6435": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        7513,
        7550
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6436": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        7513,
        7550
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "6437": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        7513,
        7550
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "6438": {
      "op": "DUP1"
    },
    "6439": {
      "op": "ISZERO"
    },
    "6440": {
      "op": "PUSH2",
      "value": "0x5DE"
    },
    "6443": {
      "op": "JUMPI"
    },
    "6444": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6446": {
      "op": "DUP1"
    },
    "6447": {
      "op": "REVERT"
    },
    "6448": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2459,
        2639
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6449": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2544,
        2554
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 57,
      "value": "0x8"
    },
    "6451": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2544,
        2554
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6456": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6458": {
      "op": "SHL"
    },
    "6459": {
      "op": "SUB"
    },
    "6460": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2544,
        2554
      ],
      "op": "AND",
      "path": "20"
    },
    "6461": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2530,
        2540
      ],
      "op": "CALLER",
      "path": "20"
    },
    "6462": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2530,
        2554
      ],
      "op": "EQ",
      "path": "20"
    },
    "6463": {
      "branch": 101,
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2530,
        2554
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6464": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2530,
        2582
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1953"
    },
    "6467": {
      "branch": 101,
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2530,
        2582
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "6468": {
      "op": "POP"
    },
    "6469": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2572,
        2582
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "6471": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2572,
        2582
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6474": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6476": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6478": {
      "op": "SHL"
    },
    "6479": {
      "op": "SUB"
    },
    "6480": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2572,
        2582
      ],
      "op": "AND",
      "path": "20"
    },
    "6481": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2558,
        2568
      ],
      "op": "CALLER",
      "path": "20"
    },
    "6482": {
      "branch": 102,
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2558,
        2582
      ],
      "op": "EQ",
      "path": "20"
    },
    "6483": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2530,
        2582
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6484": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2522,
        2598
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1992"
    },
    "6487": {
      "branch": 102,
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2522,
        2598
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "6488": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2522,
        2598
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6490": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2522,
        2598
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6491": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2522,
        2598
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6492": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6496": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6498": {
      "op": "SHL"
    },
    "6499": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2522,
        2598
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6500": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2522,
        2598
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6501": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2522,
        2598
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "6503": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2522,
        2598
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "6505": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2522,
        2598
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6506": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2522,
        2598
      ],
      "op": "ADD",
      "path": "20"
    },
    "6507": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2522,
        2598
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6508": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2522,
        2598
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "6510": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2522,
        2598
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "6512": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2522,
        2598
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6513": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2522,
        2598
      ],
      "op": "ADD",
      "path": "20"
    },
    "6514": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2522,
        2598
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6515": {
      "op": "PUSH11",
      "value": "0x8585D5D1A1BDC9A5E9959"
    },
    "6527": {
      "op": "PUSH1",
      "value": "0xAA"
    },
    "6529": {
      "op": "SHL"
    },
    "6530": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2522,
        2598
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "6532": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2522,
        2598
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6533": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2522,
        2598
      ],
      "op": "ADD",
      "path": "20"
    },
    "6534": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2522,
        2598
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6535": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2522,
        2598
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6536": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2522,
        2598
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6537": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2522,
        2598
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6538": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2522,
        2598
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6539": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2522,
        2598
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6540": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2522,
        2598
      ],
      "op": "SUB",
      "path": "20"
    },
    "6541": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2522,
        2598
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "6543": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2522,
        2598
      ],
      "op": "ADD",
      "path": "20"
    },
    "6544": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2522,
        2598
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6545": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2522,
        2598
      ],
      "op": "REVERT",
      "path": "20"
    },
    "6546": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2522,
        2598
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6547": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2608,
        2618
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 58,
      "value": "0x8"
    },
    "6549": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2608,
        2632
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6550": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2608,
        2632
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6555": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6557": {
      "op": "SHL"
    },
    "6558": {
      "op": "SUB"
    },
    "6559": {
      "op": "NOT"
    },
    "6560": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2608,
        2632
      ],
      "op": "AND",
      "path": "20"
    },
    "6561": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6563": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6565": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6567": {
      "op": "SHL"
    },
    "6568": {
      "op": "SUB"
    },
    "6569": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2608,
        2632
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6570": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2608,
        2632
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6571": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2608,
        2632
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6572": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2608,
        2632
      ],
      "op": "AND",
      "path": "20"
    },
    "6573": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2608,
        2632
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6574": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2608,
        2632
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6575": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2608,
        2632
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6576": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2608,
        2632
      ],
      "op": "OR",
      "path": "20"
    },
    "6577": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2608,
        2632
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6578": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2608,
        2632
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "6579": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "jump": "o",
      "offset": [
        2459,
        2639
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6580": {
      "offset": [
        1492,
        1525
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6581": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        1492,
        1525
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "6583": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        1492,
        1525
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6584": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        1492,
        1525
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6585": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "jump": "o",
      "offset": [
        1492,
        1525
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6586": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3613,
        3850
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6587": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3665,
        3702
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6589": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3665,
        3702
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6590": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3665,
        3702
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6591": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "6596": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6598": {
      "op": "SHL"
    },
    "6599": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3665,
        3702
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6600": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3665,
        3702
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6601": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3696,
        3700
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "6602": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3665,
        3702
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "6604": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3665,
        3702
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6605": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3665,
        3702
      ],
      "op": "ADD",
      "path": "20"
    },
    "6606": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3665,
        3702
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6607": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3665,
        3702
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6608": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3665,
        3702
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6609": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3649,
        3662
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "6611": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3649,
        3662
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6612": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6614": {
      "op": "DUP1"
    },
    "6615": {
      "op": "MLOAD"
    },
    "6616": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6618": {
      "op": "PUSH2",
      "value": "0x2214"
    },
    "6621": {
      "op": "DUP4"
    },
    "6622": {
      "op": "CODECOPY"
    },
    "6623": {
      "op": "DUP2"
    },
    "6624": {
      "op": "MLOAD"
    },
    "6625": {
      "op": "SWAP2"
    },
    "6626": {
      "op": "MSTORE"
    },
    "6627": {
      "offset": [
        742,
        784
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6628": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3665,
        3687
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x70A08231"
    },
    "6633": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3665,
        3687
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6634": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3665,
        3702
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "6636": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3665,
        3702
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6637": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3665,
        3702
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6638": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3665,
        3702
      ],
      "op": "ADD",
      "path": "20"
    },
    "6639": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3665,
        3702
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6640": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3665,
        3702
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "6642": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3665,
        3702
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6643": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3665,
        3702
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6644": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3665,
        3702
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6645": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3665,
        3702
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6646": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3665,
        3702
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6647": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3665,
        3702
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6648": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3665,
        3702
      ],
      "op": "SUB",
      "path": "20"
    },
    "6649": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3665,
        3702
      ],
      "op": "ADD",
      "path": "20"
    },
    "6650": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3665,
        3702
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6651": {
      "offset": [
        742,
        784
      ],
      "op": "DUP7",
      "path": "20"
    },
    "6652": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3665,
        3702
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6653": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3665,
        3702
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "6654": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3665,
        3702
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "6655": {
      "op": "DUP1"
    },
    "6656": {
      "op": "ISZERO"
    },
    "6657": {
      "op": "PUSH2",
      "value": "0x1A09"
    },
    "6660": {
      "op": "JUMPI"
    },
    "6661": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6663": {
      "op": "DUP1"
    },
    "6664": {
      "op": "REVERT"
    },
    "6665": {
      "op": "JUMPDEST"
    },
    "6666": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3665,
        3702
      ],
      "op": "POP",
      "path": "20"
    },
    "6667": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3665,
        3702
      ],
      "op": "GAS",
      "path": "20"
    },
    "6668": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3665,
        3702
      ],
      "op": "STATICCALL",
      "path": "20"
    },
    "6669": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3665,
        3702
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "6670": {
      "op": "DUP1"
    },
    "6671": {
      "op": "ISZERO"
    },
    "6672": {
      "op": "PUSH2",
      "value": "0x1A1D"
    },
    "6675": {
      "op": "JUMPI"
    },
    "6676": {
      "op": "RETURNDATASIZE"
    },
    "6677": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6679": {
      "op": "DUP1"
    },
    "6680": {
      "op": "RETURNDATACOPY"
    },
    "6681": {
      "op": "RETURNDATASIZE"
    },
    "6682": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6684": {
      "op": "REVERT"
    },
    "6685": {
      "op": "JUMPDEST"
    },
    "6686": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3665,
        3702
      ],
      "op": "POP",
      "path": "20"
    },
    "6687": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3665,
        3702
      ],
      "op": "POP",
      "path": "20"
    },
    "6688": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3665,
        3702
      ],
      "op": "POP",
      "path": "20"
    },
    "6689": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3665,
        3702
      ],
      "op": "POP",
      "path": "20"
    },
    "6690": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3665,
        3702
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6692": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3665,
        3702
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6693": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3665,
        3702
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "6694": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6696": {
      "op": "DUP2"
    },
    "6697": {
      "op": "LT"
    },
    "6698": {
      "op": "ISZERO"
    },
    "6699": {
      "op": "PUSH2",
      "value": "0x1A33"
    },
    "6702": {
      "op": "JUMPI"
    },
    "6703": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6705": {
      "op": "DUP1"
    },
    "6706": {
      "op": "REVERT"
    },
    "6707": {
      "op": "JUMPDEST"
    },
    "6708": {
      "op": "POP"
    },
    "6709": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3665,
        3702
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6710": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3665,
        3702
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6711": {
      "op": "POP"
    },
    "6712": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3716,
        3725
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6713": {
      "branch": 103,
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3716,
        3725
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "6714": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3712,
        3844
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1AF7"
    },
    "6717": {
      "branch": 103,
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3712,
        3844
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "6718": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3767,
        3772
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 59,
      "value": "0x4"
    },
    "6720": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3767,
        3772
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6721": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3741,
        3780
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1A69"
    },
    "6724": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3741,
        3780
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6725": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6727": {
      "op": "DUP1"
    },
    "6728": {
      "op": "MLOAD"
    },
    "6729": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6731": {
      "op": "PUSH2",
      "value": "0x2214"
    },
    "6734": {
      "op": "DUP4"
    },
    "6735": {
      "op": "CODECOPY"
    },
    "6736": {
      "op": "DUP2"
    },
    "6737": {
      "op": "MLOAD"
    },
    "6738": {
      "op": "SWAP2"
    },
    "6739": {
      "op": "MSTORE"
    },
    "6740": {
      "offset": [
        742,
        784
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6745": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6747": {
      "op": "SHL"
    },
    "6748": {
      "op": "SUB"
    },
    "6749": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3767,
        3772
      ],
      "op": "AND",
      "path": "20"
    },
    "6750": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3774,
        3779
      ],
      "op": "DUP4",
      "path": "20"
    },
    "6751": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3741,
        3780
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "6756": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3741,
        3766
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1D15"
    },
    "6759": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3741,
        3780
      ],
      "op": "AND",
      "path": "20"
    },
    "6760": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "jump": "i",
      "offset": [
        3741,
        3780
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6761": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3741,
        3780
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6762": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3806,
        3811
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 60,
      "value": "0x4"
    },
    "6764": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3806,
        3811
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6765": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3806,
        3811
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6766": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3794,
        3833
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6768": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3794,
        3833
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6769": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3794,
        3833
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6770": {
      "op": "PUSH4",
      "value": "0x1F2C13E1"
    },
    "6775": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "6777": {
      "op": "SHL"
    },
    "6778": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3794,
        3833
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6779": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3794,
        3833
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6780": {
      "offset": [
        1008,
        1050
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0x90BB609649E0451E5AD952683D64BD2D1F245840"
    },
    "6801": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3794,
        3833
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "6802": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3794,
        3833
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6803": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3794,
        3833
      ],
      "op": "ADD",
      "path": "20"
    },
    "6804": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3794,
        3833
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "6805": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3794,
        3833
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6806": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3794,
        3833
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "6807": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3794,
        3833
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6808": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6810": {
      "op": "DUP1"
    },
    "6811": {
      "op": "MLOAD"
    },
    "6812": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6814": {
      "op": "PUSH2",
      "value": "0x2214"
    },
    "6817": {
      "op": "DUP4"
    },
    "6818": {
      "op": "CODECOPY"
    },
    "6819": {
      "op": "DUP2"
    },
    "6820": {
      "op": "MLOAD"
    },
    "6821": {
      "op": "SWAP2"
    },
    "6822": {
      "op": "MSTORE"
    },
    "6823": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3794,
        3833
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "6825": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3794,
        3833
      ],
      "op": "DUP5",
      "path": "20"
    },
    "6826": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3794,
        3833
      ],
      "op": "ADD",
      "path": "20"
    },
    "6827": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3794,
        3833
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6828": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3794,
        3833
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6831": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6833": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6835": {
      "op": "SHL"
    },
    "6836": {
      "op": "SUB"
    },
    "6837": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3806,
        3811
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6838": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3806,
        3811
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6839": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3806,
        3811
      ],
      "op": "AND",
      "path": "20"
    },
    "6840": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3806,
        3811
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6841": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3794,
        3820
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xF9609F08"
    },
    "6846": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3794,
        3820
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6847": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3794,
        3833
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "6849": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3794,
        3833
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6850": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3794,
        3833
      ],
      "op": "DUP4",
      "path": "20"
    },
    "6851": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3794,
        3833
      ],
      "op": "ADD",
      "path": "20"
    },
    "6852": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3794,
        3833
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6853": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3806,
        3811
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "6855": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3806,
        3811
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6856": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3794,
        3833
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6857": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3794,
        3833
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6858": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3794,
        3833
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6859": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3794,
        3833
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6860": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3794,
        3833
      ],
      "op": "SUB",
      "path": "20"
    },
    "6861": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3794,
        3833
      ],
      "op": "ADD",
      "path": "20"
    },
    "6862": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3794,
        3833
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6863": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3806,
        3811
      ],
      "op": "DUP4",
      "path": "20"
    },
    "6864": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3806,
        3811
      ],
      "op": "DUP8",
      "path": "20"
    },
    "6865": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3794,
        3833
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6866": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3794,
        3833
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "6867": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3794,
        3833
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "6868": {
      "op": "DUP1"
    },
    "6869": {
      "op": "ISZERO"
    },
    "6870": {
      "op": "PUSH2",
      "value": "0x1ADE"
    },
    "6873": {
      "op": "JUMPI"
    },
    "6874": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6876": {
      "op": "DUP1"
    },
    "6877": {
      "op": "REVERT"
    },
    "6878": {
      "op": "JUMPDEST"
    },
    "6879": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3794,
        3833
      ],
      "op": "POP",
      "path": "20"
    },
    "6880": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3794,
        3833
      ],
      "op": "GAS",
      "path": "20"
    },
    "6881": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3794,
        3833
      ],
      "op": "CALL",
      "path": "20"
    },
    "6882": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3794,
        3833
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "6883": {
      "op": "DUP1"
    },
    "6884": {
      "op": "ISZERO"
    },
    "6885": {
      "op": "PUSH2",
      "value": "0x1AF2"
    },
    "6888": {
      "op": "JUMPI"
    },
    "6889": {
      "op": "RETURNDATASIZE"
    },
    "6890": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6892": {
      "op": "DUP1"
    },
    "6893": {
      "op": "RETURNDATACOPY"
    },
    "6894": {
      "op": "RETURNDATASIZE"
    },
    "6895": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6897": {
      "op": "REVERT"
    },
    "6898": {
      "op": "JUMPDEST"
    },
    "6899": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3794,
        3833
      ],
      "op": "POP",
      "path": "20"
    },
    "6900": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3794,
        3833
      ],
      "op": "POP",
      "path": "20"
    },
    "6901": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3794,
        3833
      ],
      "op": "POP",
      "path": "20"
    },
    "6902": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3794,
        3833
      ],
      "op": "POP",
      "path": "20"
    },
    "6903": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3712,
        3844
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6904": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        3613,
        3850
      ],
      "op": "POP",
      "path": "20"
    },
    "6905": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "jump": "o",
      "offset": [
        3613,
        3850
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6906": {
      "offset": [
        1839,
        1860
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6907": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        1839,
        1860
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA"
    },
    "6909": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        1839,
        1860
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6910": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        1839,
        1860
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6911": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "jump": "o",
      "offset": [
        1839,
        1860
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6912": {
      "offset": [
        1613,
        1660
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6913": {
      "offset": [
        1655,
        1660
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2710"
    },
    "6916": {
      "offset": [
        1613,
        1660
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6917": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "jump": "o",
      "offset": [
        1613,
        1660
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6918": {
      "offset": [
        1667,
        1687
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6919": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        1667,
        1687
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "6921": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        1667,
        1687
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6926": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6928": {
      "op": "SHL"
    },
    "6929": {
      "op": "SUB"
    },
    "6930": {
      "offset": [
        1667,
        1687
      ],
      "op": "AND",
      "path": "20"
    },
    "6931": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        1667,
        1687
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6932": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "jump": "o",
      "offset": [
        1667,
        1687
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6933": {
      "offset": [
        1749,
        1774
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6934": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        1749,
        1774
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "6936": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        1749,
        1774
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6941": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6943": {
      "op": "SHL"
    },
    "6944": {
      "op": "SUB"
    },
    "6945": {
      "offset": [
        1749,
        1774
      ],
      "op": "AND",
      "path": "20"
    },
    "6946": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        1749,
        1774
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6947": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "jump": "o",
      "offset": [
        1749,
        1774
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6948": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6949": {
      "fn": "SafeMath.sub",
      "offset": [
        1332,
        1339
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6951": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 61,
      "value": "0x1B66"
    },
    "6954": {
      "fn": "SafeMath.sub",
      "offset": [
        1362,
        1363
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6955": {
      "fn": "SafeMath.sub",
      "offset": [
        1365,
        1366
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6956": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6958": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6959": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6960": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6962": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "ADD",
      "path": "1"
    },
    "6963": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6965": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6966": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6967": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1E"
    },
    "6969": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6970": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6971": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6973": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "ADD",
      "path": "1"
    },
    "6974": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "7007": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7008": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7009": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "POP",
      "path": "1"
    },
    "7010": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1361
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F23"
    },
    "7013": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        1358,
        1401
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7014": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7015": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1401
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7016": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1401
      ],
      "op": "POP",
      "path": "1"
    },
    "7017": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7018": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "7019": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7020": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "POP",
      "path": "1"
    },
    "7021": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "POP",
      "path": "1"
    },
    "7022": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1274,
        1408
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7023": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5102,
        5242
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7024": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5198,
        5203
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 62,
      "value": "0x4"
    },
    "7026": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5198,
        5203
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7027": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5198,
        5203
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7028": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5186,
        5235
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7030": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5186,
        5235
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7031": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5186,
        5235
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7032": {
      "op": "PUSH4",
      "value": "0x6CE57689"
    },
    "7037": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "7039": {
      "op": "SHL"
    },
    "7040": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5186,
        5235
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7041": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5186,
        5235
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7042": {
      "offset": [
        1008,
        1050
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0x90BB609649E0451E5AD952683D64BD2D1F245840"
    },
    "7063": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5186,
        5235
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "7064": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5186,
        5235
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7065": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5186,
        5235
      ],
      "op": "ADD",
      "path": "20"
    },
    "7066": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5186,
        5235
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "7067": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5186,
        5235
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7068": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5186,
        5235
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "7069": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5186,
        5235
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7070": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7072": {
      "op": "DUP1"
    },
    "7073": {
      "op": "MLOAD"
    },
    "7074": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7076": {
      "op": "PUSH2",
      "value": "0x2214"
    },
    "7079": {
      "op": "DUP4"
    },
    "7080": {
      "op": "CODECOPY"
    },
    "7081": {
      "op": "DUP2"
    },
    "7082": {
      "op": "MLOAD"
    },
    "7083": {
      "op": "SWAP2"
    },
    "7084": {
      "op": "MSTORE"
    },
    "7085": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5186,
        5235
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "7087": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5186,
        5235
      ],
      "op": "DUP5",
      "path": "20"
    },
    "7088": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5186,
        5235
      ],
      "op": "ADD",
      "path": "20"
    },
    "7089": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5186,
        5235
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7090": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5186,
        5235
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "7092": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5186,
        5235
      ],
      "op": "DUP4",
      "path": "20"
    },
    "7093": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5186,
        5235
      ],
      "op": "ADD",
      "path": "20"
    },
    "7094": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5186,
        5235
      ],
      "op": "DUP5",
      "path": "20"
    },
    "7095": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5186,
        5235
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7096": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5186,
        5235
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7097": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5186,
        5235
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7098": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5160,
        5167
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "7100": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5160,
        5167
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "7101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7103": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7105": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7107": {
      "op": "SHL"
    },
    "7108": {
      "op": "SUB"
    },
    "7109": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5198,
        5203
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7110": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5198,
        5203
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "7111": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5198,
        5203
      ],
      "op": "AND",
      "path": "20"
    },
    "7112": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5198,
        5203
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7113": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5186,
        5213
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xD9CAED12"
    },
    "7118": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5186,
        5213
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7119": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5186,
        5235
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "7121": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5186,
        5235
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7122": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5186,
        5235
      ],
      "op": "DUP4",
      "path": "20"
    },
    "7123": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5186,
        5235
      ],
      "op": "ADD",
      "path": "20"
    },
    "7124": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5186,
        5235
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "7125": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5186,
        5235
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "7127": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5186,
        5235
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "7128": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5186,
        5235
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7129": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5186,
        5235
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7130": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5186,
        5235
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7131": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5186,
        5235
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7132": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5186,
        5235
      ],
      "op": "SUB",
      "path": "20"
    },
    "7133": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5186,
        5235
      ],
      "op": "ADD",
      "path": "20"
    },
    "7134": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5186,
        5235
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7135": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5160,
        5167
      ],
      "op": "DUP8",
      "path": "20"
    },
    "7136": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5198,
        5203
      ],
      "op": "DUP8",
      "path": "20"
    },
    "7137": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5186,
        5235
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7138": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5186,
        5235
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "7139": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5186,
        5235
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "7140": {
      "op": "DUP1"
    },
    "7141": {
      "op": "ISZERO"
    },
    "7142": {
      "op": "PUSH2",
      "value": "0x1BEE"
    },
    "7145": {
      "op": "JUMPI"
    },
    "7146": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7148": {
      "op": "DUP1"
    },
    "7149": {
      "op": "REVERT"
    },
    "7150": {
      "op": "JUMPDEST"
    },
    "7151": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5186,
        5235
      ],
      "op": "POP",
      "path": "20"
    },
    "7152": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5186,
        5235
      ],
      "op": "GAS",
      "path": "20"
    },
    "7153": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5186,
        5235
      ],
      "op": "CALL",
      "path": "20"
    },
    "7154": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5186,
        5235
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "7155": {
      "op": "DUP1"
    },
    "7156": {
      "op": "ISZERO"
    },
    "7157": {
      "op": "PUSH2",
      "value": "0x1C02"
    },
    "7160": {
      "op": "JUMPI"
    },
    "7161": {
      "op": "RETURNDATASIZE"
    },
    "7162": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7164": {
      "op": "DUP1"
    },
    "7165": {
      "op": "RETURNDATACOPY"
    },
    "7166": {
      "op": "RETURNDATASIZE"
    },
    "7167": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7169": {
      "op": "REVERT"
    },
    "7170": {
      "op": "JUMPDEST"
    },
    "7171": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5186,
        5235
      ],
      "op": "POP",
      "path": "20"
    },
    "7172": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5186,
        5235
      ],
      "op": "POP",
      "path": "20"
    },
    "7173": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5186,
        5235
      ],
      "op": "POP",
      "path": "20"
    },
    "7174": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5186,
        5235
      ],
      "op": "POP",
      "path": "20"
    },
    "7175": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5186,
        5235
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7177": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5186,
        5235
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7178": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5186,
        5235
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "7179": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7181": {
      "op": "DUP2"
    },
    "7182": {
      "op": "LT"
    },
    "7183": {
      "op": "ISZERO"
    },
    "7184": {
      "op": "PUSH2",
      "value": "0x1C18"
    },
    "7187": {
      "op": "JUMPI"
    },
    "7188": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7190": {
      "op": "DUP1"
    },
    "7191": {
      "op": "REVERT"
    },
    "7192": {
      "op": "JUMPDEST"
    },
    "7193": {
      "op": "POP"
    },
    "7194": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5186,
        5235
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7195": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5186,
        5235
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "7196": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5102,
        5242
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7197": {
      "op": "POP"
    },
    "7198": {
      "op": "POP"
    },
    "7199": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "jump": "o",
      "offset": [
        5102,
        5242
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7200": {
      "fn": "SafeMath.add",
      "offset": [
        834,
        1010
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7201": {
      "fn": "SafeMath.add",
      "offset": [
        892,
        899
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7203": {
      "fn": "SafeMath.add",
      "offset": [
        923,
        928
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7204": {
      "fn": "SafeMath.add",
      "offset": [
        923,
        928
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7205": {
      "fn": "SafeMath.add",
      "offset": [
        923,
        928
      ],
      "op": "ADD",
      "path": "1"
    },
    "7206": {
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 63
    },
    "7207": {
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7208": {
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "LT",
      "path": "1"
    },
    "7209": {
      "branch": 108,
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "7210": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B66"
    },
    "7213": {
      "branch": 108,
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7214": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7216": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7217": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7218": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7222": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7224": {
      "op": "SHL"
    },
    "7225": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7226": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7227": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7229": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7231": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7232": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "1"
    },
    "7233": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7234": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1B"
    },
    "7236": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "7238": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7239": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "1"
    },
    "7240": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7241": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "7274": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "7276": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7277": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "1"
    },
    "7278": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7279": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7280": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7281": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7282": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7283": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7284": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SUB",
      "path": "1"
    },
    "7285": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "7287": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "1"
    },
    "7288": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7289": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "REVERT",
      "path": "1"
    },
    "7290": {
      "fn": "SafeMath.mul",
      "offset": [
        2159,
        2618
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7291": {
      "fn": "SafeMath.mul",
      "offset": [
        2217,
        2224
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7293": {
      "branch": 109,
      "fn": "SafeMath.mul",
      "offset": [
        2458,
        2464
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7294": {
      "fn": "SafeMath.mul",
      "offset": [
        2454,
        2499
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C89"
    },
    "7297": {
      "branch": 109,
      "fn": "SafeMath.mul",
      "offset": [
        2454,
        2499
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7298": {
      "op": "POP"
    },
    "7299": {
      "fn": "SafeMath.mul",
      "offset": [
        2487,
        2488
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 64,
      "value": "0x0"
    },
    "7301": {
      "fn": "SafeMath.mul",
      "offset": [
        2480,
        2488
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B69"
    },
    "7304": {
      "fn": "SafeMath.mul",
      "offset": [
        2480,
        2488
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7305": {
      "fn": "SafeMath.mul",
      "offset": [
        2454,
        2499
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7306": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2526
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7307": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2526
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7308": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2526
      ],
      "op": "MUL",
      "path": "1"
    },
    "7309": {
      "fn": "SafeMath.mul",
      "offset": [
        2525,
        2526
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7310": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2522
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7311": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2526
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7312": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2522
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7313": {
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 65,
      "value": "0x1C96"
    },
    "7316": {
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7317": {
      "dev": "Division by zero",
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "INVALID",
      "path": "1"
    },
    "7318": {
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7319": {
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "DIV",
      "path": "1"
    },
    "7320": {
      "branch": 110,
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2554
      ],
      "op": "EQ",
      "path": "1"
    },
    "7321": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B66"
    },
    "7324": {
      "branch": 110,
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7325": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7327": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7328": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7332": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7334": {
      "op": "SHL"
    },
    "7335": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7336": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7337": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7339": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "ADD",
      "path": "1"
    },
    "7340": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7341": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7342": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7344": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "ADD",
      "path": "1"
    },
    "7345": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7346": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7347": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SUB",
      "path": "1"
    },
    "7348": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7349": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7350": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x21"
    },
    "7352": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7353": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7354": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7356": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "ADD",
      "path": "1"
    },
    "7357": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7358": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2234"
    },
    "7361": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x21"
    },
    "7363": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7364": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "CODECOPY",
      "path": "1"
    },
    "7365": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7367": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "ADD",
      "path": "1"
    },
    "7368": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7369": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "POP",
      "path": "1"
    },
    "7370": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "POP",
      "path": "1"
    },
    "7371": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7373": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7374": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7375": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7376": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SUB",
      "path": "1"
    },
    "7377": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7378": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "REVERT",
      "path": "1"
    },
    "7379": {
      "fn": "SafeMath.div",
      "offset": [
        3073,
        3203
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7380": {
      "fn": "SafeMath.div",
      "offset": [
        3131,
        3138
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7382": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 66,
      "value": "0x1B66"
    },
    "7385": {
      "fn": "SafeMath.div",
      "offset": [
        3161,
        3162
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7386": {
      "fn": "SafeMath.div",
      "offset": [
        3164,
        3165
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7387": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7389": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7390": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7391": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7393": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "ADD",
      "path": "1"
    },
    "7394": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7396": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7397": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7398": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1A"
    },
    "7400": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7401": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7402": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7404": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "ADD",
      "path": "1"
    },
    "7405": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x536166654D6174683A206469766973696F6E206279207A65726F000000000000"
    },
    "7438": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7439": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7440": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "POP",
      "path": "1"
    },
    "7441": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3160
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1FBA"
    },
    "7444": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        3157,
        3196
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7445": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        662,
        836
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7446": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 67,
      "value": "0x40"
    },
    "7448": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7449": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7454": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7456": {
      "op": "SHL"
    },
    "7457": {
      "op": "SUB"
    },
    "7458": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7459": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "AND",
      "path": "6"
    },
    "7460": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "7462": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7463": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "ADD",
      "path": "6"
    },
    "7464": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7465": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "7467": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7468": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7469": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "ADD",
      "path": "6"
    },
    "7470": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7471": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7472": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7473": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7474": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7475": {
      "op": "DUP1"
    },
    "7476": {
      "op": "DUP4"
    },
    "7477": {
      "op": "SUB"
    },
    "7478": {
      "op": "SWAP1"
    },
    "7479": {
      "op": "SWAP2"
    },
    "7480": {
      "op": "ADD"
    },
    "7481": {
      "op": "DUP2"
    },
    "7482": {
      "op": "MSTORE"
    },
    "7483": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "7485": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7486": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7487": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "ADD",
      "path": "6"
    },
    "7488": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7489": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7490": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7491": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7493": {
      "op": "DUP2"
    },
    "7494": {
      "op": "ADD"
    },
    "7495": {
      "op": "DUP1"
    },
    "7496": {
      "op": "MLOAD"
    },
    "7497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7501": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7503": {
      "op": "SHL"
    },
    "7504": {
      "op": "SUB"
    },
    "7505": {
      "op": "AND"
    },
    "7506": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "7511": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7513": {
      "op": "SHL"
    },
    "7514": {
      "op": "OR"
    },
    "7515": {
      "op": "SWAP1"
    },
    "7516": {
      "op": "MSTORE"
    },
    "7517": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        744,
        829
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1D67"
    },
    "7520": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        744,
        829
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7521": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        763,
        768
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7522": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        763,
        768
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7523": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        744,
        762
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x201F"
    },
    "7526": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [
        744,
        829
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7527": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        744,
        829
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7528": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        662,
        836
      ],
      "op": "POP",
      "path": "6"
    },
    "7529": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        662,
        836
      ],
      "op": "POP",
      "path": "6"
    },
    "7530": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        662,
        836
      ],
      "op": "POP",
      "path": "6"
    },
    "7531": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "o",
      "offset": [
        662,
        836
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7532": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1050,
        1662
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7533": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1415,
        1425
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 68
    },
    "7534": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1415,
        1425
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "7535": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1415,
        1425
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7536": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1414,
        1476
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1DF2"
    },
    "7539": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1414,
        1476
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7540": {
      "op": "POP"
    },
    "7541": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7543": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7544": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7545": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "7550": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "7552": {
      "op": "SHL"
    },
    "7553": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7554": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7555": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1455,
        1459
      ],
      "op": "ADDRESS",
      "path": "6"
    },
    "7556": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "7558": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7559": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "ADD",
      "path": "6"
    },
    "7560": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7561": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7563": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7565": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7567": {
      "op": "SHL"
    },
    "7568": {
      "op": "SUB"
    },
    "7569": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7570": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7571": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "AND",
      "path": "6"
    },
    "7572": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "7574": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7575": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "ADD",
      "path": "6"
    },
    "7576": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7577": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7578": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7579": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1446
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7580": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1446
      ],
      "op": "DUP6",
      "path": "6"
    },
    "7581": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1446
      ],
      "op": "AND",
      "path": "6"
    },
    "7582": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1446
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7583": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1446
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xDD62ED3E"
    },
    "7588": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1446
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7589": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "7591": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7592": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7593": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "ADD",
      "path": "6"
    },
    "7594": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "7595": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7597": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "7598": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7599": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7600": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7601": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7602": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7603": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SUB",
      "path": "6"
    },
    "7604": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "ADD",
      "path": "6"
    },
    "7605": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7606": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1446
      ],
      "op": "DUP7",
      "path": "6"
    },
    "7607": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7608": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "7609": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "7610": {
      "op": "DUP1"
    },
    "7611": {
      "op": "ISZERO"
    },
    "7612": {
      "op": "PUSH2",
      "value": "0x1DC4"
    },
    "7615": {
      "op": "JUMPI"
    },
    "7616": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7618": {
      "op": "DUP1"
    },
    "7619": {
      "op": "REVERT"
    },
    "7620": {
      "op": "JUMPDEST"
    },
    "7621": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "POP",
      "path": "6"
    },
    "7622": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "GAS",
      "path": "6"
    },
    "7623": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "STATICCALL",
      "path": "6"
    },
    "7624": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "7625": {
      "op": "DUP1"
    },
    "7626": {
      "op": "ISZERO"
    },
    "7627": {
      "op": "PUSH2",
      "value": "0x1DD8"
    },
    "7630": {
      "op": "JUMPI"
    },
    "7631": {
      "op": "RETURNDATASIZE"
    },
    "7632": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7634": {
      "op": "DUP1"
    },
    "7635": {
      "op": "RETURNDATACOPY"
    },
    "7636": {
      "op": "RETURNDATASIZE"
    },
    "7637": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7639": {
      "op": "REVERT"
    },
    "7640": {
      "op": "JUMPDEST"
    },
    "7641": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "POP",
      "path": "6"
    },
    "7642": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "POP",
      "path": "6"
    },
    "7643": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "POP",
      "path": "6"
    },
    "7644": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "POP",
      "path": "6"
    },
    "7645": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7647": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7648": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "7649": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7651": {
      "op": "DUP2"
    },
    "7652": {
      "op": "LT"
    },
    "7653": {
      "op": "ISZERO"
    },
    "7654": {
      "op": "PUSH2",
      "value": "0x1DEE"
    },
    "7657": {
      "op": "JUMPI"
    },
    "7658": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7660": {
      "op": "DUP1"
    },
    "7661": {
      "op": "REVERT"
    },
    "7662": {
      "op": "JUMPDEST"
    },
    "7663": {
      "op": "POP"
    },
    "7664": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7665": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1475
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "7666": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1414,
        1476
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7667": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E2D"
    },
    "7670": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7671": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7673": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7674": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7678": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7680": {
      "op": "SHL"
    },
    "7681": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7682": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7683": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "7685": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "ADD",
      "path": "6"
    },
    "7686": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7687": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7688": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7690": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "ADD",
      "path": "6"
    },
    "7691": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7692": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7693": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "SUB",
      "path": "6"
    },
    "7694": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7695": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7696": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x36"
    },
    "7698": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7699": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7700": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7702": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "ADD",
      "path": "6"
    },
    "7703": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7704": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x227F"
    },
    "7707": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x36"
    },
    "7709": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7710": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "CODECOPY",
      "path": "6"
    },
    "7711": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7713": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "ADD",
      "path": "6"
    },
    "7714": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7715": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "POP",
      "path": "6"
    },
    "7716": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "POP",
      "path": "6"
    },
    "7717": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7719": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7720": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7721": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7722": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "SUB",
      "path": "6"
    },
    "7723": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7724": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "REVERT",
      "path": "6"
    },
    "7725": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7726": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 69,
      "value": "0x40"
    },
    "7728": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7729": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7730": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7734": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7736": {
      "op": "SHL"
    },
    "7737": {
      "op": "SUB"
    },
    "7738": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7739": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "AND",
      "path": "6"
    },
    "7740": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "7742": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7743": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "ADD",
      "path": "6"
    },
    "7744": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7745": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "7747": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7748": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7749": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "ADD",
      "path": "6"
    },
    "7750": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7751": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7752": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7753": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7754": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7755": {
      "op": "DUP1"
    },
    "7756": {
      "op": "DUP4"
    },
    "7757": {
      "op": "SUB"
    },
    "7758": {
      "op": "SWAP1"
    },
    "7759": {
      "op": "SWAP2"
    },
    "7760": {
      "op": "ADD"
    },
    "7761": {
      "op": "DUP2"
    },
    "7762": {
      "op": "MSTORE"
    },
    "7763": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "7765": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7766": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7767": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "ADD",
      "path": "6"
    },
    "7768": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7769": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7770": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7771": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7773": {
      "op": "DUP2"
    },
    "7774": {
      "op": "ADD"
    },
    "7775": {
      "op": "DUP1"
    },
    "7776": {
      "op": "MLOAD"
    },
    "7777": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7779": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7781": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7783": {
      "op": "SHL"
    },
    "7784": {
      "op": "SUB"
    },
    "7785": {
      "op": "AND"
    },
    "7786": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "7791": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7793": {
      "op": "SHL"
    },
    "7794": {
      "op": "OR"
    },
    "7795": {
      "op": "SWAP1"
    },
    "7796": {
      "op": "MSTORE"
    },
    "7797": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1566,
        1655
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1D67"
    },
    "7800": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1566,
        1655
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7801": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1585,
        1590
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7802": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1585,
        1590
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7803": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1566,
        1584
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x201F"
    },
    "7806": {
      "fn": "SafeERC20.safeApprove",
      "jump": "i",
      "offset": [
        1566,
        1655
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7807": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        5752,
        5845
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7808": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        5807,
        5812
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 70,
      "value": "0x4"
    },
    "7810": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        5807,
        5812
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7811": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        5807,
        5812
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7812": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        5795,
        5838
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7814": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        5795,
        5838
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7815": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        5795,
        5838
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7816": {
      "op": "PUSH4",
      "value": "0x1395C59"
    },
    "7821": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "7823": {
      "op": "SHL"
    },
    "7824": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        5795,
        5838
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7825": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        5795,
        5838
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7826": {
      "offset": [
        1008,
        1050
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0x90BB609649E0451E5AD952683D64BD2D1F245840"
    },
    "7847": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        5795,
        5838
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "7848": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        5795,
        5838
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7849": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        5795,
        5838
      ],
      "op": "ADD",
      "path": "20"
    },
    "7850": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        5795,
        5838
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "7851": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        5795,
        5838
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7852": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        5795,
        5838
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "7853": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        5795,
        5838
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7854": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7856": {
      "op": "DUP1"
    },
    "7857": {
      "op": "MLOAD"
    },
    "7858": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7860": {
      "op": "PUSH2",
      "value": "0x2214"
    },
    "7863": {
      "op": "DUP4"
    },
    "7864": {
      "op": "CODECOPY"
    },
    "7865": {
      "op": "DUP2"
    },
    "7866": {
      "op": "MLOAD"
    },
    "7867": {
      "op": "SWAP2"
    },
    "7868": {
      "op": "MSTORE"
    },
    "7869": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        5795,
        5838
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "7871": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        5795,
        5838
      ],
      "op": "DUP5",
      "path": "20"
    },
    "7872": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        5795,
        5838
      ],
      "op": "ADD",
      "path": "20"
    },
    "7873": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        5795,
        5838
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7874": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        5795,
        5838
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7877": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7879": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7881": {
      "op": "SHL"
    },
    "7882": {
      "op": "SUB"
    },
    "7883": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        5807,
        5812
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7884": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        5807,
        5812
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7885": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        5807,
        5812
      ],
      "op": "AND",
      "path": "20"
    },
    "7886": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        5807,
        5812
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7887": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        5795,
        5825
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x9CAE2C8"
    },
    "7892": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        5795,
        5825
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7893": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        5795,
        5838
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "7895": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        5795,
        5838
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7896": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        5795,
        5838
      ],
      "op": "DUP4",
      "path": "20"
    },
    "7897": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        5795,
        5838
      ],
      "op": "ADD",
      "path": "20"
    },
    "7898": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        5795,
        5838
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "7899": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        5795,
        5838
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "7901": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        5795,
        5838
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "7902": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        5795,
        5838
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7903": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        5795,
        5838
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7904": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        5795,
        5838
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7905": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        5795,
        5838
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7906": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        5795,
        5838
      ],
      "op": "SUB",
      "path": "20"
    },
    "7907": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        5795,
        5838
      ],
      "op": "ADD",
      "path": "20"
    },
    "7908": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        5795,
        5838
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7909": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        5807,
        5812
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "7911": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        5807,
        5812
      ],
      "op": "DUP8",
      "path": "20"
    },
    "7912": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        5795,
        5838
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7913": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        5795,
        5838
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "7914": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        5795,
        5838
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "7915": {
      "op": "DUP1"
    },
    "7916": {
      "op": "ISZERO"
    },
    "7917": {
      "op": "PUSH2",
      "value": "0x1EF5"
    },
    "7920": {
      "op": "JUMPI"
    },
    "7921": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7923": {
      "op": "DUP1"
    },
    "7924": {
      "op": "REVERT"
    },
    "7925": {
      "op": "JUMPDEST"
    },
    "7926": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        5795,
        5838
      ],
      "op": "POP",
      "path": "20"
    },
    "7927": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        5795,
        5838
      ],
      "op": "GAS",
      "path": "20"
    },
    "7928": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        5795,
        5838
      ],
      "op": "CALL",
      "path": "20"
    },
    "7929": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        5795,
        5838
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "7930": {
      "op": "DUP1"
    },
    "7931": {
      "op": "ISZERO"
    },
    "7932": {
      "op": "PUSH2",
      "value": "0x1F09"
    },
    "7935": {
      "op": "JUMPI"
    },
    "7936": {
      "op": "RETURNDATASIZE"
    },
    "7937": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7939": {
      "op": "DUP1"
    },
    "7940": {
      "op": "RETURNDATACOPY"
    },
    "7941": {
      "op": "RETURNDATASIZE"
    },
    "7942": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7944": {
      "op": "REVERT"
    },
    "7945": {
      "op": "JUMPDEST"
    },
    "7946": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        5795,
        5838
      ],
      "op": "POP",
      "path": "20"
    },
    "7947": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        5795,
        5838
      ],
      "op": "POP",
      "path": "20"
    },
    "7948": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        5795,
        5838
      ],
      "op": "POP",
      "path": "20"
    },
    "7949": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        5795,
        5838
      ],
      "op": "POP",
      "path": "20"
    },
    "7950": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        5795,
        5838
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7952": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        5795,
        5838
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7953": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        5795,
        5838
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "7954": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7956": {
      "op": "DUP2"
    },
    "7957": {
      "op": "LT"
    },
    "7958": {
      "op": "ISZERO"
    },
    "7959": {
      "op": "PUSH2",
      "value": "0x1F1F"
    },
    "7962": {
      "op": "JUMPI"
    },
    "7963": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7965": {
      "op": "DUP1"
    },
    "7966": {
      "op": "REVERT"
    },
    "7967": {
      "op": "JUMPDEST"
    },
    "7968": {
      "op": "POP"
    },
    "7969": {
      "op": "POP"
    },
    "7970": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "jump": "o",
      "offset": [
        5752,
        5845
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7971": {
      "fn": "SafeMath.sub",
      "offset": [
        1732,
        1919
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7972": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1825
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7974": {
      "fn": "SafeMath.sub",
      "offset": [
        1853,
        1865
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 71
    },
    "7975": {
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7976": {
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7977": {
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "GT",
      "path": "1"
    },
    "7978": {
      "branch": 111,
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "7979": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1FB2"
    },
    "7982": {
      "branch": 111,
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7983": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7985": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7986": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7990": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7992": {
      "op": "SHL"
    },
    "7993": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7994": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7995": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7997": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "7998": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7999": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8000": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8002": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "8003": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8004": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8005": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "1"
    },
    "8006": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8007": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8008": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8009": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8010": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8011": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8012": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8013": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8014": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8016": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "8017": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8018": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "8019": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8020": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8021": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8022": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8024": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "8025": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8026": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8027": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8028": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8029": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8031": {
      "op": "JUMPDEST"
    },
    "8032": {
      "op": "DUP4"
    },
    "8033": {
      "op": "DUP2"
    },
    "8034": {
      "op": "LT"
    },
    "8035": {
      "op": "ISZERO"
    },
    "8036": {
      "op": "PUSH2",
      "value": "0x1F77"
    },
    "8039": {
      "op": "JUMPI"
    },
    "8040": {
      "op": "DUP2"
    },
    "8041": {
      "op": "DUP2"
    },
    "8042": {
      "op": "ADD"
    },
    "8043": {
      "op": "MLOAD"
    },
    "8044": {
      "op": "DUP4"
    },
    "8045": {
      "op": "DUP3"
    },
    "8046": {
      "op": "ADD"
    },
    "8047": {
      "op": "MSTORE"
    },
    "8048": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8050": {
      "op": "ADD"
    },
    "8051": {
      "op": "PUSH2",
      "value": "0x1F5F"
    },
    "8054": {
      "op": "JUMP"
    },
    "8055": {
      "op": "JUMPDEST"
    },
    "8056": {
      "op": "POP"
    },
    "8057": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "8058": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "8059": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "8060": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8061": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "8062": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8063": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8064": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "8065": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8066": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "8068": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "AND",
      "path": "1"
    },
    "8069": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8070": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8071": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1FA4"
    },
    "8074": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8075": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8076": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8077": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "1"
    },
    "8078": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8079": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8080": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "8082": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8083": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8085": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "1"
    },
    "8086": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "8089": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "EXP",
      "path": "1"
    },
    "8090": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "1"
    },
    "8091": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "NOT",
      "path": "1"
    },
    "8092": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "AND",
      "path": "1"
    },
    "8093": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8094": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8095": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8097": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "8098": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8099": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "8100": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8101": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "8102": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "8103": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "8104": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "8105": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "8106": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8108": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8109": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8110": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8111": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "1"
    },
    "8112": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8113": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "REVERT",
      "path": "1"
    },
    "8114": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8115": {
      "op": "POP"
    },
    "8116": {
      "op": "POP"
    },
    "8117": {
      "op": "POP"
    },
    "8118": {
      "fn": "SafeMath.sub",
      "offset": [
        1888,
        1893
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8119": {
      "fn": "SafeMath.sub",
      "offset": [
        1888,
        1893
      ],
      "op": "SUB",
      "path": "1"
    },
    "8120": {
      "fn": "SafeMath.sub",
      "offset": [
        1888,
        1893
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8121": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1732,
        1919
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8122": {
      "fn": "SafeMath.div",
      "offset": [
        3718,
        4056
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8123": {
      "fn": "SafeMath.div",
      "offset": [
        3804,
        3811
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8125": {
      "fn": "SafeMath.div",
      "offset": [
        3904,
        3916
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 72
    },
    "8126": {
      "branch": 112,
      "fn": "SafeMath.div",
      "offset": [
        3897,
        3902
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8127": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2009"
    },
    "8130": {
      "branch": 112,
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8131": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8133": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8134": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8138": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8140": {
      "op": "SHL"
    },
    "8141": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8142": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8143": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8145": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8147": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8148": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "ADD",
      "path": "1"
    },
    "8149": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8150": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8151": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8152": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8153": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8154": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "8156": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP5",
      "path": "1"
    },
    "8157": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "ADD",
      "path": "1"
    },
    "8158": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8159": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8160": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8161": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8162": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "8163": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8164": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "8165": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "8167": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8168": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8169": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "ADD",
      "path": "1"
    },
    "8170": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8171": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8172": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP6",
      "path": "1"
    },
    "8173": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "ADD",
      "path": "1"
    },
    "8174": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8175": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8176": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8177": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8178": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8180": {
      "op": "DUP4"
    },
    "8181": {
      "op": "ISZERO"
    },
    "8182": {
      "op": "PUSH2",
      "value": "0x1F77"
    },
    "8185": {
      "op": "JUMPI"
    },
    "8186": {
      "op": "DUP2"
    },
    "8187": {
      "op": "DUP2"
    },
    "8188": {
      "op": "ADD"
    },
    "8189": {
      "op": "MLOAD"
    },
    "8190": {
      "op": "DUP4"
    },
    "8191": {
      "op": "DUP3"
    },
    "8192": {
      "op": "ADD"
    },
    "8193": {
      "op": "MSTORE"
    },
    "8194": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8196": {
      "op": "ADD"
    },
    "8197": {
      "op": "PUSH2",
      "value": "0x1F5F"
    },
    "8200": {
      "op": "JUMP"
    },
    "8201": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8202": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "POP",
      "path": "1"
    },
    "8203": {
      "fn": "SafeMath.div",
      "offset": [
        3927,
        3936
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8205": {
      "fn": "SafeMath.div",
      "offset": [
        3943,
        3944
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8206": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3940
      ],
      "op": "DUP6",
      "path": "1"
    },
    "8207": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8208": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2015"
    },
    "8211": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8212": {
      "dev": "Division by zero",
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "INVALID",
      "path": "1"
    },
    "8213": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8214": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "DIV",
      "path": "1"
    },
    "8215": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "8216": {
      "fn": "SafeMath.div",
      "offset": [
        3718,
        4056
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "8217": {
      "op": "POP"
    },
    "8218": {
      "op": "POP"
    },
    "8219": {
      "op": "POP"
    },
    "8220": {
      "op": "POP"
    },
    "8221": {
      "op": "POP"
    },
    "8222": {
      "fn": "SafeMath.div",
      "jump": "o",
      "offset": [
        3718,
        4056
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8223": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        2666,
        3761
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8224": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3261,
        3288
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 73,
      "value": "0x2031"
    },
    "8227": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3269,
        3274
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8228": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8232": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8234": {
      "op": "SHL"
    },
    "8235": {
      "op": "SUB"
    },
    "8236": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3261,
        3286
      ],
      "op": "AND",
      "path": "6"
    },
    "8237": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3261,
        3286
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x21D7"
    },
    "8240": {
      "fn": "SafeERC20.callOptionalReturn",
      "jump": "i",
      "offset": [
        3261,
        3288
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8241": {
      "branch": 104,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3261,
        3288
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8242": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2082"
    },
    "8245": {
      "branch": 104,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "8246": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8248": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8249": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8250": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8254": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8256": {
      "op": "SHL"
    },
    "8257": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8258": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8259": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8261": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "8263": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8264": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "ADD",
      "path": "6"
    },
    "8265": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8266": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "8268": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "8270": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8271": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "ADD",
      "path": "6"
    },
    "8272": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8273": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400"
    },
    "8306": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "8308": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8309": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "ADD",
      "path": "6"
    },
    "8310": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8311": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8312": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8313": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8314": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8315": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8316": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "SUB",
      "path": "6"
    },
    "8317": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "8319": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "ADD",
      "path": "6"
    },
    "8320": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8321": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "REVERT",
      "path": "6"
    },
    "8322": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8323": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3395,
        3407
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8325": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3409,
        3432
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "8327": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3444,
        3449
      ],
      "op": "DUP4",
      "path": "6"
    },
    "8328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8332": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8334": {
      "op": "SHL"
    },
    "8335": {
      "op": "SUB"
    },
    "8336": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3455
      ],
      "op": "AND",
      "path": "6"
    },
    "8337": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3456,
        3460
      ],
      "op": "DUP4",
      "path": "6"
    },
    "8338": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8340": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8341": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8342": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8343": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8344": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8345": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8346": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8348": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "ADD",
      "path": "6"
    },
    "8349": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8350": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8351": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP4",
      "path": "6"
    },
    "8352": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP4",
      "path": "6"
    },
    "8353": {
      "op": "JUMPDEST"
    },
    "8354": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8356": {
      "op": "DUP4"
    },
    "8357": {
      "op": "LT"
    },
    "8358": {
      "op": "PUSH2",
      "value": "0x20C0"
    },
    "8361": {
      "op": "JUMPI"
    },
    "8362": {
      "op": "DUP1"
    },
    "8363": {
      "op": "MLOAD"
    },
    "8364": {
      "op": "DUP3"
    },
    "8365": {
      "op": "MSTORE"
    },
    "8366": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8368": {
      "op": "NOT"
    },
    "8369": {
      "op": "SWAP1"
    },
    "8370": {
      "op": "SWAP3"
    },
    "8371": {
      "op": "ADD"
    },
    "8372": {
      "op": "SWAP2"
    },
    "8373": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8375": {
      "op": "SWAP2"
    },
    "8376": {
      "op": "DUP3"
    },
    "8377": {
      "op": "ADD"
    },
    "8378": {
      "op": "SWAP2"
    },
    "8379": {
      "op": "ADD"
    },
    "8380": {
      "op": "PUSH2",
      "value": "0x20A1"
    },
    "8383": {
      "op": "JUMP"
    },
    "8384": {
      "op": "JUMPDEST"
    },
    "8385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8387": {
      "op": "DUP4"
    },
    "8388": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8390": {
      "op": "SUB"
    },
    "8391": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "8394": {
      "op": "EXP"
    },
    "8395": {
      "op": "SUB"
    },
    "8396": {
      "op": "DUP1"
    },
    "8397": {
      "op": "NOT"
    },
    "8398": {
      "op": "DUP3"
    },
    "8399": {
      "op": "MLOAD"
    },
    "8400": {
      "op": "AND"
    },
    "8401": {
      "op": "DUP2"
    },
    "8402": {
      "op": "DUP5"
    },
    "8403": {
      "op": "MLOAD"
    },
    "8404": {
      "op": "AND"
    },
    "8405": {
      "op": "DUP1"
    },
    "8406": {
      "op": "DUP3"
    },
    "8407": {
      "op": "OR"
    },
    "8408": {
      "op": "DUP6"
    },
    "8409": {
      "op": "MSTORE"
    },
    "8410": {
      "op": "POP"
    },
    "8411": {
      "op": "POP"
    },
    "8412": {
      "op": "POP"
    },
    "8413": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "8414": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "8415": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "8416": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8417": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "8418": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "ADD",
      "path": "6"
    },
    "8419": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8420": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "8421": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "8422": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8424": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8426": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8427": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8428": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP4",
      "path": "6"
    },
    "8429": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SUB",
      "path": "6"
    },
    "8430": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8431": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8433": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP7",
      "path": "6"
    },
    "8434": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "GAS",
      "path": "6"
    },
    "8435": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "CALL",
      "path": "6"
    },
    "8436": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8437": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "8438": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "8439": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "8440": {
      "op": "DUP1"
    },
    "8441": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8443": {
      "op": "DUP2"
    },
    "8444": {
      "op": "EQ"
    },
    "8445": {
      "op": "PUSH2",
      "value": "0x2122"
    },
    "8448": {
      "op": "JUMPI"
    },
    "8449": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8451": {
      "op": "MLOAD"
    },
    "8452": {
      "op": "SWAP2"
    },
    "8453": {
      "op": "POP"
    },
    "8454": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8456": {
      "op": "NOT"
    },
    "8457": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "8459": {
      "op": "RETURNDATASIZE"
    },
    "8460": {
      "op": "ADD"
    },
    "8461": {
      "op": "AND"
    },
    "8462": {
      "op": "DUP3"
    },
    "8463": {
      "op": "ADD"
    },
    "8464": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8466": {
      "op": "MSTORE"
    },
    "8467": {
      "op": "RETURNDATASIZE"
    },
    "8468": {
      "op": "DUP3"
    },
    "8469": {
      "op": "MSTORE"
    },
    "8470": {
      "op": "RETURNDATASIZE"
    },
    "8471": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8473": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8475": {
      "op": "DUP5"
    },
    "8476": {
      "op": "ADD"
    },
    "8477": {
      "op": "RETURNDATACOPY"
    },
    "8478": {
      "op": "PUSH2",
      "value": "0x2127"
    },
    "8481": {
      "op": "JUMP"
    },
    "8482": {
      "op": "JUMPDEST"
    },
    "8483": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8485": {
      "op": "SWAP2"
    },
    "8486": {
      "op": "POP"
    },
    "8487": {
      "op": "JUMPDEST"
    },
    "8488": {
      "op": "POP"
    },
    "8489": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3394,
        3461
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8490": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3394,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "8491": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3394,
        3461
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8492": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3394,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "8493": {
      "branch": 105,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3479,
        3486
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 74
    },
    "8494": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x217E"
    },
    "8497": {
      "branch": 105,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "8498": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8500": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8501": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8502": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8506": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8508": {
      "op": "SHL"
    },
    "8509": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8510": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8511": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8513": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "8515": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8516": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "ADD",
      "path": "6"
    },
    "8517": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8518": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8519": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8520": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "8522": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8523": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "ADD",
      "path": "6"
    },
    "8524": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8525": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "8558": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "8560": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8561": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "ADD",
      "path": "6"
    },
    "8562": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8563": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8564": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8565": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8566": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8567": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8568": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SUB",
      "path": "6"
    },
    "8569": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "8571": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "ADD",
      "path": "6"
    },
    "8572": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8573": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "REVERT",
      "path": "6"
    },
    "8574": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8575": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3538,
        3555
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8576": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3538,
        3555
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8577": {
      "branch": 106,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3538,
        3559
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "8578": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3534,
        3755
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x925"
    },
    "8581": {
      "branch": 106,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3534,
        3755
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "8582": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3678,
        3688
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 75
    },
    "8583": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8584": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8586": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "ADD",
      "path": "6"
    },
    "8587": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8588": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8589": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8591": {
      "op": "DUP2"
    },
    "8592": {
      "op": "LT"
    },
    "8593": {
      "op": "ISZERO"
    },
    "8594": {
      "op": "PUSH2",
      "value": "0x219A"
    },
    "8597": {
      "op": "JUMPI"
    },
    "8598": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8600": {
      "op": "DUP1"
    },
    "8601": {
      "op": "REVERT"
    },
    "8602": {
      "op": "JUMPDEST"
    },
    "8603": {
      "op": "POP"
    },
    "8604": {
      "branch": 107,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8605": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x925"
    },
    "8608": {
      "branch": 107,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "8609": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8611": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8612": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8616": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8618": {
      "op": "SHL"
    },
    "8619": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8620": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8621": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "8623": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "ADD",
      "path": "6"
    },
    "8624": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8625": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8626": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8628": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "ADD",
      "path": "6"
    },
    "8629": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8630": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8631": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SUB",
      "path": "6"
    },
    "8632": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8633": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8634": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2A"
    },
    "8636": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8637": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8638": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8640": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "ADD",
      "path": "6"
    },
    "8641": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8642": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2255"
    },
    "8645": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2A"
    },
    "8647": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8648": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "CODECOPY",
      "path": "6"
    },
    "8649": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8651": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "ADD",
      "path": "6"
    },
    "8652": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8653": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "POP",
      "path": "6"
    },
    "8654": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "POP",
      "path": "6"
    },
    "8655": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8657": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8658": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8659": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8660": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SUB",
      "path": "6"
    },
    "8661": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8662": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "REVERT",
      "path": "6"
    },
    "8663": {
      "fn": "Address.isContract",
      "offset": [
        686,
        1296
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8664": {
      "fn": "Address.isContract",
      "offset": [
        746,
        750
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "8666": {
      "fn": "Address.isContract",
      "offset": [
        1207,
        1227
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8667": {
      "fn": "Address.isContract",
      "offset": [
        1207,
        1227
      ],
      "op": "EXTCODEHASH",
      "path": "7"
    },
    "8668": {
      "fn": "Address.isContract",
      "offset": [
        1052,
        1118
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470"
    },
    "8701": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 76
    },
    "8702": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8703": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "EQ",
      "path": "7"
    },
    "8704": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "DUP1",
      "path": "7"
    },
    "8705": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "8706": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8707": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1288
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x220B"
    },
    "8710": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1288
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "8711": {
      "op": "POP"
    },
    "8712": {
      "fn": "Address.isContract",
      "offset": [
        1273,
        1288
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8713": {
      "fn": "Address.isContract",
      "offset": [
        1273,
        1288
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "8714": {
      "fn": "Address.isContract",
      "offset": [
        1273,
        1288
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "8715": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1288
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8716": {
      "fn": "Address.isContract",
      "offset": [
        1238,
        1289
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "8717": {
      "fn": "Address.isContract",
      "offset": [
        686,
        1296
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "8718": {
      "op": "POP"
    },
    "8719": {
      "op": "POP"
    },
    "8720": {
      "op": "POP"
    },
    "8721": {
      "op": "POP"
    },
    "8722": {
      "fn": "Address.isContract",
      "jump": "o",
      "offset": [
        686,
        1296
      ],
      "op": "JUMP",
      "path": "7"
    }
  },
  "sha1": "b2ba647941acacca2b065a6b56fb72a5e0b58ed5",
  "source": "// SPDX-License-Identifier: AGPL-3.0\n\npragma solidity ^0.5.17;\n\nimport \"@openzeppelinV2/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelinV2/contracts/math/SafeMath.sol\";\nimport \"@openzeppelinV2/contracts/utils/Address.sol\";\nimport \"@openzeppelinV2/contracts/token/ERC20/SafeERC20.sol\";\n\nimport \"../../interfaces/yearn/IController.sol\";\nimport \"../../interfaces/curve/Gauge.sol\";\nimport \"../../interfaces/curve/Mintr.sol\";\nimport \"../../interfaces/uniswap/Uni.sol\";\nimport \"../../interfaces/curve/Curve.sol\";\nimport \"../../interfaces/yearn/IVoterProxy.sol\";\n\ncontract StrategyCurveEURVoterProxy {\n    using SafeERC20 for IERC20;\n    using Address for address;\n    using SafeMath for uint256;\n\n    address public constant want = address(0x194eBd173F6cDacE046C53eACcE9B953F28411d1);\n    address public constant crv = address(0xD533a949740bb3306d119CC777fa900bA034cd52);\n\n    address public constant curve = address(0x0Ce6a5fF5217e38315f87032CF90686C96627CAA);\n    address public constant gauge = address(0x90Bb609649E0451E5aD952683D64BD2d1f245840);\n    address public constant voter = address(0xF147b8125d2ef93FB6965Db97D6746952a133934);\n\n    address public constant eurs = address(0xdB25f211AB05b1c97D595516F45794528a807ad8);\n    address public constant usdc = address(0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48);\n    address public constant weth = address(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2); // used for crv <> weth <> usdc <> eurs route\n\n    uint256 public keepCRV = 500;\n    uint256 public treasuryFee = 1000;\n    uint256 public strategistReward = 1000;\n    uint256 public withdrawalFee = 0;\n    uint256 public constant FEE_DENOMINATOR = 10000;\n\n    address public proxy;\n    address public dex;\n\n    address public governance;\n    address public controller;\n    address public strategist;\n    address public keeper;\n\n    uint256 public earned; // lifetime strategy earnings denominated in `want` token\n\n    event Harvested(uint256 wantEarned, uint256 lifetimeEarned);\n\n    constructor(address _controller) public {\n        governance = msg.sender;\n        strategist = msg.sender;\n        keeper = msg.sender;\n        controller = _controller;\n        // standardize constructor\n        proxy = address(0xC17ADf949f524213a540609c386035D7D685B16F);\n        dex = address(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\n    }\n\n    function getName() external pure returns (string memory) {\n        return \"StrategyCurveEURVoterProxy\";\n    }\n\n    function setStrategist(address _strategist) external {\n        require(msg.sender == strategist || msg.sender == governance, \"!authorized\");\n        strategist = _strategist;\n    }\n\n    function setKeeper(address _keeper) external {\n        require(msg.sender == strategist || msg.sender == governance, \"!authorized\");\n        keeper = _keeper;\n    }\n\n    function setKeepCRV(uint256 _keepCRV) external {\n        require(msg.sender == governance, \"!governance\");\n        keepCRV = _keepCRV;\n    }\n\n    function setWithdrawalFee(uint256 _withdrawalFee) external {\n        require(msg.sender == governance, \"!governance\");\n        withdrawalFee = _withdrawalFee;\n    }\n\n    function setTreasuryFee(uint256 _treasuryFee) external {\n        require(msg.sender == governance, \"!governance\");\n        treasuryFee = _treasuryFee;\n    }\n\n    function setStrategistReward(uint256 _strategistReward) external {\n        require(msg.sender == governance, \"!governance\");\n        strategistReward = _strategistReward;\n    }\n\n    function setProxy(address _proxy) external {\n        require(msg.sender == governance, \"!governance\");\n        proxy = _proxy;\n    }\n\n    function deposit() public {\n        uint256 _want = IERC20(want).balanceOf(address(this));\n        if (_want > 0) {\n            IERC20(want).safeTransfer(proxy, _want);\n            IVoterProxy(proxy).deposit(gauge, want);\n        }\n    }\n\n    // Controller only function for creating additional rewards from dust\n    function withdraw(IERC20 _asset) external returns (uint256 balance) {\n        require(msg.sender == controller, \"!controller\");\n        require(want != address(_asset), \"want\");\n        require(crv != address(_asset), \"crv\");\n        require(eurs != address(_asset), \"eurs\");\n        balance = _asset.balanceOf(address(this));\n        _asset.safeTransfer(controller, balance);\n    }\n\n    // Withdraw partial funds, normally used with a vault withdrawal\n    function withdraw(uint256 _amount) external {\n        require(msg.sender == controller, \"!controller\");\n        uint256 _balance = IERC20(want).balanceOf(address(this));\n        if (_balance < _amount) {\n            _amount = _withdrawSome(_amount.sub(_balance));\n            _amount = _amount.add(_balance);\n        }\n\n        uint256 _fee = _amount.mul(withdrawalFee).div(FEE_DENOMINATOR);\n\n        IERC20(want).safeTransfer(IController(controller).rewards(), _fee);\n        address _vault = IController(controller).vaults(address(want));\n        require(_vault != address(0), \"!vault\"); // additional protection so we don't burn the funds\n        IERC20(want).safeTransfer(_vault, _amount.sub(_fee));\n    }\n\n    function _withdrawSome(uint256 _amount) internal returns (uint256) {\n        return IVoterProxy(proxy).withdraw(gauge, want, _amount);\n    }\n\n    // Withdraw all funds, normally used when migrating strategies\n    function withdrawAll() external returns (uint256 balance) {\n        require(msg.sender == controller, \"!controller\");\n        _withdrawAll();\n\n        balance = IERC20(want).balanceOf(address(this));\n\n        address _vault = IController(controller).vaults(address(want));\n        require(_vault != address(0), \"!vault\"); // additional protection so we don't burn the funds\n        IERC20(want).safeTransfer(_vault, balance);\n    }\n\n    function _withdrawAll() internal {\n        IVoterProxy(proxy).withdrawAll(gauge, want);\n    }\n\n    function harvest() public {\n        require(msg.sender == keeper || msg.sender == strategist || msg.sender == governance, \"!keepers\");\n        IVoterProxy(proxy).harvest(gauge);\n        uint256 _crv = IERC20(crv).balanceOf(address(this));\n        if (_crv > 0) {\n            uint256 _keepCRV = _crv.mul(keepCRV).div(FEE_DENOMINATOR);\n            IERC20(crv).safeTransfer(voter, _keepCRV);\n            _crv = _crv.sub(_keepCRV);\n\n            IERC20(crv).safeApprove(dex, 0);\n            IERC20(crv).safeApprove(dex, _crv);\n\n            address[] memory path = new address[](4);\n            path[0] = crv;\n            path[1] = weth;\n            path[2] = usdc;\n            path[3] = eurs;\n\n            Uni(dex).swapExactTokensForTokens(_crv, uint256(0), path, address(this), now.add(1800));\n        }\n        uint256 _eurs = IERC20(eurs).balanceOf(address(this));\n        if (_eurs > 0) {\n            IERC20(eurs).safeApprove(curve, 0);\n            IERC20(eurs).safeApprove(curve, _eurs);\n            ICurveFi(curve).add_liquidity([_eurs, 0], 0);\n        }\n        uint256 _want = IERC20(want).balanceOf(address(this));\n        if (_want > 0) {\n            uint256 _fee = _want.mul(treasuryFee).div(FEE_DENOMINATOR);\n            uint256 _reward = _want.mul(strategistReward).div(FEE_DENOMINATOR);\n            IERC20(want).safeTransfer(IController(controller).rewards(), _fee);\n            IERC20(want).safeTransfer(strategist, _reward);\n            deposit();\n        }\n        IVoterProxy(proxy).lock();\n        earned = earned.add(_want);\n        emit Harvested(_want, earned);\n    }\n\n    function balanceOfWant() public view returns (uint256) {\n        return IERC20(want).balanceOf(address(this));\n    }\n\n    function balanceOfPool() public view returns (uint256) {\n        return IVoterProxy(proxy).balanceOf(gauge);\n    }\n\n    function balanceOf() public view returns (uint256) {\n        return balanceOfWant().add(balanceOfPool());\n    }\n\n    function setGovernance(address _governance) external {\n        require(msg.sender == governance, \"!governance\");\n        governance = _governance;\n    }\n\n    function setController(address _controller) external {\n        require(msg.sender == governance, \"!governance\");\n        controller = _controller;\n    }\n}\n",
  "sourceMap": "565:7547:20:-;;;1483:3;1458:28;;1521:4;1492:33;;1565:4;1531:38;;1606:1;1575:32;;1991:347;8:9:-1;5:2;;;30:1;27;20:12;5:2;1991:347:20;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1991:347:20;2041:10;:23;;-1:-1:-1;;;;;;2041:23:20;;;2054:10;2041:23;;;;;;2074:10;:23;;;;;;;;2107:6;:19;;;;;;;;;;2136:10;:24;;-1:-1:-1;;;;;2136:24:20;;;;;;;;;;;;;2205:5;:59;;;;2221:42;2205:59;;;-1:-1:-1;2274:57:20;;;;;2288:42;2274:57;;;565:7547;;;;;;",
  "sourcePath": "contracts/strategies/StrategyCurveEURVoterProxy.sol",
  "type": "contract"
}